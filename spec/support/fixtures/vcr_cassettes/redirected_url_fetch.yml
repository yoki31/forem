---
http_interactions:
  - request:
      method: head
      uri: https://bit.ly/hoagintake
      body:
        encoding: US-ASCII
        string: ''
      headers:
        Accept:
          - '*/*'
        User-Agent:
          - DEV(local) (http://localhost:3000)
    response:
      status:
        code: 301
        message: Moved Permanently
      headers:
        Server:
          - nginx
        Date:
          - Wed, 06 Apr 2022 15:58:54 GMT
        Content-Type:
          - text/html; charset=utf-8
        Content-Length:
          - '127'
        Cache-Control:
          - private, max-age=90
        Content-Security-Policy:
          - referrer always;
        Location:
          - https://form.jotform.com/203654643392054
        Referrer-Policy:
          - unsafe-url
        Via:
          - 1.1 google
        Alt-Svc:
          - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      body:
        encoding: UTF-8
        string: ''
    recorded_at: Wed, 06 Apr 2022 15:58:54 GMT
  - request:
      method: head
      uri: https://form.jotform.com/203654643392054
      body:
        encoding: US-ASCII
        string: ''
      headers:
        Accept:
          - '*/*'
        User-Agent:
          - DEV(local) (http://localhost:3000)
    response:
      status:
        code: 200
        message: OK
      headers:
        Access-Control-Allow-Origin:
          - '*'
        Cache-Control:
          - no-cache
        Cache-Hit:
          - '1'
        Content-Type:
          - text/html; charset=utf-8
        Expires:
          - Thu, 01 Jan 1970 00:00:01 GMT
        Server:
          - CacheX v2.1
        Vary:
          - Accept-Encoding
        Date:
          - Wed, 06 Apr 2022 15:58:54 GMT
        Via:
          - 1.1 google
        Transfer-Encoding:
          - chunked
        Alt-Svc:
          - clear
      body:
        encoding: UTF-8
        string: ''
    recorded_at: Wed, 06 Apr 2022 15:58:54 GMT
  - request:
      method: get
      uri: https://bit.ly/hoagintake
      body:
        encoding: US-ASCII
        string: ''
      headers:
        User-Agent:
          - MetaInspector/5.12.0 (+https://github.com/jaimeiniesta/metainspector)
        Accept-Encoding:
          - identity
        X-Honeycomb-Trace:
          - 1;dataset=,trace_id=17ebef657518adec98b8e7e67dd6e2f2,parent_id=766d53a6f5141e8c,context=e30=
        Accept:
          - '*/*'
    response:
      status:
        code: 301
        message: Moved Permanently
      headers:
        Server:
          - nginx
        Date:
          - Wed, 06 Apr 2022 15:58:54 GMT
        Content-Type:
          - text/html; charset=utf-8
        Content-Length:
          - '127'
        Cache-Control:
          - private, max-age=90
        Content-Security-Policy:
          - referrer always;
        Location:
          - https://form.jotform.com/203654643392054
        Referrer-Policy:
          - unsafe-url
        Via:
          - 1.1 google
        Alt-Svc:
          - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      body:
        encoding: UTF-8
        string: |-
          <html>
          <head><title>Bitly</title></head>
          <body><a href="https://form.jotform.com/203654643392054">moved here</a></body>
          </html>
    recorded_at: Wed, 06 Apr 2022 15:58:54 GMT
  - request:
      method: get
      uri: https://form.jotform.com/203654643392054
      body:
        encoding: US-ASCII
        string: ''
      headers:
        User-Agent:
          - MetaInspector/5.12.0 (+https://github.com/jaimeiniesta/metainspector)
        Accept-Encoding:
          - identity
        X-Honeycomb-Trace:
          - 1;dataset=,trace_id=658612c11533ec32e9da1a2b8f6984d0,parent_id=208945ce1c5c0b6d,context=e30=
        Accept:
          - '*/*'
    response:
      status:
        code: 200
        message: OK
      headers:
        Access-Control-Allow-Origin:
          - '*'
        Cache-Control:
          - no-cache
        Cache-Hit:
          - '1'
        Content-Type:
          - text/html; charset=utf-8
        Expires:
          - Thu, 01 Jan 1970 00:00:01 GMT
        Server:
          - CacheX v2.1
        Vary:
          - Accept-Encoding
        Date:
          - Wed, 06 Apr 2022 15:58:54 GMT
        Transfer-Encoding:
          - chunked
        Via:
          - 1.1 google
        Alt-Svc:
          - clear
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sIGxhbmc9ImVuLVVTIiAgY2xhc3M9InN1cGVybm92YSI+PGhlYWQ+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiAvPgo8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0iYXBwbGljYXRpb24vanNvbitvZW1iZWQiIGhyZWY9Imh0dHBzOi8vd3d3LmpvdGZvcm0uY29tL29lbWJlZC8/Zm9ybWF0PWpzb24mYW1wO3VybD1odHRwcyUzQSUyRiUyRmZvcm0uam90Zm9ybS5jb20lMkYyMDM2NTQ2NDMzOTIwNTQiIHRpdGxlPSJvRW1iZWQgRm9ybSI+CjxsaW5rIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L3htbCtvZW1iZWQiIGhyZWY9Imh0dHBzOi8vd3d3LmpvdGZvcm0uY29tL29lbWJlZC8/Zm9ybWF0PXhtbCZhbXA7dXJsPWh0dHBzJTNBJTJGJTJGZm9ybS5qb3Rmb3JtLmNvbSUyRjIwMzY1NDY0MzM5MjA1NCIgdGl0bGU9Im9FbWJlZCBGb3JtIj4KPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJIT0FHIEFncmVlbWVudCAmYW1wOyBJbnRha2UgRm9ybSIgPgo8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL2Zvcm0uam90Zm9ybS5jb20vMjAzNjU0NjQzMzkyMDU0IiA+CjxtZXRhIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iUGxlYXNlIGNsaWNrIHRoZSBsaW5rIHRvIGNvbXBsZXRlIHRoaXMgZm9ybS4iID4KPG1ldGEgbmFtZT0ic2xhY2stYXBwLWlkIiBjb250ZW50PSJBSE5NQVNTOE0iPgo8bWV0YSBkYXRhLW5hbWU9InByZXZlbnRDbG9uaW5nIiBjb250ZW50PSIxIj4KPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSJodHRwczovL2Nkbi5qb3Rmb3IubXMvYXNzZXRzL2ltZy9mYXZpY29ucy9mYXZpY29uLTIwMjEuc3ZnIj4KPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHBzOi8vZm9ybS5qb3Rmb3JtLmNvbS8yMDM2NTQ2NDMzOTIwNTQiIC8+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTIuMCwgdXNlci1zY2FsYWJsZT0xIiAvPgo8bWV0YSBuYW1lPSJIYW5kaGVsZEZyaWVuZGx5IiBjb250ZW50PSJ0cnVlIiAvPgo8dGl0bGU+SE9BRyBBZ3JlZW1lbnQgJmFtcDsgSW50YWtlIEZvcm08L3RpdGxlPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPkBtZWRpYSBwcmludHsuZm9ybS1zZWN0aW9ue2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZm9ybS1wYWdlYnJlYWt7ZGlzcGxheTpub25lIWltcG9ydGFudH0uZm9ybS1zZWN0aW9uLWNsb3NlZHtoZWlnaHQ6YXV0byFpbXBvcnRhbnR9LnBhZ2Utc2VjdGlvbntwb3NpdGlvbjppbml0aWFsIWltcG9ydGFudH19PC9zdHlsZT4KPGxpbmsgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG4wMS5qb3Rmb3IubXMvdGhlbWVzL0NTUy81ZTZiNDI4YWNjOGM0ZTIyMmQxYmViOTEuY3NzPyIvPgo8bGluayB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbjAyLmpvdGZvci5tcy9jc3Mvc3R5bGVzL3BheW1lbnQvcGF5bWVudF9zdHlsZXMuY3NzPzMuMy4yOTM1MSIgLz4KPGxpbmsgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG4wMy5qb3Rmb3IubXMvY3NzL3N0eWxlcy9wYXltZW50L3BheW1lbnRfZmVhdHVyZS5jc3M/My4zLjI5MzUxIiAvPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiIGlkPSJmb3JtLWRlc2lnbmVyLXN0eWxlIj4KICAgIC8qIEluamVjdGVkIENTUyBDb2RlICovCgogIAogIAogIAogIAogIAogIAogIAogIAogIAogIAogIAogIC8qUFJFRkVSRU5DRVMgU1RZTEUqLwogIC8qIE5FVyBUSEVNRSBTVFlMRSAqLwoKICAvKiBjb2xvcnMgKi8KCiAgLmZvcm0tdGV4dGJveCwgLmZvcm0tdGV4dGFyZWEgewogICAgY29sb3I6ICMyYzMzNDU7CiAgfQogIC5yYXRpbmctaXRlbSBpbnB1dDpob3ZlcitsYWJlbCB7CiAgICBjb2xvcjogIzJlNjlmZjsKICB9CiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfZmlsZXVwbG9hZF0gLnFxLXVwbG9hZC1idXR0b24sCiAgLnVudGlsLXRleHQsCiAgLmZvcm0tc3VibWl0LXJlc2V0IHsKICAgIGNvbG9yOiAjMmMzMzQ1OwogIH0KCiAgLnN0YWdlRW1wdHkuaXNTbWFsbHsKICAgIGNvbG9yOiAjQ0FEMENGOwogIH0KCiAgLnJhdGluZy1pdGVtIGxhYmVsIHsKICAgIGNvbG9yOiAjODg5NGFiOwogIH0KICAuY3VycmVudERhdGUsCiAgLnBpY2tlckl0ZW0gc2VsZWN0LAogIC5hcHBvaW50bWVudENhbGVuZGFyIC5jYWxlbmRhckRheSwKICAuY2FsZW5kYXIucG9wdXAgdGgsCiAgLmNhbGVuZGFyLnBvcHVwIHRhYmxlIHRib2R5IHRkLAogIC5jYWxlbmRhci1uZXctaGVhZGVyPiosCiAgLmZvcm0tY29sbGFwc2UtdGFibGUgewogICAgY29sb3I6ICMyQzMzNDU7CiAgfQogIC5hcHBvaW50bWVudENhbGVuZGFyIC5kYXlPZldlZWsgewogICAgY29sb3I6ICMyZTY5ZmY7CiAgfQogIC5hcHBvaW50bWVudFNsb3RzQ29udGFpbmVyID4gKiB7CiAgICBjb2xvcjogIzJlNjlmZjsKICB9CiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfZmlsZXVwbG9hZF0gLmpmVXBsb2FkLWhlYWRpbmcsCiAgOjpwbGFjZWhvbGRlciwKICAuZm9ybS1kcm9wZG93bi5pcy1hY3RpdmUsCiAgLmZvcm0tZHJvcGRvd246Zmlyc3QtY2hpbGQsCiAgLmZvcm0tc3Bpbm5lci1pbnB1dCB7CiAgICBjb2xvcjogIzU3NjQ3ZTsKICB9CiAgLmFwcG9pbnRtZW50Q2FsZW5kYXIgLmNhbGVuZGFyV2VlayAuY2FsZW5kYXJEYXkuaXNVbmF2YWlsYWJsZSwKICAuY2FsZW5kYXIgdHIuZGF5cyB0ZC5vdGhlckRheSwKICAuY2FsZW5kYXIgdHIuZGF5cyB0ZDpob3Zlcjpub3QoLnVuc2VsZWN0YWJsZSkgewogICAgY29sb3I6ICNDQUQwQ0Y7CiAgfQogIHNwYW4uZm9ybS1zdWItbGFiZWwsIGxhYmVsLmZvcm0tc3ViLWxhYmVsLCBkaXYuZm9ybS1oZWFkZXItZ3JvdXAgLmZvcm0tc3ViSGVhZGVyLAogIC5yYXRpbmctaXRlbS10aXRsZS5mb3ItdG8gPiBsYWJlbDpmaXJzdC1jaGlsZCwKICAucmF0aW5nLWl0ZW0tdGl0bGUuZm9yLWZyb20gPiBsYWJlbDpmaXJzdC1jaGlsZCwKICAucmF0aW5nLWl0ZW0tdGl0bGUgLmVkaXRvci1jb250YWluZXIgKiB7CiAgICBjb2xvcjogIzU3NjQ3RTsKICB9CiAgLmZvcm0tcGFnZWJyZWFrLWJhY2t7CiAgICBjb2xvcjogIzJjMzM0NTsKICB9CiAgLnJhdGluZy1pdGVtIGlucHV0OmNoZWNrZWQrbGFiZWwsCiAgLnJhdGluZy1pdGVtIGlucHV0OmZvY3VzK2xhYmVsIHsKICAgIGNvbG9yOiAjRkZGRkZGOwogIH0KICAuY2xlYXItcGFkLWJ0biB7CiAgICBjb2xvcjogIzU3NjQ3ZTsKICB9CiAgLmZvcm0tdGV4dGJveDo6cGxhY2Vob2xkZXIsCiAgLmZvcm0tZHJvcGRvd246bm90KC50aW1lLWRyb3Bkb3duKTpub3QoOnJlcXVpcmVkKSwKICAuZm9ybS1kcm9wZG93bjpub3QoOnJlcXVpcmVkKSwKICAuZm9ybS1kcm9wZG93bjpyZXF1aXJlZDppbnZhbGlkIHsKICAgIGNvbG9yOiAjODg5NGFiOwogIH0KICAvKiBib3JkZXItY29sb3JzICovCiAgLmZvcm0tZHJvcGRvd24sCiAgLmZvcm0tdGV4dGFyZWEsCiAgLmZvcm0tdGV4dGJveCwKICBsaVtkYXRhLXR5cGU9Y29udHJvbF9maWxldXBsb2FkXSAucXEtdXBsb2FkLWJ1dHRvbiwKICAucmF0aW5nLWl0ZW0gbGFiZWwsCiAgLnJhdGluZy1pdGVtIGlucHV0OmZvY3VzK2xhYmVsLAogIC5yYXRpbmctaXRlbSBpbnB1dDpjaGVja2VkK2xhYmVsLAogIC5qZi1mb3JtLWJ1dHRvbnMsCiAgLmZvcm0tY2hlY2tib3grbGFiZWw6YmVmb3JlLCAuZm9ybS1jaGVja2JveCtzcGFuOmJlZm9yZSwgLmZvcm0tcmFkaW8rbGFiZWw6YmVmb3JlLCAuZm9ybS1yYWRpbytzcGFuOmJlZm9yZSwKICAuc2lnbmF0dXJlLXBhZC1wYXNzaXZlLAogIC5zaWduYXR1cmUtd3JhcHBlciwKICAuYXBwb2ludG1lbnRDYWxlbmRhckNvbnRhaW5lciwKICAuYXBwb2ludG1lbnRGaWVsZCAudGltZXpvbmVQaWNrZXJOYW1lLAogIC5hcHBvaW50bWVudERheVBpY2tlckJ1dHRvbiwKICAuYXBwb2ludG1lbnRDYWxlbmRhckNvbnRhaW5lciAubW9udGhZZWFyUGlja2VyIC5waWNrZXJJdGVtKy5waWNrZXJJdGVtLAogIC5hcHBvaW50bWVudENhbGVuZGFyQ29udGFpbmVyIC5tb250aFllYXJQaWNrZXIsCiAgLmFwcG9pbnRtZW50Q2FsZW5kYXIgLmNhbGVuZGFyRGF5LmlzQWN0aXZlIC5jYWxlbmRhckRheUVhY2gsIC5hcHBvaW50bWVudENhbGVuZGFyIC5jYWxlbmRhckRheS5pc1RvZGF5IC5jYWxlbmRhckRheUVhY2gsIC5hcHBvaW50bWVudENhbGVuZGFyIC5jYWxlbmRhckRheTpub3QoLmVtcHR5KTpob3ZlciAuY2FsZW5kYXJEYXlFYWNoLAogIC5jYWxlbmRhci5wb3B1cDpiZWZvcmUsCiAgLmNhbGVuZGFyLW5ldy1tb250aCwKICAuZm9ybS1tYXRyaXgtY29sdW1uLWhlYWRlcnMsIC5mb3JtLW1hdHJpeC10YWJsZSB0ZCwgLmZvcm0tbWF0cml4LXRhYmxlIHRkOmxhc3QtY2hpbGQsCiAgLmZvcm0tbWF0cml4LXRhYmxlIHRoLCAuZm9ybS1tYXRyaXgtdGFibGUgdGg6bGFzdC1jaGlsZCwgLmZvcm0tbWF0cml4LXRhYmxlIHRyOmxhc3QtY2hpbGQgdGQsIC5mb3JtLW1hdHJpeC10YWJsZSB0cjpsYXN0LWNoaWxkIHRoLCAuZm9ybS1tYXRyaXgtdGFibGUgdHI6bm90KFtyb2xlPWdyb3VwXSkrdHJbcm9sZT1ncm91cF0gdGgsCiAgLmZvcm0tbWF0cml4LWhlYWRlcnMuZm9ybS1tYXRyaXgtY29sdW1uLWhlYWRlcnMsCiAgLmlzU2VsZWN0ZWQgLmZvcm0tbWF0cml4LWNvbHVtbi1oZWFkZXJzOm50aC1sYXN0LW9mLXR5cGUoMiksCiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfaW5saW5lXSBpbnB1dFt0eXBlPWVtYWlsXSwgbGlbZGF0YS10eXBlPWNvbnRyb2xfaW5saW5lXSBpbnB1dFt0eXBlPW51bWJlcl0sCiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfaW5saW5lXSBpbnB1dFt0eXBlPXRlbF0sIGxpW2RhdGEtdHlwZT1jb250cm9sX2lubGluZV0gaW5wdXRbdHlwZT10ZXh0XSwKICAuc3RhZ2VFbXB0eS5pc1NtYWxsIHsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgxOTUsIDIwMiwgMjE2LCAwLjc1KTsKICB9CiAgLnJhdGluZy1pdGVtIGlucHV0OmhvdmVyK2xhYmVsIHsKICAgIGJvcmRlci1jb2xvcjogIzJlNjlmZjsKICB9CiAgLmFwcG9pbnRtZW50U2xvdCwKICAuZm9ybS1jaGVja2JveDpjaGVja2VkK2xhYmVsOmJlZm9yZSwgLmZvcm0tY2hlY2tib3g6Y2hlY2tlZCtzcGFuOmJlZm9yZSwgLmZvcm0tY2hlY2tib3g6Y2hlY2tlZCtzcGFuIGxhYmVsOmJlZm9yZSwKICAuZm9ybS1yYWRpbzpjaGVja2VkK2xhYmVsOmJlZm9yZSwgLmZvcm0tcmFkaW86Y2hlY2tlZCtzcGFuOmJlZm9yZSwKICAuZm9ybS1kcm9wZG93bjpmb2N1cywgLmZvcm0tdGV4dGFyZWE6Zm9jdXMsIC5mb3JtLXRleHRib3g6Zm9jdXMsIC5zaWduYXR1cmUtd3JhcHBlcjpmb2N1cywKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD0idHJ1ZSJdIC5mb3JtLXByb2R1Y3QtaXRlbSAucF9jaGVja2JveCAuY2hlY2tlZCwKICAuZm9ybS1kcm9wZG93bjpob3ZlciwgLmZvcm0tdGV4dGFyZWE6aG92ZXIsIC5mb3JtLXRleHRib3g6aG92ZXIsIC5zaWduYXR1cmUtd3JhcHBlcjpob3ZlciB7CiAgICBib3JkZXItY29sb3I6ICMyZTY5ZmY7CiAgfQoKICAuY2FsZW5kYXIgdHIuZGF5cyB0ZDpob3Zlcjpub3QoLnVuc2VsZWN0YWJsZSk6YWZ0ZXIgewogICAgYm9yZGVyLWNvbG9yOiAjZTVlYWY0OwogIH0KICAuZm9ybS1oZWFkZXItZ3JvdXAsCiAgLmZvcm0tYnV0dG9ucy13cmFwcGVyLCAuZm9ybS1wYWdlYnJlYWssIC5mb3JtLXN1Ym1pdC1jbGVhci13cmFwcGVyLAogIC5mb3JtLXBhZ2VicmVhay1uZXh0LAogIC5mb3JtLXBhZ2VicmVhay1iYWNrLAogIC5mb3JtLWNoZWNrYm94OmhvdmVyK2xhYmVsOmJlZm9yZSwgLmZvcm0tY2hlY2tib3g6aG92ZXIrc3BhbjpiZWZvcmUsIC5mb3JtLXJhZGlvOmhvdmVyK2xhYmVsOmJlZm9yZSwgLmZvcm0tcmFkaW86aG92ZXIrc3BhbjpiZWZvcmV7CiAgICBib3JkZXItY29sb3I6ICNFQ0VERjM7CiAgfQogIC8qIGJhY2tncm91bmQtY29sb3JzICovCiAgLmZvcm0tbGluZS1hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0YxRjVGRjsKICB9CiAgLmZvcm0tbGluZS1lcnJvciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZENkQ2OwogIH0KICAuZm9ybS1tYXRyaXgtY29sdW1uLWhlYWRlcnMsIC5mb3JtLW1hdHJpeC1yb3ctaGVhZGVycywKICAuZm9ybS1zcGlubmVyLWJ1dHRvbi1jb250YWluZXI+KiwKICAuZm9ybS1jb2xsYXBzZS10YWJsZSwKICAuZm9ybS1jb2xsYXBzZS10YWJsZTpob3ZlciwKICAuYXBwb2ludG1lbnREYXlQaWNrZXJCdXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZWFmNDsKICB9CiAgLmNhbGVuZGFyLnBvcHVwLCAuY2FsZW5kYXIucG9wdXAgdGFibGUsCiAgLmNhbGVuZGFyLnBvcHVwIHRhYmxlIHRib2R5IHRkOmFmdGVyewogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICB9CgogIC5hcHBvaW50bWVudENhbGVuZGFyIC5jYWxlbmRhckRheS5pc0FjdGl2ZSAuY2FsZW5kYXJEYXlFYWNoLAogIC5hcHBvaW50bWVudEZpZWxkUm93LmZvclNlbGVjdGVkRGF0ZSwKICAuY2FsZW5kYXIucG9wdXAgdHIuZGF5cyB0ZC5zZWxlY3RlZDphZnRlciwKICAuY2FsZW5kYXIucG9wdXA6YWZ0ZXIsCiAgLnN1Ym1pdC1idXR0b24sCiAgLmZvcm0tY2hlY2tib3g6Y2hlY2tlZCtsYWJlbDpiZWZvcmUsIC5mb3JtLWNoZWNrYm94OmNoZWNrZWQrc3BhbjpiZWZvcmUsIC5mb3JtLWNoZWNrYm94OmNoZWNrZWQrc3BhbiBsYWJlbDpiZWZvcmUsCiAgLmZvcm0tcmFkaW8rbGFiZWw6YWZ0ZXIsIC5mb3JtLXJhZGlvK3NwYW46YWZ0ZXIsCiAgLnJhdGluZy1pdGVtIGlucHV0OmNoZWNrZWQrbGFiZWwsCiAgLmFwcG9pbnRtZW50Q2FsZW5kYXIgLmNhbGVuZGFyRGF5OmFmdGVyLAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PSJ0cnVlIl0gLmZvcm0tcHJvZHVjdC1pdGVtIC5wX2NoZWNrYm94IC5jaGVja2VkLAogIC5yYXRpbmctaXRlbSBpbnB1dDpmb2N1cytsYWJlbCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmU2OWZmOwogIH0KICAuYXBwb2ludG1lbnRTbG90LmFjdGl2ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmU2OWZmICFpbXBvcnRhbnQ7CiAgfQogIC5jbGVhci1wYWQtYnRuLAogIC5hcHBvaW50bWVudENhbGVuZGFyIC5kYXlPZldlZWssCiAgLmNhbGVuZGFyLnBvcHVwIHRoIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWYzZmYgIWltcG9ydGFudDsKICB9CiAgLmFwcG9pbnRtZW50RmllbGQgLnRpbWV6b25lUGlja2VyOmhvdmVyKy50aW1lem9uZVBpY2tlck5hbWUsCiAgLmZvcm0tc3Bpbm5lci1idXR0b24tY29udGFpbmVyPio6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZjNmZjsKICB9CiAgLmZvcm0tbWF0cml4LXZhbHVlcywKICAuZm9ybS1tYXRyaXgtdmFsdWVzLAogIC5zaWduYXR1cmUtd3JhcHBlciwKICAuc2lnbmF0dXJlLXBhZC1wYXNzaXZlLAogIC5yYXRpbmctaXRlbSBsYWJlbCwKICAuZm9ybS1jaGVja2JveCtsYWJlbDpiZWZvcmUsIC5mb3JtLWNoZWNrYm94K3NwYW46YmVmb3JlLAogIC5mb3JtLXJhZGlvK2xhYmVsOmJlZm9yZSwgLmZvcm0tcmFkaW8rc3BhbjpiZWZvcmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICB9CiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfZmlsZXVwbG9hZF0gLnFxLXVwbG9hZC1idXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmNmZjsKICB9CiAgLkpvdEZvcm1CdWlsZGVyIC5hcHBDb250YWluZXIgI2FwcCBsaS5mb3JtLWxpbmVbZGF0YS10eXBlPWNvbnRyb2xfbWF0cml4XS5pc1NlbGVjdGVkCiAgLnF1ZXN0aW9uTGluZS1lZGl0QnV0dG9uLmZvclJlbW92ZTphZnRlciwgCiAgLkpvdEZvcm1CdWlsZGVyIC5hcHBDb250YWluZXIgI2FwcCBsaS5mb3JtLWxpbmVbZGF0YS10eXBlPWNvbnRyb2xfbWF0cml4XS5pc1NlbGVjdGVkIC5xdWVzdGlvbkxpbmUtZWRpdEJ1dHRvbi5mb3JSZW1vdmU6YmVmb3JlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM4ODk0YWI7CiAgfQogIC5hcHBvaW50bWVudENhbGVuZGFyQ29udGFpbmVyLCAuYXBwb2ludG1lbnRTbG90LAogIC5yYXRpbmctaXRlbS10aXRsZS5mb3ItdG8gPiBsYWJlbDpmaXJzdC1jaGlsZCwKICAucmF0aW5nLWl0ZW0tdGl0bGUuZm9yLWZyb20gPiBsYWJlbDpmaXJzdC1jaGlsZCwKICAucmF0aW5nLWl0ZW0tdGl0bGUgLmVkaXRvci1jb250YWluZXIgKiwKICAuY2FsZW5kYXItb3BlbmVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIH0KICAuYXBwb2ludG1lbnRDYWxlbmRhciAuY2FsZW5kYXJEYXkuaXNTZWxlY3RlZDphZnRlciB7CiAgICBjb2xvcjogI0ZGRkZGRjsKICB9CiAgLyogc2hhZG93ICovCiAgLmZvcm0tZHJvcGRvd246aG92ZXIsIC5mb3JtLXRleHRhcmVhOmhvdmVyLCAuZm9ybS10ZXh0Ym94OmhvdmVyLCAuc2lnbmF0dXJlLXdyYXBwZXI6aG92ZXIsCiAgLmNhbGVuZGFyLnBvcHVwOmJlZm9yZSwKICAualNpZ25hdHVyZTpob3ZlciwKICBsaVtkYXRhLXR5cGU9Y29udHJvbF9maWxldXBsb2FkXSAucXEtdXBsb2FkLWJ1dHRvbi1ob3ZlciwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD0idHJ1ZSJdIC5mb3JtLXByb2R1Y3QtaXRlbSAucF9jaGVja2JveCAuY2hlY2tlZCwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD0idHJ1ZSJdIC5mb3JtLXByb2R1Y3QtaXRlbSAucF9jaGVja2JveDpob3ZlciAuc2VsZWN0X2JvcmRlciwKICAuZm9ybS1jaGVja2JveDpob3ZlcitsYWJlbDpiZWZvcmUsIC5mb3JtLWNoZWNrYm94OmhvdmVyK3NwYW46YmVmb3JlLCAuZm9ybS1yYWRpbzpob3ZlcitsYWJlbDpiZWZvcmUsIC5mb3JtLXJhZGlvOmhvdmVyK3NwYW46YmVmb3JlLAogIC5jYWxlbmRhci5wb3B1cDpiZWZvcmUgewogICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE2OSwgMTkxLCAyNDksIDAuNSk7CiAgICBib3gtc2hhZG93OiAwIDAgMCAycHggcmdiYSgyMDEsIDIxNiwgMjU0LCAwLjI1KTsKICB9CiAgLmZvcm0tZHJvcGRvd246Zm9jdXMsIC5mb3JtLXRleHRhcmVhOmZvY3VzLCAuZm9ybS10ZXh0Ym94OmZvY3VzLCAuc2lnbmF0dXJlLXdyYXBwZXI6Zm9jdXMsCiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfZmlsZXVwbG9hZF0gLnFxLXVwbG9hZC1idXR0b24tZm9jdXMsCiAgLmZvcm0tY2hlY2tib3g6Zm9jdXMrbGFiZWw6YmVmb3JlLCAuZm9ybS1jaGVja2JveDpmb2N1cytzcGFuOmJlZm9yZSwgLmZvcm0tcmFkaW86Zm9jdXMrbGFiZWw6YmVmb3JlLCAuZm9ybS1yYWRpbzpmb2N1cytzcGFuOmJlZm9yZSwKICAuY2FsZW5kYXIucG9wdXA6YmVmb3JlIHsKICAgIGJvcmRlci1jb2xvcjogcmdiYSg0NiwgMTA1LCAyNTUsIDEpOwogICAgYm94LXNoYWRvdzogMCAwIDAgM3B4IHJnYmEoMjAxLCAyMTYsIDI1NCwgMC4yNSk7CiAgfQogIC5jYWxlbmRhci5wb3B1cCB0YWJsZSB0Ym9keSB0ZHsKICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgfQoKICAvKiBidXR0b24gY29sb3JzICovCiAgLnN1Ym1pdC1idXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzE4QkQ1QjsKICAgIGJvcmRlci1jb2xvcjogIzE4QkQ1QjsKICB9CiAgLnN1Ym1pdC1idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzE2QUE1MjsKICAgIGJvcmRlci1jb2xvcjogIzE2QUE1MjsKICB9CiAgLmZvcm0tcGFnZWJyZWFrLW5leHQgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzJlNjlmZjsKICB9CiAgLmZvcm0tcGFnZWJyZWFrLWJhY2sgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTdmMjsKICB9CiAgLmZvcm0tcGFnZWJyZWFrLWJhY2s6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0NFRDBEQTsKICAgIGJvcmRlci1jb2xvcjogI0NFRDBEQTsKICB9CiAgLmZvcm0tcGFnZWJyZWFrLW5leHQ6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1NTRDQzsKICAgIGJvcmRlci1jb2xvcjogIzI1NTRDQzsKICB9CiAgLmZvcm0tc2FjbC1idXR0b24sIC5mb3JtLXN1Ym1pdC1wcmludCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIGNvbG9yOiAjMmMzMzQ1OwogICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE5NSwgMjAyLCAyMTYsIDAuNzUpOwogIH0KICAuZm9ybS1zYWNsLWJ1dHRvbjpob3ZlciwgLmZvcm0tc3VibWl0LXByaW50OmhvdmVyLAogIC5hcHBvaW50bWVudFNsb3Q6bm90KC5kaXNhYmxlZCk6bm90KC5hY3RpdmUpOmhvdmVyLAogIC5hcHBvaW50bWVudERheVBpY2tlckJ1dHRvbjpob3ZlciwKICAucmF0aW5nLWl0ZW0gaW5wdXQ6aG92ZXIrbGFiZWwgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzk2QjRGRjsKICB9CgogIC8qIHBheW1lbnQgc3R5bGVzICovCiAgCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0gLmZvcm0tdGV4dGJveCwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSAuc2VsZWN0LWFyZWEsCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0gI2NvdXBvbi1pbnB1dCwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSAjY291cG9uLWNvbnRhaW5lciBpbnB1dCwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSBpbnB1dCNwcm9kdWN0U2VhcmNoLWlucHV0LAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIC5mb3JtLXByb2R1Y3QtY2F0ZWdvcnktaXRlbTphZnRlciwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSAuZmlsdGVyLWNvbnRhaW5lciAuZHJvcGRvd24tY29udGFpbmVyIC5zZWxlY3QtY29udGVudCwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSAuZm9ybS10ZXh0Ym94LmZvcm0tcHJvZHVjdC1jdXN0b21fcXVhbnRpdHksCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9InRydWUiXSAuZm9ybS1wcm9kdWN0LWl0ZW0gLnBfY2hlY2tib3ggLnNlbGVjdF9ib3JkZXIsCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9InRydWUiXSAuZm9ybS1wcm9kdWN0LWl0ZW0gLmZvcm0tcHJvZHVjdC1jb250YWluZXIgLmZvcm0tc3ViLWxhYmVsLWNvbnRhaW5lciBzcGFuLnNlbGVjdF9jb250LAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIHNlbGVjdC5mb3JtLWRyb3Bkb3duIHsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgxOTUsIDIwMiwgMjE2LCAwLjc1KTsKICAgIGJvcmRlci1jb2xvcjogI0MzQ0FEODsKICB9CiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9InRydWUiXSBociwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSAucF9pdGVtX3NlcGFyYXRvciwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD0idHJ1ZSJdIC5wYXltZW50X2Zvb3Rlci5uZXdfdWksCiAgLmZvcm0tbGluZS5jYXJkLTNjb2wgLmZvcm0tcHJvZHVjdC1pdGVtLm5ld191aSwKICAuZm9ybS1saW5lLmNhcmQtMmNvbCAuZm9ybS1wcm9kdWN0LWl0ZW0ubmV3X3VpIHsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgxOTUsIDIwMiwgMjE2LCAwLjc1KTsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgxOTUsMjAyLDIxNiwuNSk7CiAgfQogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIC5mb3JtLXByb2R1Y3QtY2F0ZWdvcnktaXRlbSB7CiAgICBib3JkZXItY29sb3I6IHJnYmEoMTk1LCAyMDIsIDIxNiwgMC43NSk7CiAgICBib3JkZXItY29sb3I6ICNkOWRkZTQ7CiAgfQogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdICNjb3Vwb24taW5wdXQsCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0gLmZvcm0tdGV4dGJveC5mb3JtLXByb2R1Y3QtY3VzdG9tX3F1YW50aXR5LAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIGlucHV0I3Byb2R1Y3RTZWFyY2gtaW5wdXQsCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0gLnNlbGVjdC1hcmVhLAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIC5jdXN0b21fcXVhbnRpdHksCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0gLmZpbHRlci1jb250YWluZXIgLnNlbGVjdC1jb250ZW50LAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIC5wX2NoZWNrYm94IC5zZWxlY3RfYm9yZGVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7CiAgfQogIC5mb3JtLXByb2R1Y3QtY2F0ZWdvcnktaXRlbTphZnRlciB7CiAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CiAgIGJvcmRlci1jb2xvcjogI2ZmZmZmZjsKICB9CiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0uZm9ybS1saW5lLmNhcmQtM2NvbCAuZm9ybS1wcm9kdWN0LWl0ZW0sCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0uZm9ybS1saW5lLmNhcmQtMmNvbCAuZm9ybS1wcm9kdWN0LWl0ZW0gewogICBiYWNrZ3JvdW5kLWNvbG9yOiB1bmRlZmluZWQ7CiAgfQogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIC5wYXltZW50LWZvcm0tdGFibGUgaW5wdXQuZm9ybS10ZXh0Ym94LAogIC5mb3JtLWxpbmVbZGF0YS1wYXltZW50PXRydWVdIC5wYXltZW50LWZvcm0tdGFibGUgaW5wdXQuZm9ybS1kcm9wZG93biwKICAuZm9ybS1saW5lW2RhdGEtcGF5bWVudD10cnVlXSAucGF5bWVudC1mb3JtLXRhYmxlIC5mb3JtLXN1Yi1sYWJlbC1jb250YWluZXIgPiBkaXYsCiAgLmZvcm0tbGluZVtkYXRhLXBheW1lbnQ9dHJ1ZV0gLnBheW1lbnQtZm9ybS10YWJsZSBzcGFuLmZvcm0tc3ViLWxhYmVsLWNvbnRhaW5lciBpZnJhbWUsCiAgLmZvcm0tbGluZVtkYXRhLXR5cGU9Y29udHJvbF9zcXVhcmVdIC5wYXltZW50LWZvcm0tdGFibGUgc3Bhbi5mb3JtLXN1Yi1sYWJlbC1jb250YWluZXIgaWZyYW1lIHsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgxOTUsIDIwMiwgMjE2LCAwLjc1KTsKICB9CgogIC8qIGljb25zICovCiAgLmFwcG9pbnRtZW50RmllbGQgLnRpbWV6b25lUGlja2VyTmFtZTpiZWZvcmUgewogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU1UWWlJR2hsYVdkb2REMGlNVFlpSUhacFpYZENiM2c5SWpBZ01DQXhOaUF4TmlJZ1ptbHNiRDBpYm05dVpTSWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklqNEtQSEJoZEdnZ1ptbHNiQzF5ZFd4bFBTSmxkbVZ1YjJSa0lpQmpiR2x3TFhKMWJHVTlJbVYyWlc1dlpHUWlJR1E5SWswd0lEY3VPVFl3TWtNd0lETXVOVFkyTVRjZ015NDFOVGd5TVNBd0lEY3VPVFV5TWpRZ01FTXhNaTR6TlRReUlEQWdNVFV1T1RJd05DQXpMalUyTmpFM0lERTFMamt5TURRZ055NDVOakF5UXpFMUxqa3lNRFFnTVRJdU16VTBNaUF4TWk0ek5UUXlJREUxTGpreU1EUWdOeTQ1TlRJeU5DQXhOUzQ1TWpBMFF6TXVOVFU0TWpFZ01UVXVPVEl3TkNBd0lERXlMak0xTkRJZ01DQTNMamsyTURKYVRURXVOVGt6TnpVZ055NDVOakF5UXpFdU5Ua3pOelVnTVRFdU5EYzROaUEwTGpRME16VWdNVFF1TXpJNE5DQTNMamsyTVRreElERTBMak15T0RSRE1URXVORGd3TXlBeE5DNHpNamcwSURFMExqTXpNREVnTVRFdU5EYzROaUF4TkM0ek16QXhJRGN1T1RZd01rTXhOQzR6TXpBeElEUXVORFF4TnprZ01URXVORGd3TXlBeExqVTVNakEwSURjdU9UWXhPVEVnTVM0MU9USXdORU0wTGpRME16VWdNUzQxT1RJd05DQXhMalU1TXpjMUlEUXVORFF4TnprZ01TNDFPVE0zTlNBM0xqazJNREphSWlCbWFXeHNQU0lqTVRFeE1URXhJaTgrQ2p4d1lYUm9JR1E5SWswNExqTTFPREE1SURNdU9UZ3dORGRJTnk0eE5qUXdObFk0TGpjMU5qVTVUREV4TGpNME16SWdNVEV1TWpZME1Vd3hNUzQ1TkRBeUlERXdMakk0TkRsTU9DNHpOVGd3T1NBNExqRTFPVFUzVmpNdU9UZ3dORGRhSWlCbWFXeHNQU0lqTVRFeE1URXhJaTgrQ2p3dmMzWm5QZ289KTsKICB9CiAgLmFwcG9pbnRtZW50Q2FsZW5kYXJDb250YWluZXIgLm1vbnRoWWVhclBpY2tlciAucGlja2VyQXJyb3cucHJldjphZnRlciB7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlCM2FXUjBhRDBpTVRBaUlHaGxhV2RvZEQwaU5pSWdkbWxsZDBKdmVEMGlNQ0F3SURFd0lEWWlJR1pwYkd3OUltNXZibVVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrQ2p4d1lYUm9JR1E5SWswNExqVTVOemd5SURVdU16TXlOek5ET0M0NU16TXhNaUExTGpZek5qSTNJRGt1TkRNNU16a2dOUzQyTWprMk9TQTVMamMxTmpFeklEVXVNekV5TnpoRE1UQXVNRGd4TXlBMExqazROelExSURFd0xqQTRNVE1nTkM0ME5UazJNeUE1TGpjMU5qRXpJRFF1TVRNME0wTTVMall3T1RBMElETXVPVGsyTXpVZ09TNDJNRGt3TXlBekxqazVOak0xSURrdU1EZzVORGtnTXk0MU1URXhPRU00TGpRek56UXlJREl1T1RBeU1UZ2dPQzQwTXpjME15QXlMamt3TWpFNElEY3VOalUxTVRFZ01pNHhOekUxTmtNMkxqQTRPVFUySURBdU56QTVORFEzSURZdU1EZzVOVFlnTUM0M01EazBORFlnTlM0MU5qYzNNeUF3TGpJeU1qRXdNVU0xTGpJME1UQTBJQzB3TGpBM05EVXdOamNnTkM0M05UQTROU0F0TUM0d056TTFNRE1nTkM0ME16SXpOU0F3TGpJeU1Ua3lPVXd3TGpJMk1qVTBJRFF1TVRFME1qUkRMVEF1TURnd05UUTFPU0EwTGpRMU5UUTFJQzB3TGpBNE56RTNNVEVnTkM0NU9ETTVOeUF3TGpJME1UUTJPQ0ExTGpNeE1qYzRRekF1TlRVNU5UVTRJRFV1TmpNeE1EVWdNUzR3TmprM05TQTFMall6TmpZNElERXVNemszTURNZ05TNHpNekkyTWt3MExqazVPRGt4SURFdU9UY3hNekZNT0M0MU9UYzRNaUExTGpNek1qY3pXaUlnWm1sc2JEMGlJME5HUTBaRFJpSXZQZ284TDNOMlp6NEspOwogIH0KICAuYXBwb2ludG1lbnRDYWxlbmRhckNvbnRhaW5lciAubW9udGhZZWFyUGlja2VyIC5waWNrZXJBcnJvdy5uZXh0OmFmdGVyIHsKICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIzYVdSMGFEMGlNVEFpSUdobGFXZG9kRDBpTmlJZ2RtbGxkMEp2ZUQwaU1DQXdJREV3SURZaUlHWnBiR3c5SW01dmJtVWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SStDanh3WVhSb0lHUTlJazB4TGpRd01qRTRJREF1TWpJek5EazNRekV1TURZMk9EY2dMVEF1TURnd01UQXlPQ0F3TGpVMk1EWXdNaUF0TUM0d056TTFNREk0SURBdU1qUXpPRFk1SURBdU1qUXpNemszUXkwd0xqQTRNVEk0T1RnZ01DNDFOamcyT1RjZ0xUQXVNRGd4TWpnNU9DQXhMakE1TmpZZ01DNHlORE00TmprZ01TNDBNakU1UXpBdU16a3dPVFUySURFdU5UVTVPQ0F3TGpNNU1EazJOaUF4TGpVMU9UZ2dNQzQ1TVRBMU1TQXlMakEwTlVNeExqVTJNalUzSURJdU5qVTBJREV1TlRZeU5UWWdNaTQyTlRRZ01pNHpORFE0T0NBekxqTTRORFpETXk0NU1UQTBOQ0EwTGpnME5qY2dNeTQ1TVRBME15QTBMamcwTmpjZ05DNDBNekl5TnlBMUxqTXpOREZETkM0M05UZzVOU0ExTGpZek1EY2dOUzR5TkRreE5TQTFMall5T1RjZ05TNDFOamMyTkNBMUxqTXpORE5NT1M0M016YzBOaUF4TGpRME1rTXhNQzR3T0RBMUlERXVNVEF3TnlBeE1DNHdPRGN4SURBdU5UY3lNVGszSURrdU56VTROVE1nTUM0eU5ETXpPVGRET1M0ME5EQTBOQ0F0TUM0d056UTVNREk0SURndU9UTXdNalFnTFRBdU1EZ3dOVEF5T0NBNExqWXdNamszSURBdU1qSXpOVGszVERVdU1EQXhNRGdnTXk0MU9EUTVUREV1TkRBeU1UZ2dNQzR5TWpNME9UZGFJaUJtYVd4c1BTSWpRMFpEUmtOR0lpOCtDand2YzNablBnbz0pOwogIH0KICAuYXBwb2ludG1lbnRGaWVsZCAudGltZXpvbmVQaWNrZXJOYW1lOmFmdGVyIHsKICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIzYVdSMGFEMGlNVEFpSUdobGFXZG9kRDBpTmlJZ2RtbGxkMEp2ZUQwaU1DQXdJREV3SURZaUlHWnBiR3c5SW01dmJtVWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SStDanh3WVhSb0lHUTlJazB3TGpBMU1qazVJREF1TWpNMk5UY3lRekF1TURFeE16VTBOaUF3TGpNd056YzROU0F0TUM0d01EWXpNREk0TWlBd0xqTTROelV6TkNBd0xqQXdNVGs1T1RJeklEQXVORFkyT0RkRE1DNHdNVEF6TURFeklEQXVOVFEyTWpBMklEQXVNRFEwTWpNME15QXdMall5TVRrNE9TQXdMakE1T1RrNU1ERWdNQzQyT0RVM01UVk1OQzQxT1RrNU9TQTFMamd5T0RVM1F6UXVOalEyTlRjZ05TNDRPREU0SURRdU56QTJPVFlnTlM0NU1qVWdOQzQzTnpZek9TQTFMamsxTkRjMVF6UXVPRFExT0RJZ05TNDVPRFExTVNBMExqa3lNak0zSURZZ05DNDVPVGs1T1NBMlF6VXVNRGMzTmpJZ05pQTFMakUxTkRFM0lEVXVPVGcwTlRFZ05TNHlNak0ySURVdU9UVTBOelZETlM0eU9UTXdNeUExTGpreU5TQTFMak0xTXpReUlEVXVPRGd4T0NBMUxqUWdOUzQ0TWpnMU4wdzVMamtnTUM0Mk9EVTNNVFJET1M0NU5qUTVNU0F3TGpZeE1UVXpJREV3SURBdU5USXhNekF4SURFd0lEQXVOREk0TlRjeFF6a3VPVGs1TnpFZ01DNHpOakU1TXpnZ09TNDVPREUxTnlBd0xqSTVOakkxTWlBNUxqazBOeUF3TGpJek5qVTNNVU01TGprd05UUXpJREF1TVRZMU5EYzBJRGt1T0RReE5qRWdNQzR4TURVMk9URWdPUzQzTmpJMk55QXdMakEyTXpreE1UVkRPUzQyT0RNM015QXdMakF5TWpFek1UY2dPUzQxT1RJM09DQXlMall3TmpnNVpTMHdOaUE1TGpVZ0xUVXVOell6TURObExUQTRUREF1TkRrNU9Ua2dNeTR6TlRjM00yVXRNRGRETUM0ME1EY3lNVElnTXk0d01EZzBaUzB3TmlBd0xqTXhOakkyTkNBd0xqQXlNakV6TWpFZ01DNHlNemN6TWpFZ01DNHdOak01TVRFNVF6QXVNVFU0TXpjNUlEQXVNVEExTmpreUlEQXVNRGswTlRVME55QXdMakUyTlRRM05DQXdMakExTWprNUlEQXVNak0yTlRjeVZqQXVNak0yTlRjeVdpSWdabWxzYkQwaUl6RXhNVEV4TVNJdlBnbzhMM04yWno0Syk7CiAgICB3aWR0aDogMTFweDsKICB9CiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfZGF0ZXRpbWVdIFtkYXRhLXdyYXBwZXItcmVhY3Q9dHJ1ZV0uZXh0ZW5kZWQ+ZGl2Ky5mb3JtLXN1Yi1sYWJlbC1jb250YWluZXIgLmZvcm0tdGV4dGJveDpwbGFjZWhvbGRlci1zaG93biwKICBsaVtkYXRhLXR5cGU9Y29udHJvbF9kYXRldGltZV0gW2RhdGEtd3JhcHBlci1yZWFjdD10cnVlXTpub3QoLmV4dGVuZGVkKSAuZm9ybS10ZXh0Ym94Om5vdCgudGltZS1kcm9wZG93bik6cGxhY2Vob2xkZXItc2hvd24sCiAgLmFwcG9pbnRtZW50Q2FsZW5kYXJDb250YWluZXIgLmN1cnJlbnREYXRlIHsKICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIzYVdSMGFEMGlNVGNpSUdobGFXZG9kRDBpTVRZaUlIWnBaWGRDYjNnOUlqQWdNQ0F4TnlBeE5pSWdabWxzYkQwaWJtOXVaU0lnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JajRLUEhCaGRHZ2daRDBpVFRFMUxqazBPRGtnTlZZeE5TNHdNalpETVRVdU9UUTRPU0F4TlM0MU5qTTVJREUxTGpVd01qWWdNVFlnTVRRdU9UVXlNU0F4Tmtnd0xqazVOamd3TlVNd0xqUTBOakk0TlNBeE5pQXdJREUxTGpVMk16a2dNQ0F4TlM0d01qWldOVWd4TlM0NU5EZzVXazAwTGpFNU1qUTFJREV4TGpReE5qZElNaTR6TnpRM05Fd3lMakk0TlRFMUlERXhMalF5TkRkRE1pNHhNVEEzT0NBeE1TNDBOVFkxSURFdU9UWTRNREVnTVRFdU5UYzVNaUF4TGprd056VXlJREV4TGpjME1qSk1NUzQ0T0RRek55QXhNUzQ0TWpZNFRERXVPRGMyTXpRZ01URXVPVEUyTjFZeE15NDJOalkzVERFdU9EZzBNemNnTVRNdU56VTJOVU14TGpreE5qQXlJREV6TGprek1UVWdNaTR3TXpnMElERTBMakEzTkRjZ01pNHlNREE0TXlBeE5DNHhNelUwVERJdU1qZzFNVFVnTVRRdU1UVTROa3d5TGpNM05EYzBJREUwTGpFMk5qZElOQzR4T1RJME5VdzBMakk0TWpBeklERTBMakUxT0RaRE5DNDBOVFkwTVNBeE5DNHhNalk1SURRdU5UazVNVGdnTVRRdU1EQTBNU0EwTGpZMU9UWTNJREV6TGpnME1URk1OQzQyT0RJNE1pQXhNeTQzTlRZMVREUXVOamt3T0RVZ01UTXVOalkyTjFZeE1TNDVNVFkzVERRdU5qZ3lPRElnTVRFdU9ESTJPRU0wTGpZMU1URTNJREV4TGpZMU1Ua2dOQzQxTWpnM09TQXhNUzQxTURnMklEUXVNelkyTXpVZ01URXVORFEzT1V3MExqSTRNakF6SURFeExqUXlORGRNTkM0eE9USTBOU0F4TVM0ME1UWTNXazA0TGpnNE16STVJREV4TGpReE5qZElOeTR3TmpVMU9VdzJMamszTmlBeE1TNDBNalEzUXpZdU9EQXhOaklnTVRFdU5EVTJOU0EyTGpZMU9EZzFJREV4TGpVM09USWdOaTQxT1Rnek55QXhNUzQzTkRJeVREWXVOVGMxTWpJZ01URXVPREkyT0V3MkxqVTJOekU1SURFeExqa3hOamRXTVRNdU5qWTJOMHcyTGpVM05USXlJREV6TGpjMU5qVkROaTQyTURZNE55QXhNeTQ1TXpFMUlEWXVOekk1TWpVZ01UUXVNRGMwTnlBMkxqZzVNVFk0SURFMExqRXpOVFJNTmk0NU56WWdNVFF1TVRVNE5rdzNMakEyTlRVNUlERTBMakUyTmpkSU9DNDRPRE15T1V3NExqazNNamc0SURFMExqRTFPRFpET1M0eE5EY3lOaUF4TkM0eE1qWTVJRGt1TWprd01ETWdNVFF1TURBME1TQTVMak0xTURVeElERXpMamcwTVRGTU9TNHpOek0yTnlBeE15NDNOVFkxVERrdU16Z3hOeUF4TXk0Mk5qWTNWakV4TGpreE5qZE1PUzR6TnpNMk55QXhNUzQ0TWpZNFF6a3VNelF5TURJZ01URXVOalV4T1NBNUxqSXhPVFkwSURFeExqVXdPRFlnT1M0d05UY3lJREV4TGpRME56bE1PQzQ1TnpJNE9DQXhNUzQwTWpRM1REZ3VPRGd6TWprZ01URXVOREUyTjFwTk5DNHhPVEkwTlNBMkxqZ3pNek16U0RJdU16YzBOelJNTWk0eU9EVXhOU0EyTGpnME1UTTVRekl1TVRFd056Z2dOaTQ0TnpNeE5DQXhMamsyT0RBeElEWXVPVGsxT1RFZ01TNDVNRGMxTWlBM0xqRTFPRGczVERFdU9EZzBNemNnTnk0eU5ETTBOa3d4TGpnM05qTTBJRGN1TXpNek16TldPUzR3T0RNek0wd3hMamc0TkRNM0lEa3VNVGN6TWpGRE1TNDVNVFl3TWlBNUxqTTBPREUxSURJdU1ETTROQ0E1TGpRNU1UTTNJREl1TWpBd09ETWdPUzQxTlRJd05Vd3lMakk0TlRFMUlEa3VOVGMxTWpoTU1pNHpOelEzTkNBNUxqVTRNek16U0RRdU1Ua3lORFZNTkM0eU9ESXdNeUE1TGpVM05USTRRelF1TkRVMk5ERWdPUzQxTkRNMU15QTBMalU1T1RFNElEa3VOREl3TnpVZ05DNDJOVGsyTnlBNUxqSTFOemhNTkM0Mk9ESTRNaUE1TGpFM016SXhURFF1Tmprd09EVWdPUzR3T0RNek0xWTNMak16TXpNelREUXVOamd5T0RJZ055NHlORE0wTmtNMExqWTFNVEUzSURjdU1EWTROVElnTkM0MU1qZzNPU0EyTGpreU5USTVJRFF1TXpZMk16VWdOaTQ0TmpRMk1VdzBMakk0TWpBeklEWXVPRFF4TXpsTU5DNHhPVEkwTlNBMkxqZ3pNek16V2swNExqZzRNekk1SURZdU9ETXpNek5JTnk0d05qVTFPVXcyTGprM05pQTJMamcwTVRNNVF6WXVPREF4TmpJZ05pNDROek14TkNBMkxqWTFPRGcxSURZdU9UazFPVEVnTmk0MU9UZ3pOeUEzTGpFMU9EZzNURFl1TlRjMU1qSWdOeTR5TkRNME5rdzJMalUyTnpFNUlEY3VNek16TXpOV09TNHdPRE16TTB3MkxqVTNOVEl5SURrdU1UY3pNakZETmk0Mk1EWTROeUE1TGpNME9ERTFJRFl1TnpJNU1qVWdPUzQwT1RFek55QTJMamc1TVRZNElEa3VOVFV5TURWTU5pNDVOellnT1M0MU56VXlPRXczTGpBMk5UVTVJRGt1TlRnek16TklPQzQ0T0RNeU9VdzRMamszTWpnNElEa3VOVGMxTWpoRE9TNHhORGN5TmlBNUxqVTBNelV6SURrdU1qa3dNRE1nT1M0ME1qQTNOU0E1TGpNMU1EVXhJRGt1TWpVM09FdzVMak0zTXpZM0lEa3VNVGN6TWpGTU9TNHpPREUzSURrdU1EZ3pNek5XTnk0ek16TXpNMHc1TGpNM016WTNJRGN1TWpRek5EWkRPUzR6TkRJd01pQTNMakEyT0RVeUlEa3VNakU1TmpRZ05pNDVNalV5T1NBNUxqQTFOeklnTmk0NE5qUTJNVXc0TGprM01qZzRJRFl1T0RReE16bE1PQzQ0T0RNeU9TQTJMamd6TXpNeldrMHhNeTQxTnpReElEWXVPRE16TXpOSU1URXVOelUyTkV3eE1TNDJOalk0SURZdU9EUXhNemxETVRFdU5Ea3lOU0EyTGpnM016RTBJREV4TGpNME9UY2dOaTQ1T1RVNU1TQXhNUzR5T0RreUlEY3VNVFU0T0RkTU1URXVNalkyTVNBM0xqSTBNelEyVERFeExqSTFPQ0EzTGpNek16TXpWamt1TURnek16Tk1NVEV1TWpZMk1TQTVMakUzTXpJeFF6RXhMakk1TnpjZ09TNHpORGd4TlNBeE1TNDBNakF4SURrdU5Ea3hNemNnTVRFdU5UZ3lOU0E1TGpVMU1qQTFUREV4TGpZMk5qZ2dPUzQxTnpVeU9Fd3hNUzQzTlRZMElEa3VOVGd6TXpOSU1UTXVOVGMwTVV3eE15NDJOak0zSURrdU5UYzFNamhETVRNdU9ETTRNU0E1TGpVME16VXpJREV6TGprNE1Ea2dPUzQwTWpBM05TQXhOQzR3TkRFMElEa3VNalUzT0V3eE5DNHdOalExSURrdU1UY3pNakZNTVRRdU1EY3lOU0E1TGpBNE16TXpWamN1TXpNek16Tk1NVFF1TURZME5TQTNMakkwTXpRMlF6RTBMakF6TWprZ055NHdOamcxTWlBeE15NDVNVEExSURZdU9USTFNamtnTVRNdU56UTRJRFl1T0RZME5qRk1NVE11TmpZek55QTJMamcwTVRNNVRERXpMalUzTkRFZ05pNDRNek16TTFvaUlHWnBiR3c5SWlNMU9EWTFOME1pTHo0S1BIQmhkR2dnWkQwaVRURXpMakExTWpJZ01TNHhNalZJTVRVdU1EUTFPRU14TlM0MU9UWXpJREV1TVRJMUlERTJMakEwTWpZZ01TNDJNREEzSURFMkxqQTBNallnTWk0eE9EYzFWalJJTUM0d09UTTNOVll5TGpFNE56VkRNQzR3T1RNM05TQXhMall3TURjZ01DNDFOREF3TXpVZ01TNHhNalVnTVM0d09UQTFOaUF4TGpFeU5VZ3pMakE0TkRFM1ZqRXVNRFl5TlVNekxqQTROREUzSURBdU5EYzFOamszSURNdU5UTXdORFVnTUNBMExqQTRNRGszSURCRE5DNDJNekUwT1NBd0lEVXVNRGMzTnpnZ01DNDBOelUyT1RjZ05TNHdOemMzT0NBeExqQTJNalZXTVM0eE1qVklNVEV1TURVNE5sWXhMakEyTWpWRE1URXVNRFU0TmlBd0xqUTNOVFk1TnlBeE1TNDFNRFE1SURBZ01USXVNRFUxTkNBd1F6RXlMall3TlRrZ01DQXhNeTR3TlRJeUlEQXVORGMxTmprM0lERXpMakExTWpJZ01TNHdOakkxVmpFdU1USTFXaUlnWm1sc2JEMGlJelU0TmpVM1F5SXZQZ284TDNOMlp6NEspOwogIH0KICAuZm9ybS1zdGFyLXJhdGluZy1zdGFyLlN0YXJzIHsKICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUtBQUFBQWVDQVlBQUFDckR4VW9BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUFYTlNSMElBcnM0YzZRQUFBQVJuUVUxQkFBQ3hqd3Y4WVFVQUFBdkRTVVJCVkhnQjdWdExiQnZYRmIxdlpqZ2lSZEVtbGNLV1lRV2xETHVvMFFhbUM3U1JXN3NkcGcwUU80dWlhTHNvR3NCeXNxL1JiUXRFWXBDa3lNcEp1clkrYUxwb2d0YmRTQWFhcEdUemdlMWtZVzRLSjBnL1RHcGJObTJKbEVpSzVQeGU3eDF4QklxaXh1SWJra0tiSEdEQStiMTMrTzZjT2UvTnV6TUFYK0FML0svaTNROCtPdi9ldFk4dXdDNGgvOWJvK1h0dlAveTU1Yi83MXVpbDNZeC82Y1RKODZzblR2bmlaeUNJOUljM3RLQ2twR25kMU0za3FSTkhNOUJITEw0NXFpbnFjSU4vT1huZzhac1o2Q01jZm9YYXo4QTBqZjd6LytYZ2hDU3htWC9GMHJzUy84TEprMXBnMzBpYTQ3cDUrMDR5ZHZXOURBaEFBa0VvbkUzRzlrWWdGbzBBeUd3UytneVp3V1JvL3htZ2hkYWh6eURPY0dRWXdwSFlydkJMMGpybnJzV2Z3NlQ2ek5Nd2dJdWY5Z3NKa054UGtXVXRNaFNDU0RnRXRQN3VsUnNhOUFua1Bpd3dyS214UjRFV1dxZDkwQ2M0L0xLaWhVSVJvSVhKZ2Y3eW8vc0ZRM3ZpdEw0YjhTZjNrL2FQYUlFenA0RVdkbUJFSzR5ZjFFQUFRZ0owM2M5RnYrOUMxLzFjOU5zRlhmZHowVzhYSlBjalRoZDlqMy9EL1Z6NGNjR09CZGpzZmk3NmVSYzJ1NStMZnJwZ3MvdTU2S2NMdXU0bnk0R05mZjJNZjdQN3VmRGpnaDBMc05YOVhQVHJMbXgxUHhmOWNzRlc5M1BSTHhkc2RUOFhmWXQvaS91NUVIWEJqZ1RZenYxYzlPTXViT2QrTHZyaGd1M2N6MFUvWExDZCs3bm9SL3pidVo4TFVSZmNzUURUMTY5SDBmMHV0SE0vRis1ZG1MNXlJdzVkeHIvVDBhakU0RUk3OTNQaHV1QmllaVFPUGVKdjUzNHVYQmZzQlQvVnVaMzd1ZWhsL0F1YUZwVnN1TkRPL1Z5NExsZ1lINC9ERHJGcEhwQkVCa1k0RG1BbEZHQjc4V0NDcnk5Um1iRjRaR2dRSG9ydDhheHdxYkFLSzZVS3J2RWlWcC9GT25JVzU1L2FNcytDcmVRZ1VNa2xqeDh2dGl0TEZ6bU0vSllNQ1ptenZUYXdCQU9lQU1hampBM0cxZUZIWWZEQWp6MzUxeGIvQ1BYN0dXb1ljV1N4amh3bmZtWmxBN2FVcXlEL1dMTFlPVC9JOGVCZ0JDSjd2dVRKWDE2OUQydVZGZC84WUxNNFkrekx4STkxeFlGSlVSTGZZRGk2Y1g1KzhaOWdmdjN2MEszNGs4aEExK080bWxDNHRKZExISzg5U3dCblVXa29IQ2VYR3pqL0MvQkMvZFZYUWYvREc3UmF4Q0JrOFg5Zyt4bnlzeXhZVmc1VU5SZkxaRGI0SFFHKysrSEhreGlrQ1JLWkpFdWdCZ0lRVUdROE53QVNZODR2YlhjQ3c3UndndGJDOWhoZ1dsWmoyd1RkTUozZzJEWkxmVy84cXkvVHVYZmZIc1d4QTU4Z2tURjVFT1RRUVpEVVlaQ0RveURKb2ZYdHdFT2QwSU50TElHdEw0TlZ2UVZXWTkzWnJ0MTB4R0Z6bmhwNS9OWm1maFFaUTVzSkJGVGtEWUFTR01EMlMvaXJRcnR1end1V1plQmlnbW5VblYrYnRySDlwcWw3OHN1eTR2RFMvNkRmZ0xMT1RkdXRhQ2RBa2ZpWHZuMXlFbStVQ1JJWlJJWkFQbndZdTlNRElCODVBcXhwdXhQd3hVV3c3OXdCNjVOL2dJM3I3cmFOMjRnaTZpMjE5OHI3THl2clozTU54eER4ZlE5Rm9Wc2d3ZElTQ3FwYmp0MWJLa1pMbGVvUGNkVUpBT09nQldMajhmRG9VOUF0a0dCcFVjSkh0aHlyM0h3dGFoU3ViZUlmd0xIVm51Zys2QlpJTkxTbzZ0Yng4bW94SDYxWFN6M2w3eVQrSFBuVko1K0lCMy85SytnV0hBSFRjdno0bG1PMUYxNk1Hdk9YSFg3bnRqSXRmcTVjcVdZTEt5WG9OWWdERzU4bFRuZWZaWmpuOU1LMWJQWHVaZWcxYXNpaEwxL0xFbWN6ZjYxYXlsWktCZWcxaUtPMlZtckRYODcxZzc5dC9EbkdmK0Z5dG41eEJucU4rdlFNRUJkeDByWWp3T1NKb3prelVFMFdWc285RlNIVlRSekVSWnp1L2dPbjcrUlVXVW5XOGdzOUZTR0pyM3AzSWJ0V0xpZUpzNVcvVWw3dXFRaXA3a3BwdVMyL2JSaklYK2lwQ0xlTGYrenExWnl0S3NuNjlIUlBSVWppcTErY3poSVhjZEsrTFE4aGloRktENFZEaVc1Mnh3UzAvZlU3anhxLzNTQTRIWS9xbHBuR0taVkVON3RqUXVVL3Z3ZTljTlc1K0dNL0tucnlCME9SUkRlN1F3SjJ1NDd6N1lRL1BEU2M4SHJhZGVFMUJtekZqdUpQVDdvNnh2L002VVEzdTJOQzdZWGZvUE10ckl1djZTRmswOGlXL2hqOXdYSzVlaW0vVklSdW9kSDR0RmZqQ2JGa3JraE9wQmMrdUlUak5PZ1dTSHoxNHRXMDE4VnY1c2Z1OEJJSnBsdWd1cXJWVW1hbi9OMTI0a2I4TXcrTVB3cURCSUxqc3ovak9BMjZCUktmTWIrUWFSVWZZZHZYc2Q2NWRtTUdwMTBtL0RpaGJkdk90TUJxZVczMnU0OGVQZGRKMmJ0dkhaeFJZK01UZnB5UVcydXdkdnNTNk1VcnMvdC9jS3RqZnB6MG5mRGpoQnpiWDhKcG1WcDFkUTc1SjNaYXpuWENVRGlhaU96Wi91bi9RUTdZRlA4NWpQOEVkSUNWRTkrWlZaODhjOWFQRS9KeUdlcXYvQmIwK2ZrNWZPS2RhSGZPdGhQUkpKZ1NDc2VQRTRxS2owQ0N3UzV6MW84VHJpMytTVWg4TGo4S1o5YVBFNHFJaitBNlliVlNSQ2RjQmxHSWlvOUFndEhuRitiOE9HSDlsVmM5eFVmd3pJUllOcVJxZFIxRVFXVXRGVklnQ051d1VtYmxFeENGV2Y0RTZ3ajQ0amYwS29qQzBHdkVQd1VDSUJIYUhINnArK0J2eEg4S0JHRnphOHE2ZmgxRVlXSlpxc1BySE85VW5BSnh6QytDS0JqbXJzQ1F4ZnR3UllsM09nRzlpWjhtc1dYREg3K3NnQ2d3aytHTEg1TUFVU2J0YnZ6WnlBaUlnZzBOb1l0Sm52eWVBcFFzbmhoUU84c0FOR01BTXlxU2JXc2dDRXBEeWNHRElBcktwTmdNTkJBRThWTTJRaFJVMWc4L1prc1NsQWtSaGQvNDAvV1hqaHdCVVZBbVJWS1k1bldPdHdOS1VseFJ4TzlBU3VGaEJPSWdDa29OcXNNZ0NnVlRlS2lpT0lnQytXVWZEa2dwUEQvODZJREhaQjgzUUZmaTc4TUJwU09IblRvOHozbkF3V09VRnhZRmxaVkFPZ2FDSUg0NU5PcHhCbThzN1VGbEpXQysrUDA2b0I5K2JCc09nY1J2QUwveHh4SEVNZmtyL2h3UTA0eWUvTnUyTGsyRFR3T3dDOTU2Q2ozZTB4c1h1SEFKaytTWVIyYnRYdE5hTDhzUzZlczNjSTd4S0hRQ25Jb0F3eklUU25DckFMbFZnZHI5ZDZDK2xPWTB6bE9qNHl5MC93bG9uVldpTHBqZTVsbThITWRzUXc0Nmdjc2ZVTFlLa0taWDZJMFhmRXAxWGhMQTZScG9OM0ZNWllrZkJOQ1lpbWs3QkNCK3pKbzQ2NS9kemp2dkFuckZIMFRCb1cwWFROTXI5TWFMOGNicnpqaFBPWDBHQnA3Wk90SGdsR1hlN2ZkeXdDaUtpNWFOSFNROFN1ZGdvM2x4cFR5akcvYWhXdDA4dEZ3c3pkSytVbVZ0YytWWUZzZkJOQWlOUStlSW9vVkZTV0F1U0hpVXFsdjVPTVdyK2ZrWnExWTZaRmJ5aDlidXpNK3VmRHpGNjRWcjBPeUlWQllYY1g1c2YvTmJLTTZGeHduaXBmeW5VQzR2elpxNlBtYlVhbU9sMWFVNTJvZVpqazBWTUtmOVVoUnZnRGgwaUpwcEpscTdYNWMvZjI4SkNyVjlzOHZ5ejhjdy9tTVkvemtTNG5ieFJ3T0lRNGVnckFpS0srbzhTTGo4TksrSHFicktUMzRLK3ZURldYT2xPR2JjdWpsV3YzaHhqdllaQzV2VHFGU1c2dkI2UDNCN2Z6ZURDYlhKL2NqeFVId1lBNTdCN1BWekxkK2hua3RmdVpISzN5OU9ZcTd4Ykd6dkVJdUVCNTBEUVhvYm8xWW5HODVCQjZBTG9BNk5OYlk0MU8vL0RhcjVCVzViMVF6bjhOeUJ4MjlsbXZrWEwxdXA4bWUvbThSODh0bmd2ak5zSVBZdENvSHpOb3pFczBMOEF3UEJqVzF5dkRXY2s3TzRUZnlwRnY2Snhjc2pVMFhqN2xTZ3ZId1dVMmxBN3c0U0FpcmVCS3pVTVQ4OUFidmp6MmJITFV1UFpPNEhua3A5ODlUUE1nQi94YU12T2Z3WS95bU0vMVFqL3VBMy9vRHRsNzUyZUdOVGYvME5GTjAwOE5WeXhzTDJ4NjYrbjJrNmV3SkZObVU5LzhJVW5uTldmZnBwY04rYWxyOXhIUGc3NzIzTHY2MEEzU2RndXF1d1VkdzByWGJDMjBBanVlMEk4ZDdTeWpTVzBVaUlBVVdCc2xVZmd3N2hQZ0dUcTZHb3VLVXZONFRYL2dQd1JuTGZFV0wxNW12VFdFWWpJVXFCWWRBdEpzUlAzUis1R25aMzNMU01uZkE3UWl4WitSbE1wMmtrUkJuYlg2dDF6cytCYS9RRVRJNUh3cXRKRDJlSzZ1blVJNmRleWdETWJ6bS9FWDlIaUJqL21VYjhRVFQrN2hNd3VWcWRoSGY3VGtONDdUOUFiN3hjNEFqUmZ2N0ZHUlNpUmtLa2FSek83VzM1UFVlNE5NYkRIMC9odGFJUmlNZm8yd1FNeExPNHJza0tFMHBzMXBmb21vUG5oVzlGUXdpUExiNEpHZ3J4V1N5djRXQmFpTDlhV2VGcll2eEoramFrdEpLZkZPVkh6aUtOOHhydFR6MzhmWEtjOXg5WXJoSC9aQ1ArOUpHUWNQd05kRDJEZzZmd1d0RVFZcEsrRFVFaFR1S2RyT0ZjcGxoaSswb1h2aTN3VTRmSTJLbWJkZncvOFB1SmZ5ZmZkb2pXOFYrZVNTVytoaHRlS1FBQUFBQkpSVTVFcmtKZ2dnPT0pICFpbXBvcnRhbnQ7CiAgfQogIC5zaWduYXR1cmUtcGFkLXBhc3NpdmUsIC5zaWduYXR1cmUtcGxhY2Vob2xkZXI6YWZ0ZXIgewogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU1UazRJaUJvWldsbmFIUTlJalF3SWlCMmFXVjNRbTk0UFNJd0lEQWdNVGs0SURRd0lpQm1hV3hzUFNKdWIyNWxJaUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lQZ284Y0dGMGFDQmtQU0pOTnpRdU1UQTBOQ0EyTGpNME5UQTRTRGMxTGpVNE5UbEROelV1TlRReE1pQTBMamN4TkRRZ056UXVNRGs1TkNBekxqVXpNVEUySURjeUxqQXpNVElnTXk0MU16RXhOa00yT1M0NU9EYzVJRE11TlRNeE1UWWdOamd1TkRJeE9TQTBMalk1T1RRNElEWTRMalF5TVRrZ05pNDBOVFEwTmtNMk9DNDBNakU1SURjdU9EY3hNellnTmprdU5ETTJNU0E0TGpjd01UWXlJRGN4TGpBM01UY2dPUzR4TkRRd09VdzNNaTR5TnpRNUlEa3VORGN5TWpGRE56TXVNell6TmlBNUxqYzJNRFUySURjMExqSXdNemdnTVRBdU1URTROU0EzTkM0eU1ETTRJREV4TGpBeU16TkROelF1TWpBek9DQXhNaTR3TVRjM0lEY3pMakkxTkRNZ01USXVOamN6T1NBM01TNDVORFkzSURFeUxqWTNNemxETnpBdU56WXpOU0F4TWk0Mk56TTVJRFk1TGpjM09URWdNVEl1TVRRMk9TQTJPUzQyT0RrMklERXhMakF6T0ROSU5qZ3VNVFE0TkVNMk9DNHlORGM1SURFeUxqZzRNamNnTmprdU5qYzBOeUF4TkM0d01qRXlJRGN4TGprMU5qY2dNVFF1TURJeE1rTTNOQzR6TkRnZ01UUXVNREl4TWlBM05TNDNNalV4SURFeUxqYzJNelFnTnpVdU56STFNU0F4TVM0d016Z3pRemMxTGpjeU5URWdPUzR5TURNM05TQTNOQzR3T0RrMUlEZ3VORGt5T0RFZ056SXVOemsyT1NBNExqRTNORFl6VERjeExqZ3dNallnTnk0NU1UWXhRemN4TGpBd056RWdOeTQzTVRJeU55QTJPUzQ1TkRneUlEY3VNek01TkNBMk9TNDVOVE14SURZdU16WTBPVGRETmprdU9UVXpNU0ExTGpRNU9Ua3hJRGN3TGpjME16WWdOQzQ0TlRnMU9DQTNNUzQ1T1RZMElEUXVPRFU0TlRoRE56TXVNVFkwT0NBMExqZzFPRFU0SURjekxqazVOU0ExTGpRd05UUTFJRGMwTGpFd05EUWdOaTR6TkRVd09Gb2lJR1pwYkd3OUlpTTROemsxUVVJaUx6NEtQSEJoZEdnZ1pEMGlUVGMzTGpRME1UWWdNVE11T0RVeU1rZzNPQzQ1TWpneFZqWXVNakUxT0RKSU56Y3VORFF4TmxZeE15NDROVEl5V2swM09DNHhPVEl6SURVdU1ETTNOVFZETnpndU56QTBOQ0ExTGpBek56VTFJRGM1TGpFek1Ua2dOQzQyTXprNE15QTNPUzR4TXpFNUlEUXVNVFV5TmpGRE56a3VNVE14T1NBekxqWTJOVE01SURjNExqY3dORFFnTXk0eU5qSTNJRGM0TGpFNU1qTWdNeTR5TmpJM1F6YzNMalkzTlRJZ015NHlOakkzSURjM0xqSTFNamNnTXk0Mk5qVXpPU0EzTnk0eU5USTNJRFF1TVRVeU5qRkROemN1TWpVeU55QTBMall6T1RneklEYzNMalkzTlRJZ05TNHdNemMxTlNBM09DNHhPVEl6SURVdU1ETTNOVFZhSWlCbWFXeHNQU0lqT0RjNU5VRkNJaTgrQ2p4d1lYUm9JR1E5SWswNE5DNHhNamsySURFMkxqZzJRemcyTGpBM016VWdNVFl1T0RZZ09EY3VOVGMwT1NBeE5TNDVOekF4SURnM0xqVTNORGtnTVRRdU1ESXhNbFkyTGpJeE5UZ3lTRGcyTGpFeE9ETldOeTQwTlRNM05VZzROaTR3TURnNVF6ZzFMamMwTlRRZ05pNDVPREUwTlNBNE5TNHlNVGcwSURZdU1URTJNemtnT0RNdU56azJOU0EyTGpFeE5qTTVRemd4TGprMU1qRWdOaTR4TVRZek9TQTRNQzQxT1RRNElEY3VOVGN6TURZZ09EQXVOVGswT0NBeE1DNHdNRFF5UXpnd0xqVTVORGdnTVRJdU5EUXdNeUE0TVM0NU9ERTVJREV6TGpjek56Z2dPRE11TnpnMk5pQXhNeTQzTXpjNFF6ZzFMakU0T0RZZ01UTXVOek0zT0NBNE5TNDNNekExSURFeUxqazBOelFnT0RVdU9UazRPU0F4TWk0ME5qQXhTRGcyTGpBNU16UldNVE11T1RZeE5rTTROaTR3T1RNMElERTFMakV6T1RnZ09EVXVNamN6TVNBeE5TNDJOakU0SURnMExqRTBORFVnTVRVdU5qWXhPRU00TWk0NU1EWTJJREUxTGpZMk1UZ2dPREl1TkRJME5DQXhOUzR3TkRBMElEZ3lMakUyTURrZ01UUXVOakUzT0V3NE1DNDRPRE15SURFMUxqRTBORGhET0RFdU1qZzFPU0F4Tmk0d05qUTFJRGd5TGpNd05TQXhOaTQ0TmlBNE5DNHhNamsySURFMkxqZzJXazA0TkM0eE1UUTNJREV5TGpVd05EbERPREl1TnpnM015QXhNaTQxTURRNUlEZ3lMakE1TmpJZ01URXVORGcxTnlBNE1pNHdPVFl5SURrdU9UZzBNamxET0RJdU1EazJNaUE0TGpVeE56WTNJRGd5TGpjM01qUWdOeTR6TnpreE55QTROQzR4TVRRM0lEY3VNemM1TVRkRE9EVXVOREV5TXlBM0xqTTNPVEUzSURnMkxqRXdPRE1nT0M0ME16Z3hNaUE0Tmk0eE1EZ3pJRGt1T1RnME1qbERPRFl1TVRBNE15QXhNUzQxTmpBeklEZzFMak01TnpRZ01USXVOVEEwT1NBNE5DNHhNVFEzSURFeUxqVXdORGxhSWlCbWFXeHNQU0lqT0RjNU5VRkNJaTgrQ2p4d1lYUm9JR1E5SWswNU1TNHdOVFVnT1M0ek1UZ3dPVU01TVM0d05UVWdPQzR4TURBd05TQTVNUzQ0TURBNElEY3VOREEwTURNZ09USXVPRE0wT1NBM0xqUXdOREF6UXprekxqZzBOREVnTnk0ME1EUXdNeUE1TkM0ME5UVTJJRGd1TURZMU1qVWdPVFF1TkRVMU5pQTVMakUzTXpreVZqRXpMamcxTWpKSU9UVXVPVFF5TVZZNExqazVORGswUXprMUxqazBNakVnTnk0eE1EVTNOQ0E1TkM0NU1ETXhJRFl1TVRFMk16a2dPVE11TXpReUlEWXVNVEUyTXpsRE9USXVNVGt6TlNBMkxqRXhOak01SURreExqUTBNamdnTmk0Mk5EZ3pOU0E1TVM0d09EazRJRGN1TkRVNE56SklPVEF1T1RrMU5GWTJMakl4TlRneVNEZzVMalUyT0RWV01UTXVPRFV5TWtnNU1TNHdOVFZXT1M0ek1UZ3dPVm9pSUdacGJHdzlJaU00TnprMVFVSWlMejRLUEhCaGRHZ2daRDBpVFRFd01TNDNOaUF4TXk0NE5USXlTREV3TXk0eU9UWldPUzQwTVRJMU5VZ3hNRGd1TXpjeVZqRXpMamcxTWpKSU1UQTVMamt4TkZZekxqWTNNRE0zU0RFd09DNHpOekpXT0M0d09UVXdPRWd4TURNdU1qazJWak11Tmpjd016ZElNVEF4TGpjMlZqRXpMamcxTWpKYUlpQm1hV3hzUFNJak9EYzVOVUZDSWk4K0NqeHdZWFJvSUdROUlrMHhNVFV1TXpJeklERTBMakF3TmpORE1URTJMams0T0NBeE5DNHdNRFl6SURFeE9DNHhOallnTVRNdU1UZzJJREV4T0M0MU1EUWdNVEV1T1RRek1Vd3hNVGN1TURrM0lERXhMalk0T1RWRE1URTJMamd5T1NBeE1pNDBNVEEwSURFeE5pNHhPRE1nTVRJdU56YzRNeUF4TVRVdU16TTRJREV5TGpjM09ETkRNVEUwTGpBMk5TQXhNaTQzTnpneklERXhNeTR5TVNBeE1TNDVOVE1nTVRFekxqRTNJREV3TGpRNE1UUklNVEU0TGpVNU9WWTVMamsxTkRRMlF6RXhPQzQxT1RrZ055NHhPVFV5TWlBeE1UWXVPVFE0SURZdU1URTJNemtnTVRFMUxqSXhPQ0EyTGpFeE5qTTVRekV4TXk0d09TQTJMakV4TmpNNUlERXhNUzQyT0RnZ055NDNNemN4TXlBeE1URXVOamc0SURFd0xqQTRNemRETVRFeExqWTRPQ0F4TWk0ME5UVXlJREV4TXk0d055QXhOQzR3TURZeklERXhOUzR6TWpNZ01UUXVNREEyTTFwTk1URXpMakUzTlNBNUxqTTJOemd4UXpFeE15NHlNelVnT0M0eU9EUWdNVEUwTGpBeUlEY3VNelEwTXpjZ01URTFMakl5T0NBM0xqTTBORE0zUXpFeE5pNHpPRElnTnk0ek5EUXpOeUF4TVRjdU1UTTNJRGd1TVRrNU5Ea2dNVEUzTGpFME1pQTVMak0yTnpneFNERXhNeTR4TnpWYUlpQm1hV3hzUFNJak9EYzVOVUZDSWk4K0NqeHdZWFJvSUdROUlrMHhNakF1TWpRNElERXpMamcxTWpKSU1USXhMamN6TlZZNUxqRTRPRGd6UXpFeU1TNDNNelVnT0M0eE9EazFOQ0F4TWpJdU5UQTFJRGN1TkRZNE5qWWdNVEl6TGpVMU9TQTNMalEyT0RZMlF6RXlNeTQ0TmpnZ055NDBOamcyTmlBeE1qUXVNakUySURjdU5USXpNelVnTVRJMExqTXpOU0EzTGpVMU9ERTFWall1TVRNMk1qZERNVEkwTGpFNE5pQTJMakV4TmpNNUlERXlNeTQ0T1RJZ05pNHhNREUwTnlBeE1qTXVOekF6SURZdU1UQXhORGRETVRJeUxqZ3dPU0EyTGpFd01UUTNJREV5TWk0d05ETWdOaTQyTURnMU9DQXhNakV1TnpZMUlEY3VOREk0T0RsSU1USXhMalk0TlZZMkxqSXhOVGd5U0RFeU1DNHlORGhXTVRNdU9EVXlNbG9pSUdacGJHdzlJaU00TnprMVFVSWlMejRLUEhCaGRHZ2daRDBpVFRFeU9DNDJNemtnTVRRdU1EQTJNME14TXpBdU16QTFJREUwTGpBd05qTWdNVE14TGpRNE15QXhNeTR4T0RZZ01UTXhMamd5TVNBeE1TNDVORE14VERFek1DNDBNVFFnTVRFdU5qZzVOVU14TXpBdU1UUTFJREV5TGpReE1EUWdNVEk1TGpRNU9TQXhNaTQzTnpneklERXlPQzQyTlRRZ01USXVOemM0TTBNeE1qY3VNemd4SURFeUxqYzNPRE1nTVRJMkxqVXlOaUF4TVM0NU5UTWdNVEkyTGpRNE5pQXhNQzQwT0RFMFNERXpNUzQ1TVRWV09TNDVOVFEwTmtNeE16RXVPVEUxSURjdU1UazFNaklnTVRNd0xqSTJOU0EyTGpFeE5qTTVJREV5T0M0MU16VWdOaTR4TVRZek9VTXhNall1TkRBM0lEWXVNVEUyTXprZ01USTFMakF3TlNBM0xqY3pOekV6SURFeU5TNHdNRFVnTVRBdU1EZ3pOME14TWpVdU1EQTFJREV5TGpRMU5USWdNVEkyTGpNNE55QXhOQzR3TURZeklERXlPQzQyTXprZ01UUXVNREEyTTFwTk1USTJMalE1TVNBNUxqTTJOemd4UXpFeU5pNDFOVEVnT0M0eU9EUWdNVEkzTGpNek5pQTNMak0wTkRNM0lERXlPQzQxTkRVZ055NHpORFF6TjBNeE1qa3VOams0SURjdU16UTBNemNnTVRNd0xqUTFOQ0E0TGpFNU9UUTVJREV6TUM0ME5Ua2dPUzR6TmpjNE1VZ3hNall1TkRreFdpSWdabWxzYkQwaUl6ZzNPVFZCUWlJdlBnbzhjR0YwYUNCa1BTSk5NU0F6Tmk0d01qSTVRekV5TGpJME5qRWdNemt1TWpJd05TQXlNeTR4T0RJZ016VXVNRE15T0NBek1pNDFNRGcwSURJNExqZzFNVEZETXpjdU5EUXdOQ0F5TlM0MU9ESXlJRFF5TGpNek5ERWdNakV1TmpZNE55QTBOUzR6TXpJNUlERTJMalV4TURGRE5EWXVOVEk0TXlBeE5DNDBOVE01SURRM0xqazRPVE1nTVRBdU9EZzBOQ0EwTkM0eU1qY3hJREV3TGpnMU1qaEROREF1TVRNek55QXhNQzQ0TVRneklETTNMakE0TmpRZ01UUXVOVEUwTWlBek5TNDFOVGc0SURFM0xqZzNORFJETXpNdU16WTRNU0F5TWk0Mk9UTXpJRE16TGpJNU1TQXlPQzQwTURBMElETTFMamsyTlRZZ016TXVNRFEwTVVNek9DNDBPVGN4SURNM0xqUXpPVFlnTkRJdU56UTBOU0F6T1M0MU1UZzBJRFEzTGpneE1UUWdNemd1TmpZek9VTTFNeTR4TURNM0lETTNMamMzTVRNZ05UY3VOek13TkNBek5DNHhOVFl5SURZeExqVTNOalVnTXpBdU5qYzROVU0yTWk0NU9UTWdNamt1TXprM05pQTJOQzR6TWpBNUlESTRMakEwTnpVZ05qVXVOVFF5SURJMkxqVTROVGRETmpVdU5qZzBNaUF5Tmk0ME1UVTFJRFkyTGpFNE5ESWdNalV1TlRjNU9DQTJOaTQxTURnZ01qVXVOVEl4T0VNMk5pNDJNamcwSURJMUxqVXdNRElnTmpZdU9EQTJOQ0F5T1M0eE5qUTFJRFkyTGpnek9EVWdNamt1TXpZME0wTTJOeTR4TWpVMUlETXhMakUxTkRNZ05qZ3VNREk1TkNBek15NHhOekEySURjd0xqRTBNekVnTXpNdU1qTXhPRU0zTWk0NE16TXlJRE16TGpNd09UY2dOelV1TURneU5pQXpNUzR3TlRreElEYzJMamc1TWpJZ01qa3VOREF4T0VNM055NDFNREkySURJNExqZzBNamdnTnprdU5EUXlOU0F5Tmk0eE5qQXhJRGd3TGpRM05qUWdNall1TVRZd01VTTRNQzQ1TURFMElESTJMakUyTURFZ09ERXVOekkwT1NBeU9DNHpNRE00SURneExqa3hNamNnTWpndU5UZzRNME00TkM0ek9UY3lJRE15TGpNMU1qTWdPRGd1TURRME5pQXpNQzQ1T0RrMElEa3dMamczTXpNZ01qZ3VNelV3TlVNNU1TNHpPVE0wSURJM0xqZzJOVE1nT1RRdU1UYzRNU0F5TXk0NU9ETTVJRGsxTGpNd09URWdNalF1Tmpnek1rTTVOaTR5TWpBeklESTFMakkwTmpZZ09UWXVOakl4TnlBeU5pNDFOelkxSURrM0xqQTRPRFlnTWpjdU5EWXhPRU01Tnk0NE5EZzBJREk0TGprd01qa2dPVGd1T0RFd055QXlPUzQ1TWprMElERXdNQzQwTVRrZ016QXVORFkxTjBNeE1ETXVPVEV5SURNeExqWXpNU0F4TURjdU5qZ2dNamd1TXpZeklERXhNUzR5TWpJZ01qZ3VNell6UXpFeE1pNHlOVFVnTWpndU16WXpJREV4TWk0M09ETWdNamd1T1RNeE5pQXhNVE11TXpNeUlESTVMamN4TkRoRE1URTBMakE0TVNBek1DNDNPREl6SURFeE5DNDROVE1nTXpFdU5USTNOaUF4TVRZdU1qQTFJRE14TGpneE56VkRNVEl3TGpNNU15QXpNaTQzTVRVMUlERXlNeTQ0TWpJZ01qZ3VOek01T1NBeE1qY3VPRGN5SURJNUxqQTRPRGxETVRJNUxqQTFNeUF5T1M0eE9UQTNJREV5T1M0NU16VWdNekF1TXpneE5pQXhNekF1T0RJeElETXhMakF4TmpSRE1UTXlMall3T1NBek1pNHlPVFk1SURFek5DNDNOVGtnTXpNdU1UZ3pOaUF4TXpZdU9UUTRJRE16TGpRNU5EZERNVFF3TGpRMU55QXpNeTQ1T1RNMElERTBNeTQ1TnpVZ016TXVNek15TmlBeE5EY3VNemsxSURNeUxqVTVNelZETVRVekxqTWdNekV1TXpFM05DQXhOVGt1TVRRM0lESTVMamM1TlRnZ01UWTFMakEyTWlBeU9DNDFOak16SWlCemRISnZhMlU5SWlORVJrVXpSVVFpSUhOMGNtOXJaUzEzYVdSMGFEMGlNUzQxSWlCemRISnZhMlV0YkdsdVpXTmhjRDBpY205MWJtUWlJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUx6NEtQSEJoZEdnZ1pEMGlUVEU1Tmk0MU1UVWdNVFV1TURjM09Fd3hPRFF1TkRreUlEQXVOVFV4TnprMVF6RTROQzR5TlRjZ01DNHlOamM0TVNBeE9ETXVPRE00SURBdU1qSTRNallnTVRnekxqVTFOQ0F3TGpRMk16TXdOMHd4T0RBdU5qUTVJREl1T0RZM09EaERNVGd3TGpNMk5TQXpMakV3TWpreklERTRNQzR6TWpVZ015NDFNakkwSURFNE1DNDFOaUF6TGpnd05qTTRUREU1TWk0MU9ETWdNVGd1TXpNeU5FTXhPVEl1TnlBeE9DNDBOelF4SURFNU1pNDROalFnTVRndU5UVTFNU0F4T1RNdU1ETTBJREU0TGpVM01USkRNVGt6TGpJd05DQXhPQzQxT0RjeUlERTVNeTR6T0NBeE9DNDFNemd5SURFNU15NDFNaklnTVRndU5ESXdPVXd4T1RZdU5ESTNJREUyTGpBeE5qUkRNVGsyTGpjeE1TQXhOUzQzT0RFeklERTVOaTQzTlNBeE5TNHpOakU0SURFNU5pNDFNVFVnTVRVdU1EYzNPRm9pSUdacGJHdzlJaU5FUmtVelJVUWlMejRLUEhCaGRHZ2daRDBpVFRFNE1TNDBNellnTmk0NU5UYzJPVXd4TnpBdU9EVTFJRGt1T0RJMk5ESkRNVGN3TGpZeU1pQTVMamc0T1RVZ01UY3dMalEwTVNBeE1DNHdOek16SURFM01DNHpPRE1nTVRBdU16QTNOa3d4TmpZdU1UVTFJREkzTGpFd01qRk1NVGN6TGprM05TQXlNQzQyTWprMlF6RTNNeTR5TkRVZ01Ua3VNall4TnlBeE56TXVOVFVnTVRjdU5URTVOQ0F4TnpRdU56a2dNVFl1TkRreU5rTXhOell1TWpBMklERTFMak15TURNZ01UYzRMak14TWlBeE5TNDFNVGsySURFM09TNDBPRE1nTVRZdU9UTTFNVU14T0RBdU5qVTFJREU0TGpNMU1UTWdNVGd3TGpRMU5pQXlNQzQwTlRZMklERTNPUzR3TkRFZ01qRXVOakk0TWtNeE56Z3VNek16SURJeUxqSXhORFFnTVRjM0xqUTFNaUF5TWk0ME5UZ3lJREUzTmk0Mk1ETWdNakl1TXpjNE1VTXhOelV1T1RZMElESXlMak14TnprZ01UYzFMak0wTXlBeU1pNHdOelExSURFM05DNDRNalVnTWpFdU5qVTNNMHd4TmpjdU1EQTFJREk0TGpFeU9URk1NVGcwTGpJNU5DQXlOeTR4TVRReVF6RTROQzQxTXpRZ01qY3VNVEF3TVNBeE9EUXVOelE1SURJMkxqazFOellnTVRnMExqZzFOQ0F5Tmk0M05EQTJUREU0T1M0Mk5TQXhOaTQ0T0RFNVRERTRNUzQwTXpZZ05pNDVOVGMyT1ZvaUlHWnBiR3c5SWlORVJrVXpSVVFpTHo0S1BDOXpkbWMrQ2c9PSk7CiAgfQogIC5mb3JtLXNwaW5uZXItYnV0dG9uLmZvcm0tc3Bpbm5lci11cDpiZWZvcmUgewogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU1UUWlJR2hsYVdkb2REMGlNVFFpSUhacFpYZENiM2c5SWpBZ01DQXhOQ0F4TkNJZ1ptbHNiRDBpYm05dVpTSWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklqNEtQSEJoZEdnZ1ptbHNiQzF5ZFd4bFBTSmxkbVZ1YjJSa0lpQmpiR2x3TFhKMWJHVTlJbVYyWlc1dlpHUWlJR1E5SWswM0xqVWdNVEl1TlV3M0xqVWdOeTQxVERFeUxqVWdOeTQxUXpFeUxqYzNOaUEzTGpVZ01UTWdOeTR5TnpZZ01UTWdOME14TXlBMkxqY3lOQ0F4TWk0M056WWdOaTQxSURFeUxqVWdOaTQxVERjdU5TQTJMalZNTnk0MUlERXVOVU0zTGpVZ01TNHlNalFnTnk0eU56WWdNU0EzSURGRE5pNDNNalFnTVNBMkxqVWdNUzR5TWpRZ05pNDFJREV1TlV3MkxqVWdOaTQxVERFdU5TQTJMalZETVM0eU1qUWdOaTQxSURBdU9UazVPVGs1SURZdU56STBJREF1T1RrNU9UazVJRGRETUM0NU9UazVPVGtnTnk0eU56WWdNUzR5TWpRZ055NDFJREV1TlNBM0xqVk1OaTQxSURjdU5VdzJMalVnTVRJdU5VTTJMalVnTVRJdU56YzJJRFl1TnpJMElERXpJRGNnTVRORE55NHlOellnTVRNZ055NDFJREV5TGpjM05pQTNMalVnTVRJdU5Wb2lJR1pwYkd3OUlpTTFOalkxTjBVaUlITjBjbTlyWlQwaUl6VTJOalUzUlNJZ2MzUnliMnRsTFhkcFpIUm9QU0l3TGpVaUx6NEtQQzl6ZG1jK0NnPT0pOwogIH0KICAuZm9ybS1zcGlubmVyLWJ1dHRvbi5mb3JtLXNwaW5uZXItZG93bjpiZWZvcmUgewogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU1UUWlJR2hsYVdkb2REMGlNeUlnZG1sbGQwSnZlRDBpTUNBd0lERTBJRE1pSUdacGJHdzlJbTV2Ym1VaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJK0NqeHdZWFJvSUdROUlrMHhNaTQxSURKTU55NDFJREpNTVM0MUlESkRNUzR5TWpRZ01pQXhJREV1TnpjMklERWdNUzQxUXpFZ01TNHlNalFnTVM0eU1qUWdNQzQ1T1RrNU9Ua2dNUzQxSURBdU9UazVPVGs1VERZdU5TQXhUREV5TGpVZ01VTXhNaTQzTnpZZ01TQXhNeUF4TGpJeU5DQXhNeUF4TGpWRE1UTWdNUzQzTnpZZ01USXVOemMySURJZ01USXVOU0F5V2lJZ1ptbHNiRDBpSXpVMk5qVTNSU0lnYzNSeWIydGxQU0lqTlRZMk5UZEZJaUJ6ZEhKdmEyVXRkMmxrZEdnOUlqQXVOU0l2UGdvOEwzTjJaejRLKTsKICB9CiAgLmZvcm0tY29sbGFwc2UtdGFibGU6YWZ0ZXJ7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlCM2FXUjBhRDBpTVRFaUlHaGxhV2RvZEQwaU1URWlJSFpwWlhkQ2IzZzlJakFnTUNBeE1TQXhNU0lnWm1sc2JEMGlibTl1WlNJZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWo0S1BHTnBjbU5zWlNCamVEMGlOUzQxSWlCamVUMGlOUzQxSWlCeVBTSTFMalVpSUhSeVlXNXpabTl5YlQwaWNtOTBZWFJsS0MwNU1DQTFMalVnTlM0MUtTSWdabWxzYkQwaUkwTXpRMEZFT0NJZ1ptbHNiQzF2Y0dGamFYUjVQU0l3TGpVaUx6NEtQSEJoZEdnZ1pEMGlUVE11TVRZM05UWWdOQzQwTmpFeE1rTXpMakUwTnpreklEUXVOVEF6TURnZ015NHhNemsyTVNBMExqVTFNREE0SURNdU1UUXpOVElnTkM0MU9UWTRNME16TGpFME56UXpJRFF1TmpRek5UZ2dNeTR4TmpNME15QTBMalk0T0RJMElETXVNVGc1TnpJZ05DNDNNalUzT1V3MUxqTXhNVEUxSURjdU56VTJORU0xTGpNek16RWdOeTQzT0RjM055QTFMak0yTVRVM0lEY3VPREV6TWpNZ05TNHpPVFF6SURjdU9ETXdOelpETlM0ME1qY3dNeUEzTGpnME9ESTVJRFV1TkRZek1USWdOeTQ0TlRjME1pQTFMalE1T1RjeUlEY3VPRFUzTkRKRE5TNDFNell6TVNBM0xqZzFOelF5SURVdU5UY3lOQ0EzTGpnME9ESTVJRFV1TmpBMU1UTWdOeTQ0TXpBM05rTTFMall6TnpnMklEY3VPREV6TWpNZ05TNDJOall6TXlBM0xqYzROemMzSURVdU5qZzRNamtnTnk0M05UWTBURGN1T0RBNU56SWdOQzQzTWpVM09VTTNMamcwTURNeUlEUXVOamd5TURjZ055NDROVFk0TmlBMExqWXlPRGtnTnk0NE5UWTROaUEwTGpVM05ESTJRemN1T0RVMk56SWdOQzQxTXpRNU9TQTNMamcwT0RFNElEUXVORGsyTWprZ055NDRNekU0T0NBMExqUTJNVEV5UXpjdU9ERXlNamdnTkM0ME1Ua3lNaUEzTGpjNE1qRTVJRFF1TXpnek9Ua2dOeTQzTkRRNU9DQTBMak0xT1RNM1F6Y3VOekEzTnpZZ05DNHpNelEzTlNBM0xqWTJORGc1SURRdU16SXhOekVnTnk0Mk1qRXhOU0EwTGpNeU1UY3hURE11TXpjNE1qa2dOQzR6TWpFM01VTXpMak16TkRVMUlEUXVNekl4TnpFZ015NHlPVEUyTnlBMExqTXpORGMxSURNdU1qVTBORFlnTkM0ek5Ua3pOME16TGpJeE56STBJRFF1TXpnek9Ua2dNeTR4T0RjeE5TQTBMalF4T1RJeUlETXVNVFkzTlRZZ05DNDBOakV4TWxZMExqUTJNVEV5V2lJZ1ptbHNiRDBpSTBVMVJUZEdNU0l2UGdvOEwzTjJaejRLKTsKICB9CiAgbGlbZGF0YS10eXBlPWNvbnRyb2xfZmlsZXVwbG9hZF0gLnFxLXVwbG9hZC1idXR0b246YmVmb3JlIHsKICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIzYVdSMGFEMGlNemtpSUdobGFXZG9kRDBpTWpjaUlIWnBaWGRDYjNnOUlqQWdNQ0F6T1NBeU55SWdabWxzYkQwaWJtOXVaU0lnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JajRLUEhCaGRHZ2daRDBpVFRNeUxqTTNOU0F4TVM0ek1USTFRek14TGpVZ05DNDRNVEkxSURJMklEQWdNVGt1TXpjMUlEQkRNVE11TmpnM05TQXdJRGd1TnpVZ015NDFOakkxSURZdU9UTTNOU0E0TGprek56VkRNaTQ0TnpVZ09TNDRNVEkxSURBZ01UTXVNekV5TlNBd0lERTNMalZETUNBeU1pNHdOakkxSURNdU5UWXlOU0F5TlM0NE56VWdPQzR4TWpVZ01qWXVNalZJTXpFdU9EYzFTRE14TGprek56VkRNelV1TnpVZ01qVXVPRGMxSURNNExqYzFJREl5TGpZeU5TQXpPQzQzTlNBeE9DNDNOVU16T0M0M05TQXhOUzR3TmpJMUlETTJJREV4TGpnM05TQXpNaTR6TnpVZ01URXVNekV5TlZwTk1qWXVNRFl5TlNBeE5DNDRNVEkxUXpJMUxqa3pOelVnTVRRdU9UTTNOU0F5TlM0NE1USTFJREUxSURJMUxqWXlOU0F4TlVNeU5TNDBNemMxSURFMUlESTFMak14TWpVZ01UUXVPVE0zTlNBeU5TNHhPRGMxSURFMExqZ3hNalZNTWpBZ09TNDJNalZXTWpFdU9EYzFRekl3SURJeUxqSTFJREU1TGpjMUlESXlMalVnTVRrdU16YzFJREl5TGpWRE1Ua2dNakl1TlNBeE9DNDNOU0F5TWk0eU5TQXhPQzQzTlNBeU1TNDROelZXT1M0Mk1qVk1NVE11TlRZeU5TQXhOQzQ0TVRJMVF6RXpMak14TWpVZ01UVXVNRFl5TlNBeE1pNDVNemMxSURFMUxqQTJNalVnTVRJdU5qZzNOU0F4TkM0NE1USTFRekV5TGpRek56VWdNVFF1TlRZeU5TQXhNaTQwTXpjMUlERTBMakU0TnpVZ01USXVOamczTlNBeE15NDVNemMxVERFNExqa3pOelVnTnk0Mk9EYzFRekU1SURjdU5qSTFJREU1TGpBMk1qVWdOeTQxTmpJMUlERTVMakV5TlNBM0xqVTJNalZETVRrdU1qVWdOeTQxSURFNUxqUXpOelVnTnk0MUlERTVMall5TlNBM0xqVTJNalZETVRrdU5qZzNOU0EzTGpZeU5TQXhPUzQzTlNBM0xqWXlOU0F4T1M0NE1USTFJRGN1TmpnM05Vd3lOaTR3TmpJMUlERXpMamt6TnpWRE1qWXVNekV5TlNBeE5DNHhPRGMxSURJMkxqTXhNalVnTVRRdU5UWXlOU0F5Tmk0d05qSTFJREUwTGpneE1qVmFJaUJtYVd4c1BTSWpRak5DUTBORElpOCtDand2YzNablBnbz0pOwogIH0KICAuYXBwb2ludG1lbnREYXlQaWNrZXJCdXR0b24gewogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU9DSWdhR1ZwWjJoMFBTSXhOQ0lnZG1sbGQwSnZlRDBpTUNBd0lEZ2dNVFFpSUdacGJHdzlJbTV2Ym1VaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJK0NqeHdZWFJvSUdROUlrMHhJREV6VERjZ04wd3hJREF1T1RrNU9UazVJaUJ6ZEhKdmEyVTlJaU00TnprMVFVTWlJSE4wY205clpTMTNhV1IwYUQwaU1pSWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWlCemRISnZhMlV0YkdsdVpXcHZhVzQ5SW5KdmRXNWtJaTgrQ2p3dmMzWm5QZ289KTsKICB9CgogIC8qIE5FVyBUSEVNRSBTVFlMRSAqLwogIC8qUFJFRkVSRU5DRVMgU1RZTEUqLy8qUFJFRkVSRU5DRVMgU1RZTEUqLwogICAgLmZvcm0tYWxsIHsKICAgICAgZm9udC1mYW1pbHk6IEludGVyLCBzYW5zLXNlcmlmOwogICAgfQogICAgLmZvcm0tYWxsIC5xcS11cGxvYWQtYnV0dG9uLAogICAgLmZvcm0tYWxsIC5mb3JtLXN1Ym1pdC1idXR0b24sCiAgICAuZm9ybS1hbGwgLmZvcm0tc3VibWl0LXJlc2V0LAogICAgLmZvcm0tYWxsIC5mb3JtLXN1Ym1pdC1wcmludCB7CiAgICAgIGZvbnQtZmFtaWx5OiBJbnRlciwgc2Fucy1zZXJpZjsKICAgIH0KICAgIC5mb3JtLWFsbCAuZm9ybS1wYWdlYnJlYWstYmFjay1jb250YWluZXIsCiAgICAuZm9ybS1hbGwgLmZvcm0tcGFnZWJyZWFrLW5leHQtY29udGFpbmVyIHsKICAgICAgZm9udC1mYW1pbHk6IEludGVyLCBzYW5zLXNlcmlmOwogICAgfQogICAgLmZvcm0taGVhZGVyLWdyb3VwIHsKICAgICAgZm9udC1mYW1pbHk6IEludGVyLCBzYW5zLXNlcmlmOwogICAgfQogICAgLmZvcm0tbGFiZWwgewogICAgICBmb250LWZhbWlseTogSW50ZXIsIHNhbnMtc2VyaWY7CiAgICB9CiAgCiAgICAuZm9ybS1sYWJlbC5mb3JtLWxhYmVsLWF1dG8gewogICAgICAKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgZmxvYXQ6IG5vbmU7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgd2lkdGg6IDEwMCU7CiAgCiAgICB9CiAgCiAgICAuZm9ybS1saW5lIHsKICAgICAgbWFyZ2luLXRvcDogMTJweDsKICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDsKICAgIH0KICAKICAgIC5mb3JtLWFsbCB7CiAgICAgIG1heC13aWR0aDogNzUycHg7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgfQogIAogICAgLmZvcm0tbGFiZWwuZm9ybS1sYWJlbC1sZWZ0LAogICAgLmZvcm0tbGFiZWwuZm9ybS1sYWJlbC1yaWdodCwKICAgIC5mb3JtLWxhYmVsLmZvcm0tbGFiZWwtbGVmdC5mb3JtLWxhYmVsLWF1dG8sCiAgICAuZm9ybS1sYWJlbC5mb3JtLWxhYmVsLXJpZ2h0LmZvcm0tbGFiZWwtYXV0byB7CiAgICAgIHdpZHRoOiAyMzBweDsKICAgIH0KICAKICAgIC5mb3JtLWFsbCB7CiAgICAgIGZvbnQtc2l6ZTogMTZweAogICAgfQogICAgLmZvcm0tYWxsIC5xcS11cGxvYWQtYnV0dG9uLAogICAgLmZvcm0tYWxsIC5xcS11cGxvYWQtYnV0dG9uLAogICAgLmZvcm0tYWxsIC5mb3JtLXN1Ym1pdC1idXR0b24sCiAgICAuZm9ybS1hbGwgLmZvcm0tc3VibWl0LXJlc2V0LAogICAgLmZvcm0tYWxsIC5mb3JtLXN1Ym1pdC1wcmludCB7CiAgICAgIGZvbnQtc2l6ZTogMTZweAogICAgfQogICAgLmZvcm0tYWxsIC5mb3JtLXBhZ2VicmVhay1iYWNrLWNvbnRhaW5lciwKICAgIC5mb3JtLWFsbCAuZm9ybS1wYWdlYnJlYWstbmV4dC1jb250YWluZXIgewogICAgICBmb250LXNpemU6IDE2cHgKICAgIH0KICAKICAgIC5zdXBlcm5vdmEgLmZvcm0tYWxsLCAuZm9ybS1hbGwgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOwogICAgfQogIAogICAgLmZvcm0tYWxsIHsKICAgICAgY29sb3I6ICMyQzMzNDU7CiAgICB9CiAgICAuZm9ybS1oZWFkZXItZ3JvdXAgLmZvcm0taGVhZGVyIHsKICAgICAgY29sb3I6ICMyQzMzNDU7CiAgICB9CiAgICAuZm9ybS1oZWFkZXItZ3JvdXAgLmZvcm0tc3ViSGVhZGVyIHsKICAgICAgY29sb3I6ICMyQzMzNDU7CiAgICB9CiAgICAuZm9ybS1sYWJlbC10b3AsCiAgICAuZm9ybS1sYWJlbC1sZWZ0LAogICAgLmZvcm0tbGFiZWwtcmlnaHQsCiAgICAuZm9ybS1odG1sLAogICAgLmZvcm0tY2hlY2tib3gtaXRlbSBsYWJlbCwKICAgIC5mb3JtLXJhZGlvLWl0ZW0gbGFiZWwgewogICAgICBjb2xvcjogIzJDMzM0NTsKICAgIH0KICAgIC5mb3JtLXN1Yi1sYWJlbCB7CiAgICAgIGNvbG9yOiAjNDY0ZDVmOwogICAgfQogIAogICAgLnN1cGVybm92YSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM2LDIzNywyNDMsMCk7CiAgICB9CiAgICAuc3VwZXJub3ZhIGJvZHkgewogICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKICAgIH0KICAKICAgIC5mb3JtLXRleHRib3gsCiAgICAuZm9ybS10ZXh0YXJlYSwKICAgIC5mb3JtLWRyb3Bkb3duLAogICAgLmZvcm0tcmFkaW8tb3RoZXItaW5wdXQsCiAgICAuZm9ybS1jaGVja2JveC1vdGhlci1pbnB1dCwKICAgIC5mb3JtLWNhcHRjaGEgaW5wdXQsCiAgICAuZm9ybS1zcGlubmVyIGlucHV0IHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICAgIH0KICAKICAgIC5zdXBlcm5vdmEgewogICAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lOwogICAgfQogICAgI3N0YWdlIHsKICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsKICAgIH0KICAKICAgIC5mb3JtLWFsbCB7CiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7CiAgICB9CiAgCiAgICAuZm9ybS1hbGwgewogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICB9CiAgICAuZm9ybS1hbGw6YmVmb3JlIHsKICAgICAgY29udGVudDogIiI7CiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiaHR0cHM6Ly93d3cuam90Zm9ybS5jb20vdXBsb2Fkcy9PdXJUaW1lRm9yVGVjaC9mb3JtX2ZpbGVzL1llbGxvdyUyMGxvZ28lMjBjb3B5LjVmZWRmYTAwMTRlNGIwLjc4MDc0OTkzLnBuZyIpOwogICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIGhlaWdodDogMTQwcHg7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgYmFja2dyb3VuZC1zaXplOiAzOTNweCAxNDBweDsKICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICAgICAgd2lkdGg6IDEwMCU7CiAgICB9CiAgICAuZm9ybS1hbGwgewogICAgICBtYXJnaW4tdG9wOiAxNjBweCAhaW1wb3J0YW50OwogICAgfQogICAgLmZvcm0tYWxsOmJlZm9yZSB7CiAgICAgIHRvcDogLTE1MHB4OwogICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyOwogICAgfQogICAgICAgICAgIAogIC5pZS04IC5mb3JtLWFsbDpiZWZvcmUgeyBkaXNwbGF5OiBub25lOyB9CiAgLmllLTggewogICAgbWFyZ2luLXRvcDogYXV0bzsKICAgIG1hcmdpbi10b3A6IGluaXRpYWw7CiAgfQogIAogIC8qUFJFRkVSRU5DRVMgU1RZTEUqLy8qX19JTlNQRUNUX1NFUEVSQVRPUl9fKi8jaWRfMjAgewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9CgojaWRfMTcgewogIG1hcmdpbi1ib3R0b206IDA7CiAgcGFkZGluZy1ib3R0b206IDAKfQoKI3RleHRfMjAgcCB7CiAgbWFyZ2luLXRvcDogMDsKfQogICAgLyogSW5qZWN0ZWQgQ1NTIENvZGUgKi8KPC9zdHlsZT4KCjwhLS1baWYgbHQgSUUgOV0+PHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuMDEuam90Zm9yLm1zL2pzL3ZlbmRvci9mbGFzaGNhbnZhcy5qcz8zLjMuMjkzNTEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+PCFbZW5kaWZdLS0+CjxzY3JpcHQgc3JjPSJodHRwczovL2NkbjAyLmpvdGZvci5tcy9qcy92ZW5kb3IvanF1ZXJ5LTEuOC4wLm1pbi5qcz8zLjMuMjkzNTEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2NkbjAzLmpvdGZvci5tcy9qcy92ZW5kb3IvalNpZ25hdHVyZS5taW4ubm9jb25mbGljdC5qcz8zLjMuMjkzNTEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2NkbjAxLmpvdGZvci5tcy9qcy92ZW5kb3Ivam90Zm9ybS5zaWduYXR1cmVwYWQuanM/My4zLjI5MzUxIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4wMi5qb3Rmb3IubXMvc3RhdGljL3Byb3RvdHlwZS5mb3Jtcy5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuMDMuam90Zm9yLm1zL3N0YXRpYy9qb3Rmb3JtLmZvcm1zLmpzPzMuMy4yOTM1MSIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBkZWZlciBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3B1bnljb2RlLzEuNC4xL3B1bnljb2RlLmpzIj48L3NjcmlwdD4KPHNjcmlwdCBkZWZlciBzcmM9Imh0dHBzOi8vY2RuMDEuam90Zm9yLm1zL2pzL3ZlbmRvci9tYXNrZWRpbnB1dC5taW4uanM/dj0zLjMuMjkzNTEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgZGVmZXIgc3JjPSJodHRwczovL2NkbjAyLmpvdGZvci5tcy9qcy92ZW5kb3IvanF1ZXJ5Lm1hc2tlZGlucHV0Lm1pbi5qcz92PTMuMy4yOTM1MSIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vanMuam90Zm9ybS5jb20vdmVuZG9yL3Bvc3RNZXNzYWdlLmpzPzMuMy4yOTM1MSIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vanMuam90Zm9ybS5jb20vV2lkZ2V0c1NlcnZlci5qcz92PTE2MzgxMTQ0NzUzMDciIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4JSm90Rm9ybS5uZXdEZWZhdWx0VGhlbWUgPSB0cnVlOwoJSm90Rm9ybS5leHRlbmRzTmV3VGhlbWUgPSBmYWxzZTsKCUpvdEZvcm0ubmV3UGF5bWVudFVJRm9yTmV3Q3JlYXRlZEZvcm1zID0gdHJ1ZTsKCUpvdEZvcm0ubmV3UGF5bWVudFVJID0gdHJ1ZTsKCiAgIEpvdEZvcm0uc2V0Q29uZGl0aW9ucyhbeyJhY3Rpb24iOlt7ImlkIjoiYWN0aW9uXzE2MDk0MzY4NDgxNTQiLCJ2aXNpYmlsaXR5IjoiU2hvdyIsImlzRXJyb3IiOmZhbHNlLCJmaWVsZCI6IjI5In1dLCJpZCI6IjE2MDk0MzcwMTMxNTciLCJpbmRleCI6IjAiLCJsaW5rIjoiQW55IiwicHJpb3JpdHkiOiIwIiwidGVybXMiOlt7ImlkIjoidGVybV8xNjA5NDM2OTg4MjAxIiwiZmllbGQiOiIyOCIsIm9wZXJhdG9yIjoiaXNGaWxsZWQiLCJ2YWx1ZSI6IiIsImlzRXJyb3IiOmZhbHNlfSx7ImlkIjoidGVybV8xNjA5NDM2OTc0MTUwIiwiZmllbGQiOiIyNyIsIm9wZXJhdG9yIjoiaXNGaWxsZWQiLCJ2YWx1ZSI6IiIsImlzRXJyb3IiOmZhbHNlfSx7ImlkIjoidGVybV8xNjA5NDM2OTYyODQwIiwiZmllbGQiOiIyNiIsIm9wZXJhdG9yIjoiaXNGaWxsZWQiLCJ2YWx1ZSI6IiIsImlzRXJyb3IiOmZhbHNlfSx7ImlkIjoidGVybV8xNjA5NDM2OTQxOTM5IiwiZmllbGQiOiIyNCIsIm9wZXJhdG9yIjoiaXNGaWxsZWQiLCJ2YWx1ZSI6IiIsImlzRXJyb3IiOmZhbHNlfSx7ImlkIjoidGVybV8xNjA5NDM2ODU3MTY1IiwiZmllbGQiOiIyNSIsIm9wZXJhdG9yIjoiaXNGaWxsZWQiLCJ2YWx1ZSI6IiIsImlzRXJyb3IiOmZhbHNlfSx7ImlkIjoidGVybV8xNjA5NDM2ODQ4MTU0IiwiZmllbGQiOiIyMyIsIm9wZXJhdG9yIjoiaXNGaWxsZWQiLCJ2YWx1ZSI6IiIsImlzRXJyb3IiOmZhbHNlfV0sInR5cGUiOiJmaWVsZCJ9LHsiYWN0aW9uIjpbeyJpZCI6ImFjdGlvbl8xNjA5NDM2ODI5OTA4IiwidmlzaWJpbGl0eSI6IlNob3ciLCJpc0Vycm9yIjpmYWxzZSwiZmllbGQiOiIxOSJ9XSwiaWQiOiIxNjA5NDM2ODQ0MzEzIiwiaW5kZXgiOiIxIiwibGluayI6IkFueSIsInByaW9yaXR5IjoiMSIsInRlcm1zIjpbeyJpZCI6InRlcm1fMTYwOTQzNjgyOTkwOCIsImZpZWxkIjoiMTciLCJvcGVyYXRvciI6ImVxdWFscyIsInZhbHVlIjoiWWVzIiwiaXNFcnJvciI6ZmFsc2V9XSwidHlwZSI6ImZpZWxkIn0seyJhY3Rpb24iOlt7ImlkIjoiYWN0aW9uXzE2MDk0MzY4MDcxMjIiLCJ2aXNpYmlsaXR5IjoiU2hvdyIsImlzRXJyb3IiOmZhbHNlLCJmaWVsZCI6IjE1In1dLCJpZCI6IjE2MDk0MzY4MjYyMzciLCJpbmRleCI6IjIiLCJsaW5rIjoiQW55IiwicHJpb3JpdHkiOiIyIiwidGVybXMiOlt7ImlkIjoidGVybV8xNjA5NDM2ODA3MTIyIiwiZmllbGQiOiIxNiIsIm9wZXJhdG9yIjoiZXF1YWxzIiwidmFsdWUiOiJZZXMiLCJpc0Vycm9yIjpmYWxzZX1dLCJ0eXBlIjoiZmllbGQifSx7ImFjdGlvbiI6W3siaWQiOiJhY3Rpb25fMTYwOTQzNjcyNzU3NiIsInZpc2liaWxpdHkiOiJTaG93IiwiaXNFcnJvciI6ZmFsc2UsImZpZWxkIjoiMTgifV0sImlkIjoiMTYwOTQzNjgwMzczNiIsImluZGV4IjoiMyIsImxpbmsiOiJBbnkiLCJwcmlvcml0eSI6IjMiLCJ0ZXJtcyI6W3siaWQiOiJ0ZXJtXzE2MDk0MzY3Mjc1NzYiLCJmaWVsZCI6IjE0Iiwib3BlcmF0b3IiOiJlcXVhbHMiLCJ2YWx1ZSI6IlllcyIsImlzRXJyb3IiOmZhbHNlfV0sInR5cGUiOiJmaWVsZCJ9LHsiYWN0aW9uIjpbeyJpZCI6ImFjdGlvbl8xNjA5NDM1NDk4NzAwIiwidmlzaWJpbGl0eSI6IlNob3ciLCJpc0Vycm9yIjpmYWxzZSwiZmllbGQiOiIxMyJ9XSwiaWQiOiIxNjA5NDM1NTEyMzA5IiwiaW5kZXgiOiI0IiwibGluayI6IkFueSIsInByaW9yaXR5IjoiNCIsInRlcm1zIjpbeyJpZCI6InRlcm1fMTYwOTQzNTQ5ODcwMCIsImZpZWxkIjoiMTIiLCJvcGVyYXRvciI6ImVxdWFscyIsInZhbHVlIjoiWWVzIiwiaXNFcnJvciI6ZmFsc2V9XSwidHlwZSI6ImZpZWxkIn1dKTsJSm90Rm9ybS5jbGVhckZpZWxkT25IaWRlPSJkaXNhYmxlIjsKCUpvdEZvcm0uc3VibWl0RXJyb3I9Imp1bXBUb0ZpcnN0RXJyb3IiOwoKCUpvdEZvcm0uaW5pdChmdW5jdGlvbigpewoJLypJTklULVNUQVJUKi8KICAgICAgSm90Rm9ybS5zZXRQaG9uZU1hc2tpbmdWYWxpZGF0b3IoICdpbnB1dF84X2Z1bGwnLCAnKCMjIykgIyMjLSMjIyMnICk7CiAgICAgIEpvdEZvcm0uc2V0UGhvbmVNYXNraW5nVmFsaWRhdG9yKCAnaW5wdXRfOV9mdWxsJywgJygjIyMpICMjIy0jIyMjJyApOwppZiAod2luZG93LkpvdEZvcm0gJiYgSm90Rm9ybS5hY2Nlc3NpYmxlKSAkKCdpbnB1dF8xMycpLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLDApOwppZiAod2luZG93LkpvdEZvcm0gJiYgSm90Rm9ybS5hY2Nlc3NpYmxlKSAkKCdpbnB1dF8xOCcpLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLDApOwppZiAod2luZG93LkpvdEZvcm0gJiYgSm90Rm9ybS5hY2Nlc3NpYmxlKSAkKCdpbnB1dF8xNScpLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLDApOwppZiAod2luZG93LkpvdEZvcm0gJiYgSm90Rm9ybS5hY2Nlc3NpYmxlKSAkKCdpbnB1dF8xOScpLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLDApOwppZiAod2luZG93LkpvdEZvcm0gJiYgSm90Rm9ybS5hY2Nlc3NpYmxlKSAkKCdpbnB1dF8yOScpLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLDApOwogICAgICBKb3RGb3JtLnNldEN1c3RvbUhpbnQoICdpbnB1dF8yOScsICdUeXBlIGhlcmUuLi4nICk7CiAgICAgIEpvdEZvcm0uYWx0ZXJUZXh0cyh1bmRlZmluZWQpOwoJLypJTklULUVORCovCgl9KTsKCiAgIEpvdEZvcm0ucHJlcGFyZUNhbGN1bGF0aW9uc09uVGhlRmx5KFtudWxsLHsibmFtZSI6Ik1hc3NhZ2UiLCJxaWQiOiIxIiwidGV4dCI6Ilx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRNYXNzYWdlIFRoZXJhcHkgU2VydmljZSBBZ3JlZW1lbnQgJiBJbnRha2UgRm9ybSIsInR5cGUiOiJjb250cm9sX2hlYWQifSx7Im5hbWUiOiJzdWJtaXQyIiwicWlkIjoiMiIsInRleHQiOiJTdWJtaXQiLCJ0eXBlIjoiY29udHJvbF9idXR0b24ifSxudWxsLG51bGwseyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnRzTmFtZSIsInFpZCI6IjUiLCJ0ZXh0IjoiQ2xpZW50J3MgTmFtZSIsInR5cGUiOiJjb250cm9sX2Z1bGxuYW1lIn0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnRzQWRkcmVzcyIsInFpZCI6IjYiLCJ0ZXh0IjoiQ2xpZW50J3MgQWRkcmVzcyIsInR5cGUiOiJjb250cm9sX2FkZHJlc3MifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudHNEYXRlIiwicWlkIjoiNyIsInRleHQiOiJDbGllbnQncyBEYXRlIE9mIEJpcnRoIChvcHRpb25hbCkiLCJ0eXBlIjoiY29udHJvbF9iaXJ0aGRhdGUifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudHNIb21lIiwicWlkIjoiOCIsInRleHQiOiJDbGllbnQncyBIb21lIE51bWJlciIsInR5cGUiOiJjb250cm9sX3Bob25lIn0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnRzQ2VsbCIsInFpZCI6IjkiLCJ0ZXh0IjoiQ2xpZW50J3MgQ2VsbCBOdW1iZXIiLCJ0eXBlIjoiY29udHJvbF9waG9uZSJ9LHsibmFtZSI6ImNsaWVudHNFbWVyZ2VuY3kiLCJxaWQiOiIxMCIsInRleHQiOiJDbGllbnQncyBFbWVyZ2VuY3kgQ29udGFjdCIsInR5cGUiOiJjb250cm9sX3dpZGdldCJ9LHsibmFtZSI6InBhZ2VCcmVhayIsInFpZCI6IjExIiwidGV4dCI6IlBhZ2UgQnJlYWsiLCJ0eXBlIjoiY29udHJvbF9wYWdlYnJlYWsifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImFyZVlvdSIsInFpZCI6IjEyIiwidGV4dCI6IkFyZSB5b3UgcHJlc2VudGx5IHRha2luZyBhbnkgbWVkaWNhdGlvbj8iLCJ0eXBlIjoiY29udHJvbF9yYWRpbyJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoicGxlYXNlTGlzdCIsInFpZCI6IjEzIiwic3ViTGFiZWwiOiIiLCJ0ZXh0IjoiUGxlYXNlIGxpc3QgYWxsIG1lZGljYXRpb25zIHlvdSBhcmUgcHJlc2VudGx5IHRha2luZzoiLCJ0eXBlIjoiY29udHJvbF90ZXh0Ym94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJoYXZlWW91IiwicWlkIjoiMTQiLCJ0ZXh0IjoiSGF2ZSB5b3UgaGFkIGEgcmVjZW50IG1ham9yIHN1cmdpY2FsIHByb2NlZHVyZSBvciBpbmp1cnk/IiwidHlwZSI6ImNvbnRyb2xfcmFkaW8ifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6InBsZWFzZUV4cGxhaW4xNSIsInFpZCI6IjE1Iiwic3ViTGFiZWwiOiIiLCJ0ZXh0IjoiUGxlYXNlIGV4cGxhaW4gYW55IHRyZWF0bWVudCB5b3UncmUgcmVjZWl2aW5nOiIsInR5cGUiOiJjb250cm9sX3RleHRib3gifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImFyZVlvdTE2IiwicWlkIjoiMTYiLCJ0ZXh0IjoiQXJlIHlvdSBjdXJyZW50bHkgc2VlaW5nIGEgQ2hpcm9wcmFjdG9yLCBQaHlzaWNhbCBUaGVyYXBpc3QsIG9yIFBoeXNpY2lhbiBmb3IgYW4gb25nb2luZyBpc3N1ZT8iLCJ0eXBlIjoiY29udHJvbF9yYWRpbyJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoiYXJlWW91MTciLCJxaWQiOiIxNyIsInRleHQiOiJBcmUgeW91IGFsbGVyZ2ljIHRvIGFueSBMb3Rpb25zIG9yIE9pbHM/IiwidHlwZSI6ImNvbnRyb2xfcmFkaW8ifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6InBsZWFzZUV4cGxhaW4xOCIsInFpZCI6IjE4Iiwic3ViTGFiZWwiOiIiLCJ0ZXh0IjoiUGxlYXNlIGV4cGxhaW4gYW55IHN1cmdpY2FsIHByb2NlZHVyZXMgb3IgaW5qdXJpZXM6IiwidHlwZSI6ImNvbnRyb2xfdGV4dGJveCJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoicGxlYXNlRXhwbGFpbiIsInFpZCI6IjE5Iiwic3ViTGFiZWwiOiIiLCJ0ZXh0IjoiUGxlYXNlIGV4cGxhaW4gYW55IGFsbGVyZ2llczoiLCJ0eXBlIjoiY29udHJvbF90ZXh0Ym94In0seyJuYW1lIjoiaW5wdXQyMCIsInFpZCI6IjIwIiwidGV4dCI6Ik5vdGU6IEhhbmRzIG9mIGEgR29kZGVzcyB1c2VzIEJvbiBWaXRhbCBMb3Rpb25zLCBDcmVhbXMgJmFtcDsgT2lscy4gVGhlc2UgYXJlIGZvcm11bGF0ZWQgZm9yIHNlbnNpdGl2ZSBza2luIGFuZCBhcmUgd2F0ZXIgc29sdWJsZS4iLCJ0eXBlIjoiY29udHJvbF90ZXh0In0seyJuYW1lIjoicGFnZUJyZWFrMjEiLCJxaWQiOiIyMSIsInRleHQiOiJQYWdlIEJyZWFrIiwidHlwZSI6ImNvbnRyb2xfcGFnZWJyZWFrIn0seyJuYW1lIjoiaW5wdXQyMiIsInFpZCI6IjIyIiwidGV4dCI6IkNoZWNrIGFueSBvZsKgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIHRoYXQgYXBwbHkgdG8geW91LCBwYXN0IGFuZCBwcmVzZW50LiBQbGVhc2UgYWRkIHlvdXIgY29tbWVudHMgYXQgdGhlIGVuZCB0byBjbGFyaWZ5IHRoZSBjb25kaXRpb25zIHlvdSBjaGVja2VkLiIsInR5cGUiOiJjb250cm9sX3RleHQifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6Im11c2N1bG9za2VsZXRhbCIsInFpZCI6IjIzIiwidGV4dCI6Ik11c2N1bG9za2VsZXRhbCIsInR5cGUiOiJjb250cm9sX2NoZWNrYm94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjaXJjdWxhdG9yeXJlc3BpcmF0b3J5IiwicWlkIjoiMjQiLCJ0ZXh0IjoiQ2lyY3VsYXRvcnlcdTAwMkZSZXNwaXJhdG9yeSIsInR5cGUiOiJjb250cm9sX2NoZWNrYm94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJuZXJ2b3VzU3lzdGVtIiwicWlkIjoiMjUiLCJ0ZXh0IjoiTmVydm91cyBTeXN0ZW0iLCJ0eXBlIjoiY29udHJvbF9jaGVja2JveCJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoiZGlnZXN0aXZlU3lzdGVtIiwicWlkIjoiMjYiLCJ0ZXh0IjoiRGlnZXN0aXZlIFN5c3RlbSIsInR5cGUiOiJjb250cm9sX2NoZWNrYm94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJkaWdlc3RpdmVTeXN0ZW0yNyIsInFpZCI6IjI3IiwidGV4dCI6IkRpZ2VzdGl2ZSBTeXN0ZW0iLCJ0eXBlIjoiY29udHJvbF9jaGVja2JveCJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoib3RoZXIiLCJxaWQiOiIyOCIsInRleHQiOiJPdGhlciIsInR5cGUiOiJjb250cm9sX2NoZWNrYm94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJwbGVhc2VFeHBsYWluMjkiLCJxaWQiOiIyOSIsInN1YkxhYmVsIjoiIiwidGV4dCI6IlBsZWFzZSBleHBsYWluIGFueSBjb25kaXRpb25zIHlvdSBjaGVja2VkOiIsInR5cGUiOiJjb250cm9sX3RleHRhcmVhIn0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnRTaWduYXR1cmUzMCIsInFpZCI6IjMwIiwic3ViTGFiZWwiOiJVc2UgeW91ciBtb3VzZSB0byBzaWduIChvciB5b3VyIGZpbmdlciBpZiBvbiBtb2JpbGUpIiwidGV4dCI6IkNsaWVudCBTaWduYXR1cmUiLCJ0eXBlIjoiY29udHJvbF9zaWduYXR1cmUifSx7Im5hbWUiOiJpbnB1dDMxIiwicWlkIjoiMzEiLCJ0ZXh0IjoiSSB1bmRlcnN0YW5kIHRoYXQgYSBtYXNzYWdlIFRoZXJhcGlzdCBkb2VzIG5vdCBkaWFnbm9zZSBkaXNlYXNlLCBpbGxuZXNzLCBvciBwcmVzY3JpYmUgYW55IHRyZWF0bWVudCBvciBkcnVncywgbm9yIGRvIHRoZXkgcHJvdmlkZSBzcGluYWwgbWFuaXB1bGF0aW9uLiBJIHVuZGVyc3RhbmQgdGhhdCBkcmFwaW5nIHdpbGwgYmUgdXNlZCBhdCBhbGwgdGltZXMgYW5kIHRoYXQgYnJlYXN0IG1hc3NhZ2Ugd2lsbCBub3QgYmUgYWRtaW5pc3RlcmVkIG9uIGZlbWFsZSBjbGllbnRzLiBJIHVuZGVyc3RhbmQgdGhhdCBpZiBJIGJlY29tZSB1bmNvbWZvcnRhYmxlIGZvciBhbnkgcmVhc29uIHRoYXQgSSBtYXkgYXNrIHRoZSBUaGVyYXBpc3QgdG8gZW5kIHRoZSBtYXNzYWdlIHNlc3Npb24sIGFuZCB0aGV5IHdpbGwgZW5kIHRoZSBzZXNzaW9uLiBJIHVuZGVyc3RhbmQgdGhhdCB0aGUgbWFzc2FnZSBUaGVyYXBpc3QgbWF5IGVuZCB0aGUgc2Vzc2lvbiBmb3IgYW55IGluYXBwcm9wcmlhdGUgYmVoYXZpb3IuIEkgaGF2ZSBzdGF0ZWQgYWxsIG9mIHRoZSBjb25kaXRpb25zIHRoYXQgSSBhbSBhd2FyZSBvZiwgYW5kIHRoaXMgaW5mb3JtYXRpb24gaXMgdHJ1ZSBhbmQgYWNjdXJhdGUuIEkgd2lsbCBpbmZvcm0gdGhlIGhlYWx0aCBjYXJlIHByb3ZpZGVyIG9mIGFueSBjaGFuZ2VzIGluIG15IHN0YXR1cy4iLCJ0eXBlIjoiY29udHJvbF90ZXh0In0seyJuYW1lIjoicGFnZUJyZWFrMzIiLCJxaWQiOiIzMiIsInRleHQiOiJQYWdlIEJyZWFrIiwidHlwZSI6ImNvbnRyb2xfcGFnZWJyZWFrIn0seyJuYW1lIjoiaW5wdXQzMyIsInFpZCI6IjMzIiwidGV4dCI6IkNvbnNlbnQgZm9yIFRoZXJhcHkgYW5kIFdhaXZlciBvZiBMaWFiaWxpdHkiLCJ0eXBlIjoiY29udHJvbF90ZXh0In0seyJuYW1lIjoiaW5wdXQzNCIsInFpZCI6IjM0IiwidGV4dCI6IlRoZSB1bmRlcnNpZ25lZCAo4oCcQ2xpZW504oCdKSBoZXJlYnkgZnJlZWx5IGNvbnNlbnRzIHRvIHJlY2VpcHQgb2YgbWFzc2FnZSBzZXJ2aWNlcyBmcm9tOlxuTmdvemkgT251bWEgTGljZW5zZWQgTWFzc2FnZSBUaGVyYXBpc3RcbkNsaWVudCBhZ3JlZXMgYXMgZm9sbG93czpcblxuQ2xpZW50IHVuZGVyc3RhbmRzIGFuZCBhZ3JlZXMgdGhhdCB0aGV5IHdpbGwgcHJvdmlkZSB0aGUgVGhlcmFwaXN0IHdpdGggY29tcGxldGUgYW5kIGFjY3VyYXRlIGhlYWx0aCBpbmZvcm1hdGlvbiwgYW5kIGEgd3JpdHRlbiByZWZlcnJhbCBmcm9tIENsaWVudOKAmXMgcHJpbWFyeSBoZWFsdGhjYXJlIHByb3ZpZGVyIGlmIENsaWVudCBpcyBjdXJyZW50bHkgcmVjZWl2aW5nIGNhcmUgb3IgaGFzIGEgc3BlY2lmaWMgbWVkaWNhbCBjb25kaXRpb24gb3Igc3ltcHRvbXMgZm9yIHdoaWNoIENsaWVudCB0YWtlcyBtZWRpY2F0aW9uIG9yIHJlY2VpdmVzIHBlcmlvZGljIGV2YWx1YXRpb25zIG9yIHRyZWF0bWVudC4gQ2xpZW50IHVuZGVyc3RhbmRzIHRoYXQgbWFzc2FnZSB0aGVyYXB5IGlzIGRlc2lnbmVkIHRvIGJlIGFuIGFuY2lsbGFyeSBoZWFsdGggYWlkIGFuZCBpcyBub3Qgc3VpdGFibGUgZm9yIHByaW1hcnkgbWVkaWNhbCB0cmVhdG1lbnQgZm9yIGFueSBjb25kaXRpb24uIENsaWVudCBhbmQgVGhlcmFwaXN0IGhhdmUgZGlzY3Vzc2VkIHRoZSBwb3RlbnRpYWwgYmVuZWZpdHMgYW5kIHBvc3NpYmxlIHNpZGUgZWZmZWN0cyBvZiBtYXNzYWdlIHRoZXJhcHkgYW5kIGhhdmUgYWdyZWVkIHVwb24gYSBjb3Vyc2Ugb2YgZm9jdXNlZCBhdHRlbnRpb24gYW5kIG1hbnVhbGx5IHRoZXJhcHkgZm9yIHRoZSBwcmVkZXRlcm1pbmVkIGdvYWxzIG9mIHN0cmVzcyByZWR1Y3Rpb24sIHJlbGllZiBvZiBtdXNjdWxhciBkaXNjb21mb3J0LCBhbmRcdTAwMkZvciBwcm9tb3Rpb24gb2YgZ2VuZXJhbCBoZWFsdGguIENsaWVudCBoYXMgYmVlbiBnaXZlbiBhbiBvcHBvcnR1bml0eSB0byBhc2sgcXVlc3Rpb25zIG9mIHRoZSBUaGVyYXBpc3QgYW5kIGhhcyByZWNlaXZlZCBhbGwgcmVxdWVzdGVkIGluZm9ybWF0aW9uLlxuQ2xpZW50IHVuZGVyc3RhbmRzIHRoYXQgdGhlIHVuY2xvdGhlZCBib2R5IHdpbGwgYmUgZHJhcGVkIGF0IGFsbCB0aW1lcyBmb3Igd2FybXRoLCBzZW5zZSBvZiBzZWN1cml0eSwgYW5kIGFzIGEgbWFyayBvZiBtYXNzYWdlIHRoZXJhcHkgcHJvZmVzc2lvbmFsaXNtLiBDbGllbnQgYWdyZWVzIHRvIGltbWVkaWF0ZWx5IGluZm9ybSB0aGUgVGhlcmFwaXN0IG9mIGFueSB1bnVzdWFsIHNlbnNhdGlvbiBvciBkaXNjb21mb3J0IHNvIHRoYXQgdGhlIGFwcGxpY2F0aW9uIG9mIHByZXNzdXJlIG1heSBiZSBhZGp1c3RlZCB0byBDbGllbnTigJlzIGxldmVsIG9mIGNvbWZvcnQuIENsaWVudCB1bmRlcnN0YW5kcyB0aGF0IG1hc3NhZ2UgdGhlcmFweSBpcyBub3Qgc2V4dWFsIGluIGFueSBtYW5uZXIgYW5kIHRoYXQgYW55IGlsbGljaXQgb3Igc3VnZ2VzdGl2ZSByZW1hcmtzIG9yIGJlaGF2aW9yIG9uIHRoZSBjbGllbnTigJlzIHBhcnQsIHdpbGwgcmVzdWx0IGluIGFuIGltbWVkaWF0ZSB0ZXJtaW5hdGlvbiBvZiB0aGUgdGhlcmFweSBzZXNzaW9uLiBDbGllbnQgdW5kZXJzdGFuZHMgdGhhdCBwYXltZW50IHdpbGwgYmUgZXhwZWN0ZWQgaW4gZnVsbDsgcmVnYXJkbGVzcyBpZiB0aGUgbWFzc2FnZSBpcyBjb21wbGV0ZWQgb3Igbm90LlxuQ2xpZW50IGhlcmVieSBhc3N1bWVzIGZ1bGx5IHJlc3BvbnNpYmlsaXR5IGZvciByZWNlaXB0IG9mIHRoZSBtYXNzYWdlIHRoZXJhcHksIGFuZCByZWxlYXNlcyBhbmQgZGlzY2hhcmdlcyBUaGVyYXBpc3QgZnJvbSBhbnkgYW5kIGFsbCBjbGFpbXMsIGxpYWJpbGl0aWVzLCBkYW1hZ2VzLCBhY3Rpb25zLCBvciBjYXVzZXMgb2YgYWN0aW9uIGFyaXNpbmcgZnJvbSB0aGUgdGhlcmFweSByZWNlaXZlZCBoZXJldW5kZXIsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgZGFtYWdlcyBhcmlzaW5nIGZyb20gYWN0cyBvZiBhY3RpdmUgb3IgcGFzc2l2ZSBuZWdsaWdlbmNlIG9uIHRoZSBwYXJ0IG9mIHRoZSBUaGVyYXBpc3QgLCB0byB0aGUgZnVsbGVzdCBleHRlbnQgYWxsb3dlZCBieSBsYXcuXG5DbGllbnQgdW5kZXJzdGFuZHMgdGhhdCBlYWNoIGFwcG9pbnRtZW50IHRpbWUgaXMgZGVzaWduYXRlZCBmb3IgQ2xpZW50IGFuZCBhZ3JlZXMgdG8gYmUgcHJlcGFyZWQgdG8gc3RhcnQgc2Vzc2lvbiBhdCBhcHBvaW50bWVudCB0aW1lIG9yIGZvcmZlaXQgdGhlIHRpbWUgdGhhdCB0aGV5IGFyZSBub3QuXG5DbGllbnQsIGluIHNpZ25pbmcgdGhpcyBjb25zZW50IGZvciBUaGVyYXB5IGFuZCBXYWl2ZXIgb2YgTGlhYmlsaXR5ICjigJxDb25zZW504oCdKSwgdW5kZXJzdGFuZHMgYW5kIGFncmVlcyB0aGF0IHRoaXMgQ29uc2VudCB3aWxsIGFwcGx5IHRvIGFuZCBnb3Zlcm4gdGhlIGN1cnJlbnQgYW5kIGFsbCBmdXR1cmUgdGhlcmFweSBzZXNzaW9ucyBwZXJmb3JtZWQgYnkgVGhlcmFwaXN0XG4iLCJ0eXBlIjoiY29udHJvbF90ZXh0In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnRTaWduYXR1cmUiLCJxaWQiOiIzNSIsInN1YkxhYmVsIjoiVXNlIHlvdXIgbW91c2UgdG8gc2lnbiAob3IgeW91ciBmaW5nZXIgaWYgb24gbW9iaWxlKSIsInRleHQiOiJDbGllbnQgU2lnbmF0dXJlIiwidHlwZSI6ImNvbnRyb2xfc2lnbmF0dXJlIn0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnROYW1lIiwicWlkIjoiMzYiLCJ0ZXh0IjoiQ2xpZW50IE5hbWUiLCJ0eXBlIjoiY29udHJvbF9mdWxsbmFtZSJ9LG51bGwseyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJjbGllbnRzRW1haWwiLCJxaWQiOiIzOCIsInN1YkxhYmVsIjoiVG8gc2VuZCBhIGNvcHkgb2YgdGhlIGNvbXBsZXRlZCBmb3JtIiwidGV4dCI6IkNsaWVudCdzIEVtYWlsIiwidHlwZSI6ImNvbnRyb2xfZW1haWwifSxudWxsLHsiZGVzY3JpcHRpb24iOiIiLCJsYWJlbFRleHQiOiIiLCJuYW1lIjoic2lnbmF0dXJlX2Zvcl9pbnRha2VfZm9ybV8yNWZlZTJiNDVkNTljNzU2ODE3OTQ1NyIsInFpZCI6IjQwIiwidGV4dCI6InNpZ25hdHVyZV9mb3JfaW50YWtlX2Zvcm1fMi41ZmVlMmI0NWQ1OWM3NS42ODE3OTQ1NyIsInR5cGUiOiJjb250cm9sX2ltYWdlIn0seyJkZXNjcmlwdGlvbiI6IiIsImxhYmVsVGV4dCI6IiIsIm5hbWUiOiJuYW1lX2Zvcl9pbnRha2VfZm9ybTVmZWUyYzJlMjJmZGMyMzk5Mzc5MjAiLCJxaWQiOiI0MSIsInRleHQiOiJuYW1lX2Zvcl9pbnRha2VfZm9ybS41ZmVlMmMyZTIyZmRjMi4zOTkzNzkyMCIsInR5cGUiOiJjb250cm9sX2ltYWdlIn1dKTsKICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKSm90Rm9ybS5wYXltZW50RXh0cmFzT25UaGVGbHkoW251bGwseyJuYW1lIjoiTWFzc2FnZSIsInFpZCI6IjEiLCJ0ZXh0IjoiXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdE1hc3NhZ2UgVGhlcmFweSBTZXJ2aWNlIEFncmVlbWVudCAmIEludGFrZSBGb3JtIiwidHlwZSI6ImNvbnRyb2xfaGVhZCJ9LHsibmFtZSI6InN1Ym1pdDIiLCJxaWQiOiIyIiwidGV4dCI6IlN1Ym1pdCIsInR5cGUiOiJjb250cm9sX2J1dHRvbiJ9LG51bGwsbnVsbCx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudHNOYW1lIiwicWlkIjoiNSIsInRleHQiOiJDbGllbnQncyBOYW1lIiwidHlwZSI6ImNvbnRyb2xfZnVsbG5hbWUifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudHNBZGRyZXNzIiwicWlkIjoiNiIsInRleHQiOiJDbGllbnQncyBBZGRyZXNzIiwidHlwZSI6ImNvbnRyb2xfYWRkcmVzcyJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoiY2xpZW50c0RhdGUiLCJxaWQiOiI3IiwidGV4dCI6IkNsaWVudCdzIERhdGUgT2YgQmlydGggKG9wdGlvbmFsKSIsInR5cGUiOiJjb250cm9sX2JpcnRoZGF0ZSJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoiY2xpZW50c0hvbWUiLCJxaWQiOiI4IiwidGV4dCI6IkNsaWVudCdzIEhvbWUgTnVtYmVyIiwidHlwZSI6ImNvbnRyb2xfcGhvbmUifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudHNDZWxsIiwicWlkIjoiOSIsInRleHQiOiJDbGllbnQncyBDZWxsIE51bWJlciIsInR5cGUiOiJjb250cm9sX3Bob25lIn0seyJuYW1lIjoiY2xpZW50c0VtZXJnZW5jeSIsInFpZCI6IjEwIiwidGV4dCI6IkNsaWVudCdzIEVtZXJnZW5jeSBDb250YWN0IiwidHlwZSI6ImNvbnRyb2xfd2lkZ2V0In0seyJuYW1lIjoicGFnZUJyZWFrIiwicWlkIjoiMTEiLCJ0ZXh0IjoiUGFnZSBCcmVhayIsInR5cGUiOiJjb250cm9sX3BhZ2VicmVhayJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoiYXJlWW91IiwicWlkIjoiMTIiLCJ0ZXh0IjoiQXJlIHlvdSBwcmVzZW50bHkgdGFraW5nIGFueSBtZWRpY2F0aW9uPyIsInR5cGUiOiJjb250cm9sX3JhZGlvIn0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJwbGVhc2VMaXN0IiwicWlkIjoiMTMiLCJzdWJMYWJlbCI6IiIsInRleHQiOiJQbGVhc2UgbGlzdCBhbGwgbWVkaWNhdGlvbnMgeW91IGFyZSBwcmVzZW50bHkgdGFraW5nOiIsInR5cGUiOiJjb250cm9sX3RleHRib3gifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImhhdmVZb3UiLCJxaWQiOiIxNCIsInRleHQiOiJIYXZlIHlvdSBoYWQgYSByZWNlbnQgbWFqb3Igc3VyZ2ljYWwgcHJvY2VkdXJlIG9yIGluanVyeT8iLCJ0eXBlIjoiY29udHJvbF9yYWRpbyJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoicGxlYXNlRXhwbGFpbjE1IiwicWlkIjoiMTUiLCJzdWJMYWJlbCI6IiIsInRleHQiOiJQbGVhc2UgZXhwbGFpbiBhbnkgdHJlYXRtZW50IHlvdSdyZSByZWNlaXZpbmc6IiwidHlwZSI6ImNvbnRyb2xfdGV4dGJveCJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoiYXJlWW91MTYiLCJxaWQiOiIxNiIsInRleHQiOiJBcmUgeW91IGN1cnJlbnRseSBzZWVpbmcgYSBDaGlyb3ByYWN0b3IsIFBoeXNpY2FsIFRoZXJhcGlzdCwgb3IgUGh5c2ljaWFuIGZvciBhbiBvbmdvaW5nIGlzc3VlPyIsInR5cGUiOiJjb250cm9sX3JhZGlvIn0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJhcmVZb3UxNyIsInFpZCI6IjE3IiwidGV4dCI6IkFyZSB5b3UgYWxsZXJnaWMgdG8gYW55IExvdGlvbnMgb3IgT2lscz8iLCJ0eXBlIjoiY29udHJvbF9yYWRpbyJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoicGxlYXNlRXhwbGFpbjE4IiwicWlkIjoiMTgiLCJzdWJMYWJlbCI6IiIsInRleHQiOiJQbGVhc2UgZXhwbGFpbiBhbnkgc3VyZ2ljYWwgcHJvY2VkdXJlcyBvciBpbmp1cmllczoiLCJ0eXBlIjoiY29udHJvbF90ZXh0Ym94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJwbGVhc2VFeHBsYWluIiwicWlkIjoiMTkiLCJzdWJMYWJlbCI6IiIsInRleHQiOiJQbGVhc2UgZXhwbGFpbiBhbnkgYWxsZXJnaWVzOiIsInR5cGUiOiJjb250cm9sX3RleHRib3gifSx7Im5hbWUiOiJpbnB1dDIwIiwicWlkIjoiMjAiLCJ0ZXh0IjoiTm90ZTogSGFuZHMgb2YgYSBHb2RkZXNzIHVzZXMgQm9uIFZpdGFsIExvdGlvbnMsIENyZWFtcyAmYW1wOyBPaWxzLiBUaGVzZSBhcmUgZm9ybXVsYXRlZCBmb3Igc2Vuc2l0aXZlIHNraW4gYW5kIGFyZSB3YXRlciBzb2x1YmxlLiIsInR5cGUiOiJjb250cm9sX3RleHQifSx7Im5hbWUiOiJwYWdlQnJlYWsyMSIsInFpZCI6IjIxIiwidGV4dCI6IlBhZ2UgQnJlYWsiLCJ0eXBlIjoiY29udHJvbF9wYWdlYnJlYWsifSx7Im5hbWUiOiJpbnB1dDIyIiwicWlkIjoiMjIiLCJ0ZXh0IjoiQ2hlY2sgYW55IG9mwqB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgdGhhdCBhcHBseSB0byB5b3UsIHBhc3QgYW5kIHByZXNlbnQuIFBsZWFzZSBhZGQgeW91ciBjb21tZW50cyBhdCB0aGUgZW5kIHRvIGNsYXJpZnkgdGhlIGNvbmRpdGlvbnMgeW91IGNoZWNrZWQuIiwidHlwZSI6ImNvbnRyb2xfdGV4dCJ9LHsiZGVzY3JpcHRpb24iOiIiLCJuYW1lIjoibXVzY3Vsb3NrZWxldGFsIiwicWlkIjoiMjMiLCJ0ZXh0IjoiTXVzY3Vsb3NrZWxldGFsIiwidHlwZSI6ImNvbnRyb2xfY2hlY2tib3gifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNpcmN1bGF0b3J5cmVzcGlyYXRvcnkiLCJxaWQiOiIyNCIsInRleHQiOiJDaXJjdWxhdG9yeVx1MDAyRlJlc3BpcmF0b3J5IiwidHlwZSI6ImNvbnRyb2xfY2hlY2tib3gifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6Im5lcnZvdXNTeXN0ZW0iLCJxaWQiOiIyNSIsInRleHQiOiJOZXJ2b3VzIFN5c3RlbSIsInR5cGUiOiJjb250cm9sX2NoZWNrYm94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJkaWdlc3RpdmVTeXN0ZW0iLCJxaWQiOiIyNiIsInRleHQiOiJEaWdlc3RpdmUgU3lzdGVtIiwidHlwZSI6ImNvbnRyb2xfY2hlY2tib3gifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImRpZ2VzdGl2ZVN5c3RlbTI3IiwicWlkIjoiMjciLCJ0ZXh0IjoiRGlnZXN0aXZlIFN5c3RlbSIsInR5cGUiOiJjb250cm9sX2NoZWNrYm94In0seyJkZXNjcmlwdGlvbiI6IiIsIm5hbWUiOiJvdGhlciIsInFpZCI6IjI4IiwidGV4dCI6Ik90aGVyIiwidHlwZSI6ImNvbnRyb2xfY2hlY2tib3gifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6InBsZWFzZUV4cGxhaW4yOSIsInFpZCI6IjI5Iiwic3ViTGFiZWwiOiIiLCJ0ZXh0IjoiUGxlYXNlIGV4cGxhaW4gYW55IGNvbmRpdGlvbnMgeW91IGNoZWNrZWQ6IiwidHlwZSI6ImNvbnRyb2xfdGV4dGFyZWEifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudFNpZ25hdHVyZTMwIiwicWlkIjoiMzAiLCJzdWJMYWJlbCI6IlVzZSB5b3VyIG1vdXNlIHRvIHNpZ24gKG9yIHlvdXIgZmluZ2VyIGlmIG9uIG1vYmlsZSkiLCJ0ZXh0IjoiQ2xpZW50IFNpZ25hdHVyZSIsInR5cGUiOiJjb250cm9sX3NpZ25hdHVyZSJ9LHsibmFtZSI6ImlucHV0MzEiLCJxaWQiOiIzMSIsInRleHQiOiJJIHVuZGVyc3RhbmQgdGhhdCBhIG1hc3NhZ2UgVGhlcmFwaXN0IGRvZXMgbm90IGRpYWdub3NlIGRpc2Vhc2UsIGlsbG5lc3MsIG9yIHByZXNjcmliZSBhbnkgdHJlYXRtZW50IG9yIGRydWdzLCBub3IgZG8gdGhleSBwcm92aWRlIHNwaW5hbCBtYW5pcHVsYXRpb24uIEkgdW5kZXJzdGFuZCB0aGF0IGRyYXBpbmcgd2lsbCBiZSB1c2VkIGF0IGFsbCB0aW1lcyBhbmQgdGhhdCBicmVhc3QgbWFzc2FnZSB3aWxsIG5vdCBiZSBhZG1pbmlzdGVyZWQgb24gZmVtYWxlIGNsaWVudHMuIEkgdW5kZXJzdGFuZCB0aGF0IGlmIEkgYmVjb21lIHVuY29tZm9ydGFibGUgZm9yIGFueSByZWFzb24gdGhhdCBJIG1heSBhc2sgdGhlIFRoZXJhcGlzdCB0byBlbmQgdGhlIG1hc3NhZ2Ugc2Vzc2lvbiwgYW5kIHRoZXkgd2lsbCBlbmQgdGhlIHNlc3Npb24uIEkgdW5kZXJzdGFuZCB0aGF0IHRoZSBtYXNzYWdlIFRoZXJhcGlzdCBtYXkgZW5kIHRoZSBzZXNzaW9uIGZvciBhbnkgaW5hcHByb3ByaWF0ZSBiZWhhdmlvci4gSSBoYXZlIHN0YXRlZCBhbGwgb2YgdGhlIGNvbmRpdGlvbnMgdGhhdCBJIGFtIGF3YXJlIG9mLCBhbmQgdGhpcyBpbmZvcm1hdGlvbiBpcyB0cnVlIGFuZCBhY2N1cmF0ZS4gSSB3aWxsIGluZm9ybSB0aGUgaGVhbHRoIGNhcmUgcHJvdmlkZXIgb2YgYW55IGNoYW5nZXMgaW4gbXkgc3RhdHVzLiIsInR5cGUiOiJjb250cm9sX3RleHQifSx7Im5hbWUiOiJwYWdlQnJlYWszMiIsInFpZCI6IjMyIiwidGV4dCI6IlBhZ2UgQnJlYWsiLCJ0eXBlIjoiY29udHJvbF9wYWdlYnJlYWsifSx7Im5hbWUiOiJpbnB1dDMzIiwicWlkIjoiMzMiLCJ0ZXh0IjoiQ29uc2VudCBmb3IgVGhlcmFweSBhbmQgV2FpdmVyIG9mIExpYWJpbGl0eSIsInR5cGUiOiJjb250cm9sX3RleHQifSx7Im5hbWUiOiJpbnB1dDM0IiwicWlkIjoiMzQiLCJ0ZXh0IjoiVGhlIHVuZGVyc2lnbmVkICjigJxDbGllbnTigJ0pIGhlcmVieSBmcmVlbHkgY29uc2VudHMgdG8gcmVjZWlwdCBvZiBtYXNzYWdlIHNlcnZpY2VzIGZyb206XG5OZ296aSBPbnVtYSBMaWNlbnNlZCBNYXNzYWdlIFRoZXJhcGlzdFxuQ2xpZW50IGFncmVlcyBhcyBmb2xsb3dzOlxuXG5DbGllbnQgdW5kZXJzdGFuZHMgYW5kIGFncmVlcyB0aGF0IHRoZXkgd2lsbCBwcm92aWRlIHRoZSBUaGVyYXBpc3Qgd2l0aCBjb21wbGV0ZSBhbmQgYWNjdXJhdGUgaGVhbHRoIGluZm9ybWF0aW9uLCBhbmQgYSB3cml0dGVuIHJlZmVycmFsIGZyb20gQ2xpZW504oCZcyBwcmltYXJ5IGhlYWx0aGNhcmUgcHJvdmlkZXIgaWYgQ2xpZW50IGlzIGN1cnJlbnRseSByZWNlaXZpbmcgY2FyZSBvciBoYXMgYSBzcGVjaWZpYyBtZWRpY2FsIGNvbmRpdGlvbiBvciBzeW1wdG9tcyBmb3Igd2hpY2ggQ2xpZW50IHRha2VzIG1lZGljYXRpb24gb3IgcmVjZWl2ZXMgcGVyaW9kaWMgZXZhbHVhdGlvbnMgb3IgdHJlYXRtZW50LiBDbGllbnQgdW5kZXJzdGFuZHMgdGhhdCBtYXNzYWdlIHRoZXJhcHkgaXMgZGVzaWduZWQgdG8gYmUgYW4gYW5jaWxsYXJ5IGhlYWx0aCBhaWQgYW5kIGlzIG5vdCBzdWl0YWJsZSBmb3IgcHJpbWFyeSBtZWRpY2FsIHRyZWF0bWVudCBmb3IgYW55IGNvbmRpdGlvbi4gQ2xpZW50IGFuZCBUaGVyYXBpc3QgaGF2ZSBkaXNjdXNzZWQgdGhlIHBvdGVudGlhbCBiZW5lZml0cyBhbmQgcG9zc2libGUgc2lkZSBlZmZlY3RzIG9mIG1hc3NhZ2UgdGhlcmFweSBhbmQgaGF2ZSBhZ3JlZWQgdXBvbiBhIGNvdXJzZSBvZiBmb2N1c2VkIGF0dGVudGlvbiBhbmQgbWFudWFsbHkgdGhlcmFweSBmb3IgdGhlIHByZWRldGVybWluZWQgZ29hbHMgb2Ygc3RyZXNzIHJlZHVjdGlvbiwgcmVsaWVmIG9mIG11c2N1bGFyIGRpc2NvbWZvcnQsIGFuZFx1MDAyRm9yIHByb21vdGlvbiBvZiBnZW5lcmFsIGhlYWx0aC4gQ2xpZW50IGhhcyBiZWVuIGdpdmVuIGFuIG9wcG9ydHVuaXR5IHRvIGFzayBxdWVzdGlvbnMgb2YgdGhlIFRoZXJhcGlzdCBhbmQgaGFzIHJlY2VpdmVkIGFsbCByZXF1ZXN0ZWQgaW5mb3JtYXRpb24uXG5DbGllbnQgdW5kZXJzdGFuZHMgdGhhdCB0aGUgdW5jbG90aGVkIGJvZHkgd2lsbCBiZSBkcmFwZWQgYXQgYWxsIHRpbWVzIGZvciB3YXJtdGgsIHNlbnNlIG9mIHNlY3VyaXR5LCBhbmQgYXMgYSBtYXJrIG9mIG1hc3NhZ2UgdGhlcmFweSBwcm9mZXNzaW9uYWxpc20uIENsaWVudCBhZ3JlZXMgdG8gaW1tZWRpYXRlbHkgaW5mb3JtIHRoZSBUaGVyYXBpc3Qgb2YgYW55IHVudXN1YWwgc2Vuc2F0aW9uIG9yIGRpc2NvbWZvcnQgc28gdGhhdCB0aGUgYXBwbGljYXRpb24gb2YgcHJlc3N1cmUgbWF5IGJlIGFkanVzdGVkIHRvIENsaWVudOKAmXMgbGV2ZWwgb2YgY29tZm9ydC4gQ2xpZW50IHVuZGVyc3RhbmRzIHRoYXQgbWFzc2FnZSB0aGVyYXB5IGlzIG5vdCBzZXh1YWwgaW4gYW55IG1hbm5lciBhbmQgdGhhdCBhbnkgaWxsaWNpdCBvciBzdWdnZXN0aXZlIHJlbWFya3Mgb3IgYmVoYXZpb3Igb24gdGhlIGNsaWVudOKAmXMgcGFydCwgd2lsbCByZXN1bHQgaW4gYW4gaW1tZWRpYXRlIHRlcm1pbmF0aW9uIG9mIHRoZSB0aGVyYXB5IHNlc3Npb24uIENsaWVudCB1bmRlcnN0YW5kcyB0aGF0IHBheW1lbnQgd2lsbCBiZSBleHBlY3RlZCBpbiBmdWxsOyByZWdhcmRsZXNzIGlmIHRoZSBtYXNzYWdlIGlzIGNvbXBsZXRlZCBvciBub3QuXG5DbGllbnQgaGVyZWJ5IGFzc3VtZXMgZnVsbHkgcmVzcG9uc2liaWxpdHkgZm9yIHJlY2VpcHQgb2YgdGhlIG1hc3NhZ2UgdGhlcmFweSwgYW5kIHJlbGVhc2VzIGFuZCBkaXNjaGFyZ2VzIFRoZXJhcGlzdCBmcm9tIGFueSBhbmQgYWxsIGNsYWltcywgbGlhYmlsaXRpZXMsIGRhbWFnZXMsIGFjdGlvbnMsIG9yIGNhdXNlcyBvZiBhY3Rpb24gYXJpc2luZyBmcm9tIHRoZSB0aGVyYXB5IHJlY2VpdmVkIGhlcmV1bmRlciwgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGFueSBkYW1hZ2VzIGFyaXNpbmcgZnJvbSBhY3RzIG9mIGFjdGl2ZSBvciBwYXNzaXZlIG5lZ2xpZ2VuY2Ugb24gdGhlIHBhcnQgb2YgdGhlIFRoZXJhcGlzdCAsIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBhbGxvd2VkIGJ5IGxhdy5cbkNsaWVudCB1bmRlcnN0YW5kcyB0aGF0IGVhY2ggYXBwb2ludG1lbnQgdGltZSBpcyBkZXNpZ25hdGVkIGZvciBDbGllbnQgYW5kIGFncmVlcyB0byBiZSBwcmVwYXJlZCB0byBzdGFydCBzZXNzaW9uIGF0IGFwcG9pbnRtZW50IHRpbWUgb3IgZm9yZmVpdCB0aGUgdGltZSB0aGF0IHRoZXkgYXJlIG5vdC5cbkNsaWVudCwgaW4gc2lnbmluZyB0aGlzIGNvbnNlbnQgZm9yIFRoZXJhcHkgYW5kIFdhaXZlciBvZiBMaWFiaWxpdHkgKOKAnENvbnNlbnTigJ0pLCB1bmRlcnN0YW5kcyBhbmQgYWdyZWVzIHRoYXQgdGhpcyBDb25zZW50IHdpbGwgYXBwbHkgdG8gYW5kIGdvdmVybiB0aGUgY3VycmVudCBhbmQgYWxsIGZ1dHVyZSB0aGVyYXB5IHNlc3Npb25zIHBlcmZvcm1lZCBieSBUaGVyYXBpc3RcbiIsInR5cGUiOiJjb250cm9sX3RleHQifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudFNpZ25hdHVyZSIsInFpZCI6IjM1Iiwic3ViTGFiZWwiOiJVc2UgeW91ciBtb3VzZSB0byBzaWduIChvciB5b3VyIGZpbmdlciBpZiBvbiBtb2JpbGUpIiwidGV4dCI6IkNsaWVudCBTaWduYXR1cmUiLCJ0eXBlIjoiY29udHJvbF9zaWduYXR1cmUifSx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudE5hbWUiLCJxaWQiOiIzNiIsInRleHQiOiJDbGllbnQgTmFtZSIsInR5cGUiOiJjb250cm9sX2Z1bGxuYW1lIn0sbnVsbCx7ImRlc2NyaXB0aW9uIjoiIiwibmFtZSI6ImNsaWVudHNFbWFpbCIsInFpZCI6IjM4Iiwic3ViTGFiZWwiOiJUbyBzZW5kIGEgY29weSBvZiB0aGUgY29tcGxldGVkIGZvcm0iLCJ0ZXh0IjoiQ2xpZW50J3MgRW1haWwiLCJ0eXBlIjoiY29udHJvbF9lbWFpbCJ9LG51bGwseyJkZXNjcmlwdGlvbiI6IiIsImxhYmVsVGV4dCI6IiIsIm5hbWUiOiJzaWduYXR1cmVfZm9yX2ludGFrZV9mb3JtXzI1ZmVlMmI0NWQ1OWM3NTY4MTc5NDU3IiwicWlkIjoiNDAiLCJ0ZXh0Ijoic2lnbmF0dXJlX2Zvcl9pbnRha2VfZm9ybV8yLjVmZWUyYjQ1ZDU5Yzc1LjY4MTc5NDU3IiwidHlwZSI6ImNvbnRyb2xfaW1hZ2UifSx7ImRlc2NyaXB0aW9uIjoiIiwibGFiZWxUZXh0IjoiIiwibmFtZSI6Im5hbWVfZm9yX2ludGFrZV9mb3JtNWZlZTJjMmUyMmZkYzIzOTkzNzkyMCIsInFpZCI6IjQxIiwidGV4dCI6Im5hbWVfZm9yX2ludGFrZV9mb3JtLjVmZWUyYzJlMjJmZGMyLjM5OTM3OTIwIiwidHlwZSI6ImNvbnRyb2xfaW1hZ2UifV0pO30sIDIwKTsgCjwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5Pgo8Zm9ybSBjbGFzcz0iam90Zm9ybS1mb3JtIiBhY3Rpb249Imh0dHBzOi8vc3VibWl0LmpvdGZvcm0uY29tL3N1Ym1pdC8yMDM2NTQ2NDMzOTIwNTQvIiBtZXRob2Q9InBvc3QiIG5hbWU9ImZvcm1fMjAzNjU0NjQzMzkyMDU0IiBpZD0iMjAzNjU0NjQzMzkyMDU0IiBhY2NlcHQtY2hhcnNldD0idXRmLTgiIGF1dG9jb21wbGV0ZT0ib24iPgogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImZvcm1JRCIgdmFsdWU9IjIwMzY1NDY0MzM5MjA1NCIgLz4KICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iSldUQ29udGFpbmVyIiB2YWx1ZT0iIiAvPgogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJjYXJkaW5hbE9yZGVyTnVtYmVyIiB2YWx1ZT0iIiAvPgogIDxkaXYgcm9sZT0ibWFpbiIgY2xhc3M9ImZvcm0tYWxsIj4KICAgIDxkaXYgY2xhc3M9ImZvcm1Mb2dvV3JhcHBlciBDZW50ZXIiPgogICAgICA8aW1nIGxvYWRpbmc9ImxhenkiIGNsYXNzPSJmb3JtTG9nb0ltZyIgc3JjPSJodHRwczovL3d3dy5qb3Rmb3JtLmNvbS91cGxvYWRzL091clRpbWVGb3JUZWNoL2Zvcm1fZmlsZXMvWWVsbG93JTIwbG9nbyUyMGNvcHkuNWZlZGZhMDAxNGU0YjAuNzgwNzQ5OTMucG5nIiBoZWlnaHQ9IjE0MCIgd2lkdGg9IjM5MyI+CiAgICA8L2Rpdj4KICAgIDxzdHlsZT4KICAgICAgLmZvcm1Mb2dvV3JhcHBlciB7IGRpc3BsYXk6aW5saW5lLWJsb2NrOyBwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAxMDAlO30gLmZvcm0tYWxsOmJlZm9yZSB7IGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDt9IC5mb3JtTG9nb1dyYXBwZXIuQ2VudGVyIHsgdG9wOiAtMTUwcHg7IHRleHQtYWxpZ246IGNlbnRlcjt9CiAgICA8L3N0eWxlPgogICAgPHVsIGNsYXNzPSJmb3JtLXNlY3Rpb24gcGFnZS1zZWN0aW9uIj4KICAgICAgPGxpIGlkPSJjaWRfMSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS10eXBlPSJjb250cm9sX2hlYWQiPgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0taGVhZGVyLWdyb3VwICBoZWFkZXItbGFyZ2UiPgogICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXRleHQgaHR0YWMgaHR2YW0iPgogICAgICAgICAgICA8aDEgaWQ9ImhlYWRlcl8xIiBjbGFzcz0iZm9ybS1oZWFkZXIiIGRhdGEtY29tcG9uZW50PSJoZWFkZXIiPgogICAgICAgICAgICAgIE1hc3NhZ2UgVGhlcmFweSBTZXJ2aWNlIEFncmVlbWVudCAmYW1wOyBJbnRha2UgRm9ybQogICAgICAgICAgICA8L2gxPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGpmLXJlcXVpcmVkIiBkYXRhLXR5cGU9ImNvbnRyb2xfZnVsbG5hbWUiIGlkPSJpZF81Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AgZm9ybS1sYWJlbC1hdXRvIiBpZD0ibGFiZWxfNSIgZm9yPSJmaXJzdF81Ij4KICAgICAgICAgIENsaWVudCdzIE5hbWUKICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzUiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUgamYtcmVxdWlyZWQiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgZGF0YS13cmFwcGVyLXJlYWN0PSJ0cnVlIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tc3ViLWxhYmVsLWNvbnRhaW5lciIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcCIgZGF0YS1pbnB1dC10eXBlPSJmaXJzdCI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmaXJzdF81IiBuYW1lPSJxNV9jbGllbnRzTmFtZVtmaXJzdF0iIGNsYXNzPSJmb3JtLXRleHRib3ggdmFsaWRhdGVbcmVxdWlyZWRdIiBkYXRhLWRlZmF1bHR2YWx1ZT0iIiBhdXRvQ29tcGxldGU9InNlY3Rpb24taW5wdXRfNSBnaXZlbi1uYW1lIiBzaXplPSIxMCIgdmFsdWU9IiIgZGF0YS1jb21wb25lbnQ9ImZpcnN0IiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzUgc3VibGFiZWxfNV9maXJzdCIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tc3ViLWxhYmVsIiBmb3I9ImZpcnN0XzUiIGlkPSJzdWJsYWJlbF81X2ZpcnN0IiBzdHlsZT0ibWluLWhlaWdodDoxM3B4IiBhcmlhLWhpZGRlbj0iZmFsc2UiPiBGaXJzdCA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbC1jb250YWluZXIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3AiIGRhdGEtaW5wdXQtdHlwZT0ibGFzdCI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJsYXN0XzUiIG5hbWU9InE1X2NsaWVudHNOYW1lW2xhc3RdIiBjbGFzcz0iZm9ybS10ZXh0Ym94IHZhbGlkYXRlW3JlcXVpcmVkXSIgZGF0YS1kZWZhdWx0dmFsdWU9IiIgYXV0b0NvbXBsZXRlPSJzZWN0aW9uLWlucHV0XzUgZmFtaWx5LW5hbWUiIHNpemU9IjE1IiB2YWx1ZT0iIiBkYXRhLWNvbXBvbmVudD0ibGFzdCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF81IHN1YmxhYmVsXzVfbGFzdCIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tc3ViLWxhYmVsIiBmb3I9Imxhc3RfNSIgaWQ9InN1YmxhYmVsXzVfbGFzdCIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gTGFzdCA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgamYtcmVxdWlyZWQiIGRhdGEtdHlwZT0iY29udHJvbF9lbWFpbCIgaWQ9ImlkXzM4Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AgZm9ybS1sYWJlbC1hdXRvIiBpZD0ibGFiZWxfMzgiIGZvcj0iaW5wdXRfMzgiPgogICAgICAgICAgQ2xpZW50J3MgRW1haWwKICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzM4IiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIGpmLXJlcXVpcmVkIiBkYXRhLWxheW91dD0iaGFsZiI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBpZD0iaW5wdXRfMzgiIG5hbWU9InEzOF9jbGllbnRzRW1haWwiIGNsYXNzPSJmb3JtLXRleHRib3ggdmFsaWRhdGVbcmVxdWlyZWQsIEVtYWlsXSIgZGF0YS1kZWZhdWx0dmFsdWU9IiIgc3R5bGU9IndpZHRoOjMxMHB4IiBzaXplPSIzMTAiIHZhbHVlPSIiIGRhdGEtY29tcG9uZW50PSJlbWFpbCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8zOCBzdWJsYWJlbF9pbnB1dF8zOCIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbCIgZm9yPSJpbnB1dF8zOCIgaWQ9InN1YmxhYmVsX2lucHV0XzM4IiBzdHlsZT0ibWluLWhlaWdodDoxM3B4IiBhcmlhLWhpZGRlbj0iZmFsc2UiPiBUbyBzZW5kIGEgY29weSBvZiB0aGUgY29tcGxldGVkIGZvcm0gPC9sYWJlbD4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgamYtcmVxdWlyZWQiIGRhdGEtdHlwZT0iY29udHJvbF9hZGRyZXNzIiBpZD0iaWRfNiI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzYiIGZvcj0iaW5wdXRfNl9hZGRyX2xpbmUxIj4KICAgICAgICAgIENsaWVudCdzIEFkZHJlc3MKICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzYiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUgamYtcmVxdWlyZWQiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgc3VtbWFyeT0iIiBjbGFzcz0iZm9ybS1hZGRyZXNzLXRhYmxlIGpzVGVzdC1hZGRyZXNzRmllbGQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWFkZHJlc3MtbGluZS13cmFwcGVyIGpzVGVzdC1hZGRyZXNzLWxpbmUtd3JhcHBlckZpZWxkIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1hZGRyZXNzLWxpbmUgZm9ybS1hZGRyZXNzLXN0cmVldC1saW5lIGpzVGVzdC1hZGRyZXNzLWxpbmVGaWVsZCI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIj4KICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJpbnB1dF82X2FkZHJfbGluZTEiIG5hbWU9InE2X2NsaWVudHNBZGRyZXNzW2FkZHJfbGluZTFdIiBjbGFzcz0iZm9ybS10ZXh0Ym94IHZhbGlkYXRlW3JlcXVpcmVkXSBmb3JtLWFkZHJlc3MtbGluZSIgZGF0YS1kZWZhdWx0dmFsdWU9IiIgYXV0b0NvbXBsZXRlPSJzZWN0aW9uLWlucHV0XzYgYWRkcmVzcy1saW5lMSIgdmFsdWU9IiIgZGF0YS1jb21wb25lbnQ9ImFkZHJlc3NfbGluZV8xIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzYgc3VibGFiZWxfNl9hZGRyX2xpbmUxIiByZXF1aXJlZD0iIiAvPgogICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tc3ViLWxhYmVsIiBmb3I9ImlucHV0XzZfYWRkcl9saW5lMSIgaWQ9InN1YmxhYmVsXzZfYWRkcl9saW5lMSIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gU3RyZWV0IEFkZHJlc3MgPC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWFkZHJlc3MtbGluZS13cmFwcGVyIGpzVGVzdC1hZGRyZXNzLWxpbmUtd3JhcHBlckZpZWxkIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1hZGRyZXNzLWxpbmUgZm9ybS1hZGRyZXNzLXN0cmVldC1saW5lIGpzVGVzdC1hZGRyZXNzLWxpbmVGaWVsZCI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIj4KICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJpbnB1dF82X2FkZHJfbGluZTIiIG5hbWU9InE2X2NsaWVudHNBZGRyZXNzW2FkZHJfbGluZTJdIiBjbGFzcz0iZm9ybS10ZXh0Ym94IGZvcm0tYWRkcmVzcy1saW5lIiBkYXRhLWRlZmF1bHR2YWx1ZT0iIiBhdXRvQ29tcGxldGU9InNlY3Rpb24taW5wdXRfNiBhZGRyZXNzLWxpbmUyIiB2YWx1ZT0iIiBkYXRhLWNvbXBvbmVudD0iYWRkcmVzc19saW5lXzIiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfNiBzdWJsYWJlbF82X2FkZHJfbGluZTIiIC8+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwiIGZvcj0iaW5wdXRfNl9hZGRyX2xpbmUyIiBpZD0ic3VibGFiZWxfNl9hZGRyX2xpbmUyIiBzdHlsZT0ibWluLWhlaWdodDoxM3B4IiBhcmlhLWhpZGRlbj0iZmFsc2UiPiBBcHQvU3VpdGUgPC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWFkZHJlc3MtbGluZS13cmFwcGVyIGpzVGVzdC1hZGRyZXNzLWxpbmUtd3JhcHBlckZpZWxkIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1hZGRyZXNzLWxpbmUgZm9ybS1hZGRyZXNzLWNpdHktbGluZSBqc1Rlc3QtYWRkcmVzcy1saW5lRmllbGQgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbC1jb250YWluZXIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3AiPgogICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImlucHV0XzZfY2l0eSIgbmFtZT0icTZfY2xpZW50c0FkZHJlc3NbY2l0eV0iIGNsYXNzPSJmb3JtLXRleHRib3ggdmFsaWRhdGVbcmVxdWlyZWRdIGZvcm0tYWRkcmVzcy1jaXR5IiBkYXRhLWRlZmF1bHR2YWx1ZT0iIiBhdXRvQ29tcGxldGU9InNlY3Rpb24taW5wdXRfNiBhZGRyZXNzLWxldmVsMiIgdmFsdWU9IiIgZGF0YS1jb21wb25lbnQ9ImNpdHkiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfNiBzdWJsYWJlbF82X2NpdHkiIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwiIGZvcj0iaW5wdXRfNl9jaXR5IiBpZD0ic3VibGFiZWxfNl9jaXR5IiBzdHlsZT0ibWluLWhlaWdodDoxM3B4IiBhcmlhLWhpZGRlbj0iZmFsc2UiPiBDaXR5IDwvbGFiZWw+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWFkZHJlc3MtbGluZSBmb3JtLWFkZHJlc3Mtc3RhdGUtbGluZSBqc1Rlc3QtYWRkcmVzcy1saW5lRmllbGQgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbC1jb250YWluZXIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3AiPgogICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPSJmb3JtLWRyb3Bkb3duIHZhbGlkYXRlW3JlcXVpcmVkXSBmb3JtLWFkZHJlc3Mtc3RhdGUiIG5hbWU9InE2X2NsaWVudHNBZGRyZXNzW3N0YXRlXSIgaWQ9ImlucHV0XzZfc3RhdGUiIGRhdGEtY29tcG9uZW50PSJzdGF0ZSIgcmVxdWlyZWQ9IiIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF82IHN1YmxhYmVsXzZfc3RhdGUiIGF1dG9Db21wbGV0ZT0ic2VjdGlvbi1pbnB1dF82IGFkZHJlc3MtbGV2ZWwxIj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHNlbGVjdGVkPSIiIHZhbHVlPSIiPiBQbGVhc2UgU2VsZWN0IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkFsYWJhbWEiPiBBbGFiYW1hIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkFsYXNrYSI+IEFsYXNrYSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJBcml6b25hIj4gQXJpem9uYSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJBcmthbnNhcyI+IEFya2Fuc2FzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkNhbGlmb3JuaWEiPiBDYWxpZm9ybmlhIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkNvbG9yYWRvIj4gQ29sb3JhZG8gPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ29ubmVjdGljdXQiPiBDb25uZWN0aWN1dCA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJEZWxhd2FyZSI+IERlbGF3YXJlIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkRpc3RyaWN0IG9mIENvbHVtYmlhIj4gRGlzdHJpY3Qgb2YgQ29sdW1iaWEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iRmxvcmlkYSI+IEZsb3JpZGEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iR2VvcmdpYSI+IEdlb3JnaWEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iSGF3YWlpIj4gSGF3YWlpIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IklkYWhvIj4gSWRhaG8gPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iSWxsaW5vaXMiPiBJbGxpbm9pcyA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJJbmRpYW5hIj4gSW5kaWFuYSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJJb3dhIj4gSW93YSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJLYW5zYXMiPiBLYW5zYXMgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iS2VudHVja3kiPiBLZW50dWNreSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJMb3Vpc2lhbmEiPiBMb3Vpc2lhbmEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTWFpbmUiPiBNYWluZSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJNYXJ5bGFuZCI+IE1hcnlsYW5kIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik1hc3NhY2h1c2V0dHMiPiBNYXNzYWNodXNldHRzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik1pY2hpZ2FuIj4gTWljaGlnYW4gPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTWlubmVzb3RhIj4gTWlubmVzb3RhIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik1pc3Npc3NpcHBpIj4gTWlzc2lzc2lwcGkgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTWlzc291cmkiPiBNaXNzb3VyaSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJNb250YW5hIj4gTW9udGFuYSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZWJyYXNrYSI+IE5lYnJhc2thIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik5ldmFkYSI+IE5ldmFkYSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXcgSGFtcHNoaXJlIj4gTmV3IEhhbXBzaGlyZSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXcgSmVyc2V5Ij4gTmV3IEplcnNleSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXcgTWV4aWNvIj4gTmV3IE1leGljbyA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJOZXcgWW9yayI+IE5ldyBZb3JrIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik5vcnRoIENhcm9saW5hIj4gTm9ydGggQ2Fyb2xpbmEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTm9ydGggRGFrb3RhIj4gTm9ydGggRGFrb3RhIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik9oaW8iPiBPaGlvIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik9rbGFob21hIj4gT2tsYWhvbWEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iT3JlZ29uIj4gT3JlZ29uIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlBlbm5zeWx2YW5pYSI+IFBlbm5zeWx2YW5pYSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJQdWVydG8gUmljbyI+IFB1ZXJ0byBSaWNvIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlJob2RlIElzbGFuZCI+IFJob2RlIElzbGFuZCA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJTb3V0aCBDYXJvbGluYSI+IFNvdXRoIENhcm9saW5hIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlNvdXRoIERha290YSI+IFNvdXRoIERha290YSA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJUZW5uZXNzZWUiPiBUZW5uZXNzZWUgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iVGV4YXMiPiBUZXhhcyA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJVdGFoIj4gVXRhaCA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJWZXJtb250Ij4gVmVybW9udCA8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJWaXJnaW4gSXNsYW5kcyI+IFZpcmdpbiBJc2xhbmRzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlZpcmdpbmlhIj4gVmlyZ2luaWEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV2FzaGluZ3RvbiI+IFdhc2hpbmd0b24gPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV2VzdCBWaXJnaW5pYSI+IFdlc3QgVmlyZ2luaWEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV2lzY29uc2luIj4gV2lzY29uc2luIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ild5b21pbmciPiBXeW9taW5nIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbCIgZm9yPSJpbnB1dF82X3N0YXRlIiBpZD0ic3VibGFiZWxfNl9zdGF0ZSIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gU3RhdGUgPC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWFkZHJlc3MtbGluZS13cmFwcGVyIGpzVGVzdC1hZGRyZXNzLWxpbmUtd3JhcHBlckZpZWxkIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1hZGRyZXNzLWxpbmUgZm9ybS1hZGRyZXNzLXppcC1saW5lIGpzVGVzdC1hZGRyZXNzLWxpbmVGaWVsZCAiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tc3ViLWxhYmVsLWNvbnRhaW5lciIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcCI+CiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iaW5wdXRfNl9wb3N0YWwiIG5hbWU9InE2X2NsaWVudHNBZGRyZXNzW3Bvc3RhbF0iIGNsYXNzPSJmb3JtLXRleHRib3ggdmFsaWRhdGVbcmVxdWlyZWRdIGZvcm0tYWRkcmVzcy1wb3N0YWwiIGRhdGEtZGVmYXVsdHZhbHVlPSIiIGF1dG9Db21wbGV0ZT0ic2VjdGlvbi1pbnB1dF82IHBvc3RhbC1jb2RlIiB2YWx1ZT0iIiBkYXRhLWNvbXBvbmVudD0iemlwIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzYgc3VibGFiZWxfNl9wb3N0YWwiIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwiIGZvcj0iaW5wdXRfNl9wb3N0YWwiIGlkPSJzdWJsYWJlbF82X3Bvc3RhbCIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gWmlwIENvZGUgPC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIiBkYXRhLXR5cGU9ImNvbnRyb2xfYmlydGhkYXRlIiBpZD0iaWRfNyI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzciIGZvcj0iaW5wdXRfNyI+IENsaWVudCdzIERhdGUgT2YgQmlydGggKG9wdGlvbmFsKSA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF83IiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGRhdGEtd3JhcHBlci1yZWFjdD0idHJ1ZSI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbC1jb250YWluZXIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3AiPgogICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0icTdfY2xpZW50c0RhdGVbbW9udGhdIiBpZD0iaW5wdXRfN19tb250aCIgY2xhc3M9ImZvcm0tZHJvcGRvd24iIGRhdGEtY29tcG9uZW50PSJiaXJ0aGRhdGUtbW9udGgiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfNyBzdWJsYWJlbF83X21vbnRoIj4KICAgICAgICAgICAgICAgIDxvcHRpb24+ICA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkphbnVhcnkiPiBKYW51YXJ5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iRmVicnVhcnkiPiBGZWJydWFyeSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik1hcmNoIj4gTWFyY2ggPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJBcHJpbCI+IEFwcmlsIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTWF5Ij4gTWF5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iSnVuZSI+IEp1bmUgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJKdWx5Ij4gSnVseSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkF1Z3VzdCI+IEF1Z3VzdCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlNlcHRlbWJlciI+IFNlcHRlbWJlciA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik9jdG9iZXIiPiBPY3RvYmVyIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTm92ZW1iZXIiPiBOb3ZlbWJlciA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkRlY2VtYmVyIj4gRGVjZW1iZXIgPC9vcHRpb24+CiAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbCIgZm9yPSJpbnB1dF83X21vbnRoIiBpZD0ic3VibGFiZWxfN19tb250aCIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gTW9udGggPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIj4KICAgICAgICAgICAgICA8c2VsZWN0IG5hbWU9InE3X2NsaWVudHNEYXRlW2RheV0iIGlkPSJpbnB1dF83X2RheSIgY2xhc3M9ImZvcm0tZHJvcGRvd24iIGRhdGEtY29tcG9uZW50PSJiaXJ0aGRhdGUtZGF5IiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzcgc3VibGFiZWxfN19kYXkiPgogICAgICAgICAgICAgICAgPG9wdGlvbj4gIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMSI+IDEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyIj4gMiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMiPiAzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNCI+IDQgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1Ij4gNSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjYiPiA2IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNyI+IDcgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI4Ij4gOCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjkiPiA5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTAiPiAxMCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjExIj4gMTEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxMiI+IDEyIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTMiPiAxMyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE0Ij4gMTQgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxNSI+IDE1IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTYiPiAxNiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE3Ij4gMTcgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOCI+IDE4IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkiPiAxOSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwIj4gMjAgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMSI+IDIxIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjIiPiAyMiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIzIj4gMjMgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyNCI+IDI0IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjUiPiAyNSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjI2Ij4gMjYgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyNyI+IDI3IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjgiPiAyOCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjI5Ij4gMjkgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIzMCI+IDMwIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMzEiPiAzMSA8L29wdGlvbj4KICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tc3ViLWxhYmVsIiBmb3I9ImlucHV0XzdfZGF5IiBpZD0ic3VibGFiZWxfN19kYXkiIHN0eWxlPSJtaW4taGVpZ2h0OjEzcHgiIGFyaWEtaGlkZGVuPSJmYWxzZSI+IERheSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbC1jb250YWluZXIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3AiPgogICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0icTdfY2xpZW50c0RhdGVbeWVhcl0iIGlkPSJpbnB1dF83X3llYXIiIGNsYXNzPSJmb3JtLWRyb3Bkb3duIiBkYXRhLWNvbXBvbmVudD0iYmlydGhkYXRlLXllYXIiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfNyBzdWJsYWJlbF83X3llYXIiPgogICAgICAgICAgICAgICAgPG9wdGlvbj4gIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAyMSI+IDIwMjEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDIwIj4gMjAyMCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMTkiPiAyMDE5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAxOCI+IDIwMTggPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDE3Ij4gMjAxNyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMTYiPiAyMDE2IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAxNSI+IDIwMTUgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDE0Ij4gMjAxNCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMTMiPiAyMDEzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAxMiI+IDIwMTIgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDExIj4gMjAxMSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMTAiPiAyMDEwIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAwOSI+IDIwMDkgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDA4Ij4gMjAwOCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMDciPiAyMDA3IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAwNiI+IDIwMDYgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDA1Ij4gMjAwNSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMDQiPiAyMDA0IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAwMyI+IDIwMDMgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyMDAyIj4gMjAwMiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwMDEiPiAyMDAxIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAwMCI+IDIwMDAgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTk5Ij4gMTk5OSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5OTgiPiAxOTk4IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk5NyI+IDE5OTcgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTk2Ij4gMTk5NiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5OTUiPiAxOTk1IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk5NCI+IDE5OTQgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTkzIj4gMTk5MyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5OTIiPiAxOTkyIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk5MSI+IDE5OTEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTkwIj4gMTk5MCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5ODkiPiAxOTg5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk4OCI+IDE5ODggPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTg3Ij4gMTk4NyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5ODYiPiAxOTg2IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk4NSI+IDE5ODUgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTg0Ij4gMTk4NCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5ODMiPiAxOTgzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk4MiI+IDE5ODIgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTgxIj4gMTk4MSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5ODAiPiAxOTgwIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk3OSI+IDE5NzkgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTc4Ij4gMTk3OCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NzciPiAxOTc3IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk3NiI+IDE5NzYgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTc1Ij4gMTk3NSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NzQiPiAxOTc0IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk3MyI+IDE5NzMgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTcyIj4gMTk3MiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NzEiPiAxOTcxIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk3MCI+IDE5NzAgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTY5Ij4gMTk2OSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NjgiPiAxOTY4IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk2NyI+IDE5NjcgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTY2Ij4gMTk2NiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NjUiPiAxOTY1IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk2NCI+IDE5NjQgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTYzIj4gMTk2MyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NjIiPiAxOTYyIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk2MSI+IDE5NjEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTYwIj4gMTk2MCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NTkiPiAxOTU5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk1OCI+IDE5NTggPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTU3Ij4gMTk1NyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NTYiPiAxOTU2IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk1NSI+IDE5NTUgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTU0Ij4gMTk1NCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NTMiPiAxOTUzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk1MiI+IDE5NTIgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTUxIj4gMTk1MSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NTAiPiAxOTUwIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk0OSI+IDE5NDkgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTQ4Ij4gMTk0OCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NDciPiAxOTQ3IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk0NiI+IDE5NDYgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTQ1Ij4gMTk0NSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NDQiPiAxOTQ0IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk0MyI+IDE5NDMgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTQyIj4gMTk0MiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5NDEiPiAxOTQxIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTk0MCI+IDE5NDAgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTM5Ij4gMTkzOSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MzgiPiAxOTM4IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkzNyI+IDE5MzcgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTM2Ij4gMTkzNiA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MzUiPiAxOTM1IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkzNCI+IDE5MzQgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTMzIj4gMTkzMyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MzIiPiAxOTMyIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkzMSI+IDE5MzEgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTMwIj4gMTkzMCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MjkiPiAxOTI5IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkyOCI+IDE5MjggPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTI3Ij4gMTkyNyA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MjYiPiAxOTI2IDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkyNSI+IDE5MjUgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTI0Ij4gMTkyNCA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MjMiPiAxOTIzIDwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTkyMiI+IDE5MjIgPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxOTIxIj4gMTkyMSA8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE5MjAiPiAxOTIwIDwvb3B0aW9uPgogICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwiIGZvcj0iaW5wdXRfN195ZWFyIiBpZD0ic3VibGFiZWxfN195ZWFyIiBzdHlsZT0ibWluLWhlaWdodDoxM3B4IiBhcmlhLWhpZGRlbj0iZmFsc2UiPiBZZWFyIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBmb3JtLWxpbmUtY29sdW1uIGZvcm0tY29sLTEiIGRhdGEtdHlwZT0iY29udHJvbF9waG9uZSIgaWQ9ImlkXzgiPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCIgaWQ9ImxhYmVsXzgiIGZvcj0iaW5wdXRfOF9mdWxsIj4gQ2xpZW50J3MgSG9tZSBOdW1iZXIgPC9sYWJlbD4KICAgICAgICA8ZGl2IGlkPSJjaWRfOCIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS1sYXlvdXQ9ImhhbGYiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tc3ViLWxhYmVsLWNvbnRhaW5lciIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZWwiIGlkPSJpbnB1dF84X2Z1bGwiIG5hbWU9InE4X2NsaWVudHNIb21lW2Z1bGxdIiBkYXRhLXR5cGU9Im1hc2stbnVtYmVyIiBjbGFzcz0ibWFzay1waG9uZS1udW1iZXIgZm9ybS10ZXh0Ym94IHZhbGlkYXRlW0ZpbGwgTWFza10iIGRhdGEtZGVmYXVsdHZhbHVlPSIiIGF1dG9Db21wbGV0ZT0ic2VjdGlvbi1pbnB1dF84IHRlbC1uYXRpb25hbCIgc3R5bGU9IndpZHRoOjMxMHB4IiBkYXRhLW1hc2tlZD0idHJ1ZSIgdmFsdWU9IiIgcGxhY2Vob2xkZXI9IigwMDApIDAwMC0wMDAwIiBkYXRhLWNvbXBvbmVudD0icGhvbmUiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfOCBzdWJsYWJlbF84X21hc2tlZCIgLz4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbCIgZm9yPSJpbnB1dF84X2Z1bGwiIGlkPSJzdWJsYWJlbF84X21hc2tlZCIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gT3B0aW9uYWwgPC9sYWJlbD4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgZm9ybS1saW5lLWNvbHVtbiBmb3JtLWNvbC0yIGpmLXJlcXVpcmVkIiBkYXRhLXR5cGU9ImNvbnRyb2xfcGhvbmUiIGlkPSJpZF85Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AiIGlkPSJsYWJlbF85IiBmb3I9ImlucHV0XzlfZnVsbCI+CiAgICAgICAgICBDbGllbnQncyBDZWxsIE51bWJlcgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tcmVxdWlyZWQiPgogICAgICAgICAgICAqCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8ZGl2IGlkPSJjaWRfOSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImhhbGYiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tc3ViLWxhYmVsLWNvbnRhaW5lciIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZWwiIGlkPSJpbnB1dF85X2Z1bGwiIG5hbWU9InE5X2NsaWVudHNDZWxsW2Z1bGxdIiBkYXRhLXR5cGU9Im1hc2stbnVtYmVyIiBjbGFzcz0ibWFzay1waG9uZS1udW1iZXIgZm9ybS10ZXh0Ym94IHZhbGlkYXRlW3JlcXVpcmVkLCBGaWxsIE1hc2tdIiBkYXRhLWRlZmF1bHR2YWx1ZT0iIiBhdXRvQ29tcGxldGU9InNlY3Rpb24taW5wdXRfOSB0ZWwtbmF0aW9uYWwiIHN0eWxlPSJ3aWR0aDozMTBweCIgZGF0YS1tYXNrZWQ9InRydWUiIHZhbHVlPSIiIHBsYWNlaG9sZGVyPSIoMDAwKSAwMDAtMDAwMCIgZGF0YS1jb21wb25lbnQ9InBob25lIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzkiIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwgaXMtZW1wdHkiIGZvcj0iaW5wdXRfOV9mdWxsIiBpZD0ic3VibGFiZWxfOV9tYXNrZWQiIHN0eWxlPSJtaW4taGVpZ2h0OjEzcHgiIGFyaWEtaGlkZGVuPSJmYWxzZSI+ICA8L2xhYmVsPgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCIgZGF0YS10eXBlPSJjb250cm9sX3dpZGdldCIgaWQ9ImlkXzEwIj4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AgZm9ybS1sYWJlbC1hdXRvIiBpZD0ibGFiZWxfMTAiIGZvcj0iaW5wdXRfMTAiPgogICAgICAgICAgQ2xpZW50J3MgRW1lcmdlbmN5IENvbnRhY3QKICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzEwIiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIGpmLXJlcXVpcmVkIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0LW5hbWU9Ik11bHRpcGxlIFRleHQgRmllbGRzIiBzdHlsZT0id2lkdGg6MTAwJTt0ZXh0LWFsaWduOkxlZnQ7b3ZlcmZsb3cteDphdXRvIiBkYXRhLWNvbXBvbmVudD0id2lkZ2V0LWZpZWxkIj4KICAgICAgICAgICAgPGlmcmFtZSBkYXRhLWNsaWVudC1pZD0iNTM4ZGRkYWE5NzZiZjYxMTI5MDAwMDA0IiB0aXRsZT0iTXVsdGlwbGUgVGV4dCBGaWVsZHMiIGZyYW1lQm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIiBhbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIgYWxsb3c9Imdlb2xvY2F0aW9uOyBtaWNyb3Bob25lOyBjYW1lcmE7IGF1dG9wbGF5OyBlbmNyeXB0ZWQtbWVkaWE7IGZ1bGxzY3JlZW4iIGRhdGEtdHlwZT0iaWZyYW1lIiBjbGFzcz0iY3VzdG9tLWZpZWxkLWZyYW1lIiBpZD0iY3VzdG9tRmllbGRGcmFtZV8xMCIgc3JjPSIiIHN0eWxlPSJtYXgtd2lkdGg6NjQ4cHg7Ym9yZGVyOm5vbmU7d2lkdGg6MTAwJTtoZWlnaHQ6MjcwcHgiIGRhdGEtd2lkdGg9IjY0OCIgZGF0YS1oZWlnaHQ9IjI3MCI+CiAgICAgICAgICAgIDwvaWZyYW1lPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3aWRnZXQtaW5wdXRzLXdyYXBwZXIiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJpbnB1dF8xMCIgY2xhc3M9ImZvcm0taGlkZGVuIGZvcm0td2lkZ2V0IHdpZGdldC1yZXF1aXJlZCAiIG5hbWU9InExMF9jbGllbnRzRW1lcmdlbmN5IiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJ3aWRnZXRfc2V0dGluZ3NfMTAiIGNsYXNzPSJmb3JtLWhpZGRlbiBmb3JtLXdpZGdldC1zZXR0aW5ncyIgdmFsdWU9IiU1QiU3QiUyMm5hbWUlMjIlM0ElMjJmaWVsZHMlMjIlMkMlMjJ2YWx1ZSUyMiUzQSUyMk5hbWUlNUNuUGhvbmUlNUNuUmVsYXRpb25zaGlwJTIyJTdEJTVEIiBkYXRhLXZlcnNpb249IjIiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKQp7CiAgdmFyIF9jRmllbGRGcmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjdXN0b21GaWVsZEZyYW1lXzEwIik7CiAgaWYgKF9jRmllbGRGcmFtZSkKICB7CiAgICBfY0ZpZWxkRnJhbWUub25sb2FkID0gZnVuY3Rpb24oKQogICAgewogICAgICBpZiAodHlwZW9mIHdpZGdldEZyYW1lTG9hZGVkICE9PSAndW5kZWZpbmVkJykKICAgICAgewogICAgICAgIHdpZGdldEZyYW1lTG9hZGVkKDEwLCB7CiAgICAgICAgICAiZm9ybUlEIjogMjAzNjU0NjQzMzkyMDU0CiAgICAgICAgfSkKICAgICAgfQogICAgfTsKICAgIF9jRmllbGRGcmFtZS5zcmMgPSAiLy93aWRnZXRzLmpvdGZvcm0uaW8vbXVsdGlwbGVUZXh0RmllbGRzLz9xaWQ9MTAmcmVmPSIgKyBlbmNvZGVVUklDb21wb25lbnQod2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgIi8vIiArIHdpbmRvdy5sb2NhdGlvbi5ob3N0KSArICcnICsgJycgKyAnJmluamVjdENTUz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guaW5kZXhPZigibmR0PTEiKSA+IC0xKTsKICAgIF9jRmllbGRGcmFtZS5hZGRDbGFzc05hbWUoImN1c3RvbS1maWVsZC1mcmFtZS1yZW5kZXJlZCIpOwogIH0KfSwgMCk7CiAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBpZD0iY2lkXzExIiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLXR5cGU9ImNvbnRyb2xfcGFnZWJyZWFrIj4KICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXBhZ2VicmVhayIgZGF0YS1jb21wb25lbnQ9InBhZ2VicmVhayI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXBhZ2VicmVhay1iYWNrLWNvbnRhaW5lciI+CiAgICAgICAgICAgIDxidXR0b24gaWQ9ImZvcm0tcGFnZWJyZWFrLWJhY2tfMTEiIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImZvcm0tcGFnZWJyZWFrLWJhY2sgIGpmLWZvcm0tYnV0dG9ucyIgZGF0YS1jb21wb25lbnQ9InBhZ2VicmVhay1iYWNrIj4KICAgICAgICAgICAgICBCYWNrCiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXBhZ2VicmVhay1uZXh0LWNvbnRhaW5lciI+CiAgICAgICAgICAgIDxidXR0b24gaWQ9ImZvcm0tcGFnZWJyZWFrLW5leHRfMTEiIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImZvcm0tcGFnZWJyZWFrLW5leHQgIGpmLWZvcm0tYnV0dG9ucyIgZGF0YS1jb21wb25lbnQ9InBhZ2VicmVhay1uZXh0Ij4KICAgICAgICAgICAgICBOZXh0CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJjbGVhcjpib3RoIiBjbGFzcz0icGFnZUluZm8gZm9ybS1zdWItbGFiZWwiIGlkPSJwYWdlSW5mb18xMSI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgIDwvdWw+CiAgICA8dWwgY2xhc3M9ImZvcm0tc2VjdGlvbiBwYWdlLXNlY3Rpb24iIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgamYtcmVxdWlyZWQiIGRhdGEtdHlwZT0iY29udHJvbF9yYWRpbyIgaWQ9ImlkXzEyIj4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AgZm9ybS1sYWJlbC1hdXRvIiBpZD0ibGFiZWxfMTIiIGZvcj0iaW5wdXRfMTIiPgogICAgICAgICAgQXJlIHlvdSBwcmVzZW50bHkgdGFraW5nIGFueSBtZWRpY2F0aW9uPwogICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tcmVxdWlyZWQiPgogICAgICAgICAgICAqCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8ZGl2IGlkPSJjaWRfMTIiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUgamYtcmVxdWlyZWQiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tbXVsdGlwbGUtY29sdW1uIiBkYXRhLWNvbHVtbmNvdW50PSIyIiByb2xlPSJncm91cCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8xMiIgZGF0YS1jb21wb25lbnQ9InJhZGlvIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tcmFkaW8taXRlbSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMTIiIGNsYXNzPSJmb3JtLXJhZGlvIHZhbGlkYXRlW3JlcXVpcmVkXSIgaWQ9ImlucHV0XzEyXzAiIG5hbWU9InExMl9hcmVZb3UiIHZhbHVlPSJZZXMiIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8xMl8wIiBmb3I9ImlucHV0XzEyXzAiPiBZZXMgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yYWRpby1pdGVtIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8xMiIgY2xhc3M9ImZvcm0tcmFkaW8gdmFsaWRhdGVbcmVxdWlyZWRdIiBpZD0iaW5wdXRfMTJfMSIgbmFtZT0icTEyX2FyZVlvdSIgdmFsdWU9Ik5vIiByZXF1aXJlZD0iIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMTJfMSIgZm9yPSJpbnB1dF8xMl8xIj4gTm8gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGpmLXJlcXVpcmVkIGZvcm0tZmllbGQtaGlkZGVuIiBzdHlsZT0iZGlzcGxheTpub25lOyIgZGF0YS10eXBlPSJjb250cm9sX3RleHRib3giIGlkPSJpZF8xMyI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzEzIiBmb3I9ImlucHV0XzEzIj4KICAgICAgICAgIFBsZWFzZSBsaXN0IGFsbCBtZWRpY2F0aW9ucyB5b3UgYXJlIHByZXNlbnRseSB0YWtpbmc6CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yZXF1aXJlZCI+CiAgICAgICAgICAgICoKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8xMyIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImhhbGYiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJpbnB1dF8xMyIgbmFtZT0icTEzX3BsZWFzZUxpc3QiIGRhdGEtdHlwZT0iaW5wdXQtdGV4dGJveCIgY2xhc3M9ImZvcm0tdGV4dGJveCB2YWxpZGF0ZVtyZXF1aXJlZF0iIGRhdGEtZGVmYXVsdHZhbHVlPSIiIGF1dG9Db21wbGV0ZT0ic2VjdGlvbi1pbnB1dF8xMyBvbiIgc3R5bGU9IndpZHRoOjMxMHB4IiBzaXplPSIzMTAiIHZhbHVlPSIiIGRhdGEtY29tcG9uZW50PSJ0ZXh0Ym94IiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzEzIiByZXF1aXJlZD0iIiAvPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCIgZGF0YS10eXBlPSJjb250cm9sX3JhZGlvIiBpZD0iaWRfMTQiPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCBmb3JtLWxhYmVsLWF1dG8iIGlkPSJsYWJlbF8xNCIgZm9yPSJpbnB1dF8xNCI+CiAgICAgICAgICBIYXZlIHlvdSBoYWQgYSByZWNlbnQgbWFqb3Igc3VyZ2ljYWwgcHJvY2VkdXJlIG9yIGluanVyeT8KICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzE0IiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIGpmLXJlcXVpcmVkIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLW11bHRpcGxlLWNvbHVtbiIgZGF0YS1jb2x1bW5jb3VudD0iMiIgcm9sZT0iZ3JvdXAiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfMTQiIGRhdGEtY29tcG9uZW50PSJyYWRpbyI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJhZGlvLWl0ZW0iPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzE0IiBjbGFzcz0iZm9ybS1yYWRpbyB2YWxpZGF0ZVtyZXF1aXJlZF0iIGlkPSJpbnB1dF8xNF8wIiBuYW1lPSJxMTRfaGF2ZVlvdSIgdmFsdWU9IlllcyIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzE0XzAiIGZvcj0iaW5wdXRfMTRfMCI+IFllcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJhZGlvLWl0ZW0iPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzE0IiBjbGFzcz0iZm9ybS1yYWRpbyB2YWxpZGF0ZVtyZXF1aXJlZF0iIGlkPSJpbnB1dF8xNF8xIiBuYW1lPSJxMTRfaGF2ZVlvdSIgdmFsdWU9Ik5vIiByZXF1aXJlZD0iIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMTRfMSIgZm9yPSJpbnB1dF8xNF8xIj4gTm8gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGpmLXJlcXVpcmVkIGZvcm0tZmllbGQtaGlkZGVuIiBzdHlsZT0iZGlzcGxheTpub25lOyIgZGF0YS10eXBlPSJjb250cm9sX3RleHRib3giIGlkPSJpZF8xOCI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzE4IiBmb3I9ImlucHV0XzE4Ij4KICAgICAgICAgIFBsZWFzZSBleHBsYWluIGFueSBzdXJnaWNhbCBwcm9jZWR1cmVzIG9yIGluanVyaWVzOgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tcmVxdWlyZWQiPgogICAgICAgICAgICAqCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8ZGl2IGlkPSJjaWRfMTgiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUgamYtcmVxdWlyZWQiIGRhdGEtbGF5b3V0PSJoYWxmIj4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iaW5wdXRfMTgiIG5hbWU9InExOF9wbGVhc2VFeHBsYWluMTgiIGRhdGEtdHlwZT0iaW5wdXQtdGV4dGJveCIgY2xhc3M9ImZvcm0tdGV4dGJveCB2YWxpZGF0ZVtyZXF1aXJlZF0iIGRhdGEtZGVmYXVsdHZhbHVlPSIiIGF1dG9Db21wbGV0ZT0ic2VjdGlvbi1pbnB1dF8xOCBvbiIgc3R5bGU9IndpZHRoOjMxMHB4IiBzaXplPSIzMTAiIHZhbHVlPSIiIGRhdGEtY29tcG9uZW50PSJ0ZXh0Ym94IiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzE4IiByZXF1aXJlZD0iIiAvPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCIgZGF0YS10eXBlPSJjb250cm9sX3JhZGlvIiBpZD0iaWRfMTYiPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCBmb3JtLWxhYmVsLWF1dG8iIGlkPSJsYWJlbF8xNiIgZm9yPSJpbnB1dF8xNiI+CiAgICAgICAgICBBcmUgeW91IGN1cnJlbnRseSBzZWVpbmcgYSBDaGlyb3ByYWN0b3IsIFBoeXNpY2FsIFRoZXJhcGlzdCwgb3IgUGh5c2ljaWFuIGZvciBhbiBvbmdvaW5nIGlzc3VlPwogICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tcmVxdWlyZWQiPgogICAgICAgICAgICAqCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8ZGl2IGlkPSJjaWRfMTYiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUgamYtcmVxdWlyZWQiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tbXVsdGlwbGUtY29sdW1uIiBkYXRhLWNvbHVtbmNvdW50PSIyIiByb2xlPSJncm91cCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8xNiIgZGF0YS1jb21wb25lbnQ9InJhZGlvIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tcmFkaW8taXRlbSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMTYiIGNsYXNzPSJmb3JtLXJhZGlvIHZhbGlkYXRlW3JlcXVpcmVkXSIgaWQ9ImlucHV0XzE2XzAiIG5hbWU9InExNl9hcmVZb3UxNiIgdmFsdWU9IlllcyIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzE2XzAiIGZvcj0iaW5wdXRfMTZfMCI+IFllcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJhZGlvLWl0ZW0iPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzE2IiBjbGFzcz0iZm9ybS1yYWRpbyB2YWxpZGF0ZVtyZXF1aXJlZF0iIGlkPSJpbnB1dF8xNl8xIiBuYW1lPSJxMTZfYXJlWW91MTYiIHZhbHVlPSJObyIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzE2XzEiIGZvcj0iaW5wdXRfMTZfMSI+IE5vIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCBmb3JtLWZpZWxkLWhpZGRlbiIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiIGRhdGEtdHlwZT0iY29udHJvbF90ZXh0Ym94IiBpZD0iaWRfMTUiPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCBmb3JtLWxhYmVsLWF1dG8iIGlkPSJsYWJlbF8xNSIgZm9yPSJpbnB1dF8xNSI+CiAgICAgICAgICBQbGVhc2UgZXhwbGFpbiBhbnkgdHJlYXRtZW50IHlvdSdyZSByZWNlaXZpbmc6CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yZXF1aXJlZCI+CiAgICAgICAgICAgICoKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8xNSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImhhbGYiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJpbnB1dF8xNSIgbmFtZT0icTE1X3BsZWFzZUV4cGxhaW4xNSIgZGF0YS10eXBlPSJpbnB1dC10ZXh0Ym94IiBjbGFzcz0iZm9ybS10ZXh0Ym94IHZhbGlkYXRlW3JlcXVpcmVkXSIgZGF0YS1kZWZhdWx0dmFsdWU9IiIgYXV0b0NvbXBsZXRlPSJzZWN0aW9uLWlucHV0XzE1IG9uIiBzdHlsZT0id2lkdGg6MzEwcHgiIHNpemU9IjMxMCIgdmFsdWU9IiIgZGF0YS1jb21wb25lbnQ9InRleHRib3giIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfMTUiIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGpmLXJlcXVpcmVkIiBkYXRhLXR5cGU9ImNvbnRyb2xfcmFkaW8iIGlkPSJpZF8xNyI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzE3IiBmb3I9ImlucHV0XzE3Ij4KICAgICAgICAgIEFyZSB5b3UgYWxsZXJnaWMgdG8gYW55IExvdGlvbnMgb3IgT2lscz8KICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzE3IiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIGpmLXJlcXVpcmVkIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLW11bHRpcGxlLWNvbHVtbiIgZGF0YS1jb2x1bW5jb3VudD0iMiIgcm9sZT0iZ3JvdXAiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfMTciIGRhdGEtY29tcG9uZW50PSJyYWRpbyI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJhZGlvLWl0ZW0iPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzE3IiBjbGFzcz0iZm9ybS1yYWRpbyB2YWxpZGF0ZVtyZXF1aXJlZF0iIGlkPSJpbnB1dF8xN18wIiBuYW1lPSJxMTdfYXJlWW91MTciIHZhbHVlPSJZZXMiIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8xN18wIiBmb3I9ImlucHV0XzE3XzAiPiBZZXMgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yYWRpby1pdGVtIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8xNyIgY2xhc3M9ImZvcm0tcmFkaW8gdmFsaWRhdGVbcmVxdWlyZWRdIiBpZD0iaW5wdXRfMTdfMSIgbmFtZT0icTE3X2FyZVlvdTE3IiB2YWx1ZT0iTm8iIHJlcXVpcmVkPSIiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8xN18xIiBmb3I9ImlucHV0XzE3XzEiPiBObyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUiIGRhdGEtdHlwZT0iY29udHJvbF90ZXh0IiBpZD0iaWRfMjAiPgogICAgICAgIDxkaXYgaWQ9ImNpZF8yMCIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPGRpdiBpZD0idGV4dF8yMCIgY2xhc3M9ImZvcm0taHRtbCIgZGF0YS1jb21wb25lbnQ9InRleHQiPgogICAgICAgICAgICA8cD5Ob3RlOiA8ZW0+SGFuZHMgb2YgYSBHb2RkZXNzPC9lbT4gdXNlcyBCb24gVml0YWwgTG90aW9ucywgQ3JlYW1zICZhbXA7IE9pbHMuIFRoZXNlIGFyZSBmb3JtdWxhdGVkIGZvciBzZW5zaXRpdmUgc2tpbiBhbmQgYXJlIHdhdGVyIHNvbHVibGUuPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGpmLXJlcXVpcmVkIGZvcm0tZmllbGQtaGlkZGVuIiBzdHlsZT0iZGlzcGxheTpub25lOyIgZGF0YS10eXBlPSJjb250cm9sX3RleHRib3giIGlkPSJpZF8xOSI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzE5IiBmb3I9ImlucHV0XzE5Ij4KICAgICAgICAgIFBsZWFzZSBleHBsYWluIGFueSBhbGxlcmdpZXM6CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yZXF1aXJlZCI+CiAgICAgICAgICAgICoKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8xOSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImhhbGYiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJpbnB1dF8xOSIgbmFtZT0icTE5X3BsZWFzZUV4cGxhaW4iIGRhdGEtdHlwZT0iaW5wdXQtdGV4dGJveCIgY2xhc3M9ImZvcm0tdGV4dGJveCB2YWxpZGF0ZVtyZXF1aXJlZF0iIGRhdGEtZGVmYXVsdHZhbHVlPSIiIGF1dG9Db21wbGV0ZT0ic2VjdGlvbi1pbnB1dF8xOSBvbiIgc3R5bGU9IndpZHRoOjMxMHB4IiBzaXplPSIzMTAiIHZhbHVlPSIiIGRhdGEtY29tcG9uZW50PSJ0ZXh0Ym94IiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzE5IiByZXF1aXJlZD0iIiAvPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgaWQ9ImNpZF8yMSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS10eXBlPSJjb250cm9sX3BhZ2VicmVhayI+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1wYWdlYnJlYWsiIGRhdGEtY29tcG9uZW50PSJwYWdlYnJlYWsiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1wYWdlYnJlYWstYmFjay1jb250YWluZXIiPgogICAgICAgICAgICA8YnV0dG9uIGlkPSJmb3JtLXBhZ2VicmVhay1iYWNrXzIxIiB0eXBlPSJidXR0b24iIGNsYXNzPSJmb3JtLXBhZ2VicmVhay1iYWNrICBqZi1mb3JtLWJ1dHRvbnMiIGRhdGEtY29tcG9uZW50PSJwYWdlYnJlYWstYmFjayI+CiAgICAgICAgICAgICAgQmFjawogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1wYWdlYnJlYWstbmV4dC1jb250YWluZXIiPgogICAgICAgICAgICA8YnV0dG9uIGlkPSJmb3JtLXBhZ2VicmVhay1uZXh0XzIxIiB0eXBlPSJidXR0b24iIGNsYXNzPSJmb3JtLXBhZ2VicmVhay1uZXh0ICBqZi1mb3JtLWJ1dHRvbnMiIGRhdGEtY29tcG9uZW50PSJwYWdlYnJlYWstbmV4dCI+CiAgICAgICAgICAgICAgTmV4dAogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iY2xlYXI6Ym90aCIgY2xhc3M9InBhZ2VJbmZvIGZvcm0tc3ViLWxhYmVsIiBpZD0icGFnZUluZm9fMjEiPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgPHVsIGNsYXNzPSJmb3JtLXNlY3Rpb24gcGFnZS1zZWN0aW9uIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIiBkYXRhLXR5cGU9ImNvbnRyb2xfdGV4dCIgaWQ9ImlkXzIyIj4KICAgICAgICA8ZGl2IGlkPSJjaWRfMjIiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgaWQ9InRleHRfMjIiIGNsYXNzPSJmb3JtLWh0bWwiIGRhdGEtY29tcG9uZW50PSJ0ZXh0Ij4KICAgICAgICAgICAgPGgzPgogICAgICAgICAgICAgIENoZWNrIGFueSBvZsKgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIHRoYXQgYXBwbHkgdG8geW91LCBwYXN0IGFuZCBwcmVzZW50LiBQbGVhc2UgYWRkIHlvdXIgY29tbWVudHMgYXQgdGhlIGVuZCB0byBjbGFyaWZ5IHRoZSBjb25kaXRpb25zIHlvdSBjaGVja2VkLgogICAgICAgICAgICA8L2gzPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGZvcm0tbGluZS1jb2x1bW4gZm9ybS1jb2wtMSIgZGF0YS10eXBlPSJjb250cm9sX2NoZWNrYm94IiBpZD0iaWRfMjMiPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCIgaWQ9ImxhYmVsXzIzIiBmb3I9ImlucHV0XzIzIj4gTXVzY3Vsb3NrZWxldGFsIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzIzIiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXNpbmdsZS1jb2x1bW4iIHJvbGU9Imdyb3VwIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzIzIiBkYXRhLWNvbXBvbmVudD0iY2hlY2tib3giPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjMiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjNfMCIgbmFtZT0icTIzX211c2N1bG9za2VsZXRhbFtdIiB2YWx1ZT0iSGVhZGFjaGVzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjNfMCIgZm9yPSJpbnB1dF8yM18wIj4gSGVhZGFjaGVzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzIzIiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzIzXzEiIG5hbWU9InEyM19tdXNjdWxvc2tlbGV0YWxbXSIgdmFsdWU9IkpvaW50IHN0aWZmbmVzcy9zd2VsbGluZyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzIzXzEiIGZvcj0iaW5wdXRfMjNfMSI+IEpvaW50IHN0aWZmbmVzcy9zd2VsbGluZyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yMyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yM18yIiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJTcGFzbXMvY3JhbXBzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjNfMiIgZm9yPSJpbnB1dF8yM18yIj4gU3Bhc21zL2NyYW1wcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yMyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yM18zIiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJCcm9rZW4vRnJhY3R1cmVkIGJvbmVzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjNfMyIgZm9yPSJpbnB1dF8yM18zIj4gQnJva2VuL0ZyYWN0dXJlZCBib25lcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yMyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yM180IiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJTdHJhaW5zL1NwcmFpbnMiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yM180IiBmb3I9ImlucHV0XzIzXzQiPiBTdHJhaW5zL1NwcmFpbnMgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjMiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjNfNSIgbmFtZT0icTIzX211c2N1bG9za2VsZXRhbFtdIiB2YWx1ZT0iQmFjaywgaGlwIHBhaW4iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yM181IiBmb3I9ImlucHV0XzIzXzUiPiBCYWNrLCBoaXAgcGFpbiA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yMyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yM182IiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJTaG91bGRlciwgbmVjaywgYXJtLCBoYW5kIHBhaW4iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yM182IiBmb3I9ImlucHV0XzIzXzYiPiBTaG91bGRlciwgbmVjaywgYXJtLCBoYW5kIHBhaW4gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjMiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjNfNyIgbmFtZT0icTIzX211c2N1bG9za2VsZXRhbFtdIiB2YWx1ZT0iTGVnLCBmb290IHBhaW4iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yM183IiBmb3I9ImlucHV0XzIzXzciPiBMZWcsIGZvb3QgcGFpbiA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yMyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yM184IiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJDaGVzdCwgcmlicywgYWJkb21pbmFsIHBhaW4iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yM184IiBmb3I9ImlucHV0XzIzXzgiPiBDaGVzdCwgcmlicywgYWJkb21pbmFsIHBhaW4gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjMiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjNfOSIgbmFtZT0icTIzX211c2N1bG9za2VsZXRhbFtdIiB2YWx1ZT0iUHJvYmxlbXMgd2Fsa2luZyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzIzXzkiIGZvcj0iaW5wdXRfMjNfOSI+IFByb2JsZW1zIHdhbGtpbmcgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjMiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjNfMTAiIG5hbWU9InEyM19tdXNjdWxvc2tlbGV0YWxbXSIgdmFsdWU9IkphdyBwYWluL1RNSiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzIzXzEwIiBmb3I9ImlucHV0XzIzXzEwIj4gSmF3IHBhaW4vVE1KIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzIzIiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzIzXzExIiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJUZW5kb25pdGlzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjNfMTEiIGZvcj0iaW5wdXRfMjNfMTEiPiBUZW5kb25pdGlzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzIzIiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzIzXzEyIiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJCdXJzaXRpcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzIzXzEyIiBmb3I9ImlucHV0XzIzXzEyIj4gQnVyc2l0aXMgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjMiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjNfMTMiIG5hbWU9InEyM19tdXNjdWxvc2tlbGV0YWxbXSIgdmFsdWU9IkFydGhyaXRpcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzIzXzEzIiBmb3I9ImlucHV0XzIzXzEzIj4gQXJ0aHJpdGlzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzIzIiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzIzXzE0IiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW10iIHZhbHVlPSJPc3Rlb3Bvcm9zaXMiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yM18xNCIgZm9yPSJpbnB1dF8yM18xNCI+IE9zdGVvcG9yb3NpcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yMyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yM18xNSIgbmFtZT0icTIzX211c2N1bG9za2VsZXRhbFtdIiB2YWx1ZT0iU2NvbGlvc2lzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjNfMTUiIGZvcj0iaW5wdXRfMjNfMTUiPiBTY29saW9zaXMgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIGZvcm1DaGVja2JveE90aGVyIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iZm9ybS1jaGVja2JveC1vdGhlciBmb3JtLWNoZWNrYm94IiBuYW1lPSJxMjNfbXVzY3Vsb3NrZWxldGFsW290aGVyXSIgaWQ9Im90aGVyXzIzIiB2YWx1ZT0ib3RoZXIiIGFyaWEtbGFiZWw9Ik90aGVyIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfb3RoZXJfMjMiIHN0eWxlPSJ0ZXh0LWluZGVudDowIiBmb3I9Im90aGVyXzIzIj4gT3RoZXIgPC9sYWJlbD4KICAgICAgICAgICAgICA8c3BhbiBpZD0ib3RoZXJfMjNfaW5wdXQiIGNsYXNzPSJvdGhlci1pbnB1dC1jb250YWluZXIiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNoZWNrYm94LW90aGVyLWlucHV0IGZvcm0tdGV4dGJveCIgbmFtZT0icTIzX211c2N1bG9za2VsZXRhbFtvdGhlcl0iIGRhdGEtb3RoZXJoaW50PSJPdGhlciIgc2l6ZT0iMTUiIGlkPSJpbnB1dF8yMyIgZGF0YS1wbGFjZWhvbGRlcj0iUGxlYXNlIHR5cGUgYW5vdGhlciBvcHRpb24gaGVyZSIgcGxhY2Vob2xkZXI9IlBsZWFzZSB0eXBlIGFub3RoZXIgb3B0aW9uIGhlcmUiIC8+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgZm9ybS1saW5lLWNvbHVtbiBmb3JtLWNvbC0yIiBkYXRhLXR5cGU9ImNvbnRyb2xfY2hlY2tib3giIGlkPSJpZF8yNSI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIiBpZD0ibGFiZWxfMjUiIGZvcj0iaW5wdXRfMjUiPiBOZXJ2b3VzIFN5c3RlbSA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8yNSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1zaW5nbGUtY29sdW1uIiByb2xlPSJncm91cCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8yNSIgZGF0YS1jb21wb25lbnQ9ImNoZWNrYm94Ij4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzAiIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW10iIHZhbHVlPSJOdW1ibmVzcy90aW5nbGluZyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI1XzAiIGZvcj0iaW5wdXRfMjVfMCI+IE51bWJuZXNzL3RpbmdsaW5nIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzEiIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW10iIHZhbHVlPSJGYXRpZ3VlIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjVfMSIgZm9yPSJpbnB1dF8yNV8xIj4gRmF0aWd1ZSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNSIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNV8yIiBuYW1lPSJxMjVfbmVydm91c1N5c3RlbVtdIiB2YWx1ZT0iU2xlZXAgZGlzb3JkZXJzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjVfMiIgZm9yPSJpbnB1dF8yNV8yIj4gU2xlZXAgZGlzb3JkZXJzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzMiIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW10iIHZhbHVlPSJVbGNlcnMiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNV8zIiBmb3I9ImlucHV0XzI1XzMiPiBVbGNlcnMgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjUiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjVfNCIgbmFtZT0icTI1X25lcnZvdXNTeXN0ZW1bXSIgdmFsdWU9IlBhcmFseXNpcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI1XzQiIGZvcj0iaW5wdXRfMjVfNCI+IFBhcmFseXNpcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNSIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNV81IiBuYW1lPSJxMjVfbmVydm91c1N5c3RlbVtdIiB2YWx1ZT0iSGVycGVzL3NoaW5nbGVzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjVfNSIgZm9yPSJpbnB1dF8yNV81Ij4gSGVycGVzL3NoaW5nbGVzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzYiIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW10iIHZhbHVlPSJDZXJlYnJhbCBQYWxzeSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI1XzYiIGZvcj0iaW5wdXRfMjVfNiI+IENlcmVicmFsIFBhbHN5IDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzciIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW10iIHZhbHVlPSJFcGlsZXBzeSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI1XzciIGZvcj0iaW5wdXRfMjVfNyI+IEVwaWxlcHN5IDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzgiIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW10iIHZhbHVlPSJDaHJvbmljIEZhdGlndWUgU3luZHJvbWUiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNV84IiBmb3I9ImlucHV0XzI1XzgiPiBDaHJvbmljIEZhdGlndWUgU3luZHJvbWUgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjUiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjVfOSIgbmFtZT0icTI1X25lcnZvdXNTeXN0ZW1bXSIgdmFsdWU9Ik11bHRpcGxlIFNjbGVyb3NpcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI1XzkiIGZvcj0iaW5wdXRfMjVfOSI+IE11bHRpcGxlIFNjbGVyb3NpcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNSIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNV8xMCIgbmFtZT0icTI1X25lcnZvdXNTeXN0ZW1bXSIgdmFsdWU9Ik11c2N1bGFyIER5c3Ryb3BoeSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI1XzEwIiBmb3I9ImlucHV0XzI1XzEwIj4gTXVzY3VsYXIgRHlzdHJvcGh5IDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI1IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI1XzExIiBuYW1lPSJxMjVfbmVydm91c1N5c3RlbVtdIiB2YWx1ZT0iUGFya2luc29u4oCZcyBEaXNlYXNlIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjVfMTEiIGZvcj0iaW5wdXRfMjVfMTEiPiBQYXJraW5zb27igJlzIERpc2Vhc2UgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIGZvcm1DaGVja2JveE90aGVyIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iZm9ybS1jaGVja2JveC1vdGhlciBmb3JtLWNoZWNrYm94IiBuYW1lPSJxMjVfbmVydm91c1N5c3RlbVtvdGhlcl0iIGlkPSJvdGhlcl8yNSIgdmFsdWU9Im90aGVyIiBhcmlhLWxhYmVsPSJPdGhlciIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX290aGVyXzI1IiBzdHlsZT0idGV4dC1pbmRlbnQ6MCIgZm9yPSJvdGhlcl8yNSI+IE90aGVyIDwvbGFiZWw+CiAgICAgICAgICAgICAgPHNwYW4gaWQ9Im90aGVyXzI1X2lucHV0IiBjbGFzcz0ib3RoZXItaW5wdXQtY29udGFpbmVyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jaGVja2JveC1vdGhlci1pbnB1dCBmb3JtLXRleHRib3giIG5hbWU9InEyNV9uZXJ2b3VzU3lzdGVtW290aGVyXSIgZGF0YS1vdGhlcmhpbnQ9Ik90aGVyIiBzaXplPSIxNSIgaWQ9ImlucHV0XzI1IiBkYXRhLXBsYWNlaG9sZGVyPSJQbGVhc2UgdHlwZSBhbm90aGVyIG9wdGlvbiBoZXJlIiBwbGFjZWhvbGRlcj0iUGxlYXNlIHR5cGUgYW5vdGhlciBvcHRpb24gaGVyZSIgLz4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBmb3JtLWxpbmUtY29sdW1uIGZvcm0tY29sLTMiIGRhdGEtdHlwZT0iY29udHJvbF9jaGVja2JveCIgaWQ9ImlkXzI0Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AiIGlkPSJsYWJlbF8yNCIgZm9yPSJpbnB1dF8yNCI+IENpcmN1bGF0b3J5L1Jlc3BpcmF0b3J5IDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzI0IiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXNpbmdsZS1jb2x1bW4iIHJvbGU9Imdyb3VwIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzI0IiBkYXRhLWNvbXBvbmVudD0iY2hlY2tib3giPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjQiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjRfMCIgbmFtZT0icTI0X2NpcmN1bGF0b3J5cmVzcGlyYXRvcnlbXSIgdmFsdWU9IkRpenppbmVzcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI0XzAiIGZvcj0iaW5wdXRfMjRfMCI+IERpenppbmVzcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNF8xIiBuYW1lPSJxMjRfY2lyY3VsYXRvcnlyZXNwaXJhdG9yeVtdIiB2YWx1ZT0iU2hvcnRuZXNzIG9mIGJyZWF0aCBGYWludGluZyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI0XzEiIGZvcj0iaW5wdXRfMjRfMSI+IFNob3J0bmVzcyBvZiBicmVhdGggRmFpbnRpbmcgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjQiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjRfMiIgbmFtZT0icTI0X2NpcmN1bGF0b3J5cmVzcGlyYXRvcnlbXSIgdmFsdWU9IkNvbGQgZmVldCBvciBoYW5kcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI0XzIiIGZvcj0iaW5wdXRfMjRfMiI+IENvbGQgZmVldCBvciBoYW5kcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNF8zIiBuYW1lPSJxMjRfY2lyY3VsYXRvcnlyZXNwaXJhdG9yeVtdIiB2YWx1ZT0iQ29sZCBzd2VhdHMiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNF8zIiBmb3I9ImlucHV0XzI0XzMiPiBDb2xkIHN3ZWF0cyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNF80IiBuYW1lPSJxMjRfY2lyY3VsYXRvcnlyZXNwaXJhdG9yeVtdIiB2YWx1ZT0iU3Ryb2tlIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjRfNCIgZm9yPSJpbnB1dF8yNF80Ij4gU3Ryb2tlIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI0IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI0XzUiIG5hbWU9InEyNF9jaXJjdWxhdG9yeXJlc3BpcmF0b3J5W10iIHZhbHVlPSJIZWFydCBjb25kaXRpb24iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNF81IiBmb3I9ImlucHV0XzI0XzUiPiBIZWFydCBjb25kaXRpb24gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjQiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjRfNiIgbmFtZT0icTI0X2NpcmN1bGF0b3J5cmVzcGlyYXRvcnlbXSIgdmFsdWU9IkFsbGVyZ2llcyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI0XzYiIGZvcj0iaW5wdXRfMjRfNiI+IEFsbGVyZ2llcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNF83IiBuYW1lPSJxMjRfY2lyY3VsYXRvcnlyZXNwaXJhdG9yeVtdIiB2YWx1ZT0iQXN0aG1hIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjRfNyIgZm9yPSJpbnB1dF8yNF83Ij4gQXN0aG1hIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI0IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI0XzgiIG5hbWU9InEyNF9jaXJjdWxhdG9yeXJlc3BpcmF0b3J5W10iIHZhbHVlPSJIaWdoIGJsb29kIHByZXNzdXJlIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjRfOCIgZm9yPSJpbnB1dF8yNF84Ij4gSGlnaCBibG9vZCBwcmVzc3VyZSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNF85IiBuYW1lPSJxMjRfY2lyY3VsYXRvcnlyZXNwaXJhdG9yeVtdIiB2YWx1ZT0iTG93IGJsb29kIHByZXNzdXJlIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjRfOSIgZm9yPSJpbnB1dF8yNF85Ij4gTG93IGJsb29kIHByZXNzdXJlIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSBmb3JtQ2hlY2tib3hPdGhlciIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImZvcm0tY2hlY2tib3gtb3RoZXIgZm9ybS1jaGVja2JveCIgbmFtZT0icTI0X2NpcmN1bGF0b3J5cmVzcGlyYXRvcnlbb3RoZXJdIiBpZD0ib3RoZXJfMjQiIHZhbHVlPSJvdGhlciIgYXJpYS1sYWJlbD0iT3RoZXIiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9vdGhlcl8yNCIgc3R5bGU9InRleHQtaW5kZW50OjAiIGZvcj0ib3RoZXJfMjQiPiBPdGhlciA8L2xhYmVsPgogICAgICAgICAgICAgIDxzcGFuIGlkPSJvdGhlcl8yNF9pbnB1dCIgY2xhc3M9Im90aGVyLWlucHV0LWNvbnRhaW5lciIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY2hlY2tib3gtb3RoZXItaW5wdXQgZm9ybS10ZXh0Ym94IiBuYW1lPSJxMjRfY2lyY3VsYXRvcnlyZXNwaXJhdG9yeVtvdGhlcl0iIGRhdGEtb3RoZXJoaW50PSJPdGhlciIgc2l6ZT0iMTUiIGlkPSJpbnB1dF8yNCIgZGF0YS1wbGFjZWhvbGRlcj0iUGxlYXNlIHR5cGUgYW5vdGhlciBvcHRpb24gaGVyZSIgcGxhY2Vob2xkZXI9IlBsZWFzZSB0eXBlIGFub3RoZXIgb3B0aW9uIGhlcmUiIC8+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgZm9ybS1saW5lLWNvbHVtbiBmb3JtLWNvbC00IiBkYXRhLXR5cGU9ImNvbnRyb2xfY2hlY2tib3giIGlkPSJpZF8yNiI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIiBpZD0ibGFiZWxfMjYiIGZvcj0iaW5wdXRfMjYiPiBEaWdlc3RpdmUgU3lzdGVtIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzI2IiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXNpbmdsZS1jb2x1bW4iIHJvbGU9Imdyb3VwIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzI2IiBkYXRhLWNvbXBvbmVudD0iY2hlY2tib3giPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjYiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjZfMCIgbmFtZT0icTI2X2RpZ2VzdGl2ZVN5c3RlbVtdIiB2YWx1ZT0iSW5kaWdlc3Rpb24iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNl8wIiBmb3I9ImlucHV0XzI2XzAiPiBJbmRpZ2VzdGlvbiA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNiIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNl8xIiBuYW1lPSJxMjZfZGlnZXN0aXZlU3lzdGVtW10iIHZhbHVlPSJDb25zdGlwYXRpb24iIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNl8xIiBmb3I9ImlucHV0XzI2XzEiPiBDb25zdGlwYXRpb24gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjYiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjZfMiIgbmFtZT0icTI2X2RpZ2VzdGl2ZVN5c3RlbVtdIiB2YWx1ZT0iSW50ZXN0aW5hbCBnYXMvYmxvYXRpbmciIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNl8yIiBmb3I9ImlucHV0XzI2XzIiPiBJbnRlc3RpbmFsIGdhcy9ibG9hdGluZyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNiIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNl8zIiBuYW1lPSJxMjZfZGlnZXN0aXZlU3lzdGVtW10iIHZhbHVlPSJEaWFycmhlYSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI2XzMiIGZvcj0iaW5wdXRfMjZfMyI+IERpYXJyaGVhIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI2IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI2XzQiIG5hbWU9InEyNl9kaWdlc3RpdmVTeXN0ZW1bXSIgdmFsdWU9Iklycml0YWJsZSBib3dlbCBzeW5kcm9tZSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI2XzQiIGZvcj0iaW5wdXRfMjZfNCI+IElycml0YWJsZSBib3dlbCBzeW5kcm9tZSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNiIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yNl81IiBuYW1lPSJxMjZfZGlnZXN0aXZlU3lzdGVtW10iIHZhbHVlPSJDcm9obuKAmXMgRGlzZWFzZSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI2XzUiIGZvcj0iaW5wdXRfMjZfNSI+IENyb2hu4oCZcyBEaXNlYXNlIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI2IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI2XzYiIG5hbWU9InEyNl9kaWdlc3RpdmVTeXN0ZW1bXSIgdmFsdWU9IkNvbGl0aXMiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yNl82IiBmb3I9ImlucHV0XzI2XzYiPiBDb2xpdGlzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSBmb3JtQ2hlY2tib3hPdGhlciIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImZvcm0tY2hlY2tib3gtb3RoZXIgZm9ybS1jaGVja2JveCIgbmFtZT0icTI2X2RpZ2VzdGl2ZVN5c3RlbVtvdGhlcl0iIGlkPSJvdGhlcl8yNiIgdmFsdWU9Im90aGVyIiBhcmlhLWxhYmVsPSJPdGhlciIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX290aGVyXzI2IiBzdHlsZT0idGV4dC1pbmRlbnQ6MCIgZm9yPSJvdGhlcl8yNiI+IE90aGVyIDwvbGFiZWw+CiAgICAgICAgICAgICAgPHNwYW4gaWQ9Im90aGVyXzI2X2lucHV0IiBjbGFzcz0ib3RoZXItaW5wdXQtY29udGFpbmVyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jaGVja2JveC1vdGhlci1pbnB1dCBmb3JtLXRleHRib3giIG5hbWU9InEyNl9kaWdlc3RpdmVTeXN0ZW1bb3RoZXJdIiBkYXRhLW90aGVyaGludD0iT3RoZXIiIHNpemU9IjE1IiBpZD0iaW5wdXRfMjYiIGRhdGEtcGxhY2Vob2xkZXI9IlBsZWFzZSB0eXBlIGFub3RoZXIgb3B0aW9uIGhlcmUiIHBsYWNlaG9sZGVyPSJQbGVhc2UgdHlwZSBhbm90aGVyIG9wdGlvbiBoZXJlIiAvPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGZvcm0tbGluZS1jb2x1bW4gZm9ybS1jb2wtNSIgZGF0YS10eXBlPSJjb250cm9sX2NoZWNrYm94IiBpZD0iaWRfMjciPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCIgaWQ9ImxhYmVsXzI3IiBmb3I9ImlucHV0XzI3Ij4gRGlnZXN0aXZlIFN5c3RlbSA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8yNyIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1zaW5nbGUtY29sdW1uIiByb2xlPSJncm91cCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8yNyIgZGF0YS1jb21wb25lbnQ9ImNoZWNrYm94Ij4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI3IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI3XzAiIG5hbWU9InEyN19kaWdlc3RpdmVTeXN0ZW0yN1tdIiB2YWx1ZT0iUmFzaGVzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjdfMCIgZm9yPSJpbnB1dF8yN18wIj4gUmFzaGVzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI3IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI3XzEiIG5hbWU9InEyN19kaWdlc3RpdmVTeXN0ZW0yN1tdIiB2YWx1ZT0iQWxsZXJnaWVzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjdfMSIgZm9yPSJpbnB1dF8yN18xIj4gQWxsZXJnaWVzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI3IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI3XzIiIG5hbWU9InEyN19kaWdlc3RpdmVTeXN0ZW0yN1tdIiB2YWx1ZT0iQXRobGV0ZeKAmXMgZm9vdCIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI3XzIiIGZvcj0iaW5wdXRfMjdfMiI+IEF0aGxldGXigJlzIGZvb3QgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjciIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjdfMyIgbmFtZT0icTI3X2RpZ2VzdGl2ZVN5c3RlbTI3W10iIHZhbHVlPSJBY25lIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjdfMyIgZm9yPSJpbnB1dF8yN18zIj4gQWNuZSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yNyIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yN180IiBuYW1lPSJxMjdfZGlnZXN0aXZlU3lzdGVtMjdbXSIgdmFsdWU9IkltcGV0aWdvIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjdfNCIgZm9yPSJpbnB1dF8yN180Ij4gSW1wZXRpZ28gPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjciIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjdfNSIgbmFtZT0icTI3X2RpZ2VzdGl2ZVN5c3RlbTI3W10iIHZhbHVlPSJIZW1vcGhpbGlhIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjdfNSIgZm9yPSJpbnB1dF8yN181Ij4gSGVtb3BoaWxpYSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0gZm9ybUNoZWNrYm94T3RoZXIiIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGNsYXNzPSJmb3JtLWNoZWNrYm94LW90aGVyIGZvcm0tY2hlY2tib3giIG5hbWU9InEyN19kaWdlc3RpdmVTeXN0ZW0yN1tvdGhlcl0iIGlkPSJvdGhlcl8yNyIgdmFsdWU9Im90aGVyIiBhcmlhLWxhYmVsPSJPdGhlciIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX290aGVyXzI3IiBzdHlsZT0idGV4dC1pbmRlbnQ6MCIgZm9yPSJvdGhlcl8yNyI+IE90aGVyIDwvbGFiZWw+CiAgICAgICAgICAgICAgPHNwYW4gaWQ9Im90aGVyXzI3X2lucHV0IiBjbGFzcz0ib3RoZXItaW5wdXQtY29udGFpbmVyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jaGVja2JveC1vdGhlci1pbnB1dCBmb3JtLXRleHRib3giIG5hbWU9InEyN19kaWdlc3RpdmVTeXN0ZW0yN1tvdGhlcl0iIGRhdGEtb3RoZXJoaW50PSJPdGhlciIgc2l6ZT0iMTUiIGlkPSJpbnB1dF8yNyIgZGF0YS1wbGFjZWhvbGRlcj0iUGxlYXNlIHR5cGUgYW5vdGhlciBvcHRpb24gaGVyZSIgcGxhY2Vob2xkZXI9IlBsZWFzZSB0eXBlIGFub3RoZXIgb3B0aW9uIGhlcmUiIC8+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgZm9ybS1saW5lLWNvbHVtbiBmb3JtLWNvbC02IiBkYXRhLXR5cGU9ImNvbnRyb2xfY2hlY2tib3giIGlkPSJpZF8yOCI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIiBpZD0ibGFiZWxfMjgiIGZvcj0iaW5wdXRfMjgiPiBPdGhlciA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8yOCIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1zaW5nbGUtY29sdW1uIiByb2xlPSJncm91cCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8yOCIgZGF0YS1jb21wb25lbnQ9ImNoZWNrYm94Ij4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI4IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI4XzAiIG5hbWU9InEyOF9vdGhlcltdIiB2YWx1ZT0iTG9zcyBvZiBBcHBldGl0ZSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI4XzAiIGZvcj0iaW5wdXRfMjhfMCI+IExvc3Mgb2YgQXBwZXRpdGUgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1jaGVja2JveC1pdGVtIiBzdHlsZT0iY2xlYXI6bGVmdCI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRyYWdnZXItaXRlbSI+CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgYXJpYS1kZXNjcmliZWRieT0ibGFiZWxfMjgiIGNsYXNzPSJmb3JtLWNoZWNrYm94IiBpZD0iaW5wdXRfMjhfMSIgbmFtZT0icTI4X290aGVyW10iIHZhbHVlPSJEZXByZXNzaW9uIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjhfMSIgZm9yPSJpbnB1dF8yOF8xIj4gRGVwcmVzc2lvbiA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yOCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yOF8yIiBuYW1lPSJxMjhfb3RoZXJbXSIgdmFsdWU9IkRpZmZpY3VsdHkgY29uY2VudHJhdGluZyIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI4XzIiIGZvcj0iaW5wdXRfMjhfMiI+IERpZmZpY3VsdHkgY29uY2VudHJhdGluZyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yOCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yOF8zIiBuYW1lPSJxMjhfb3RoZXJbXSIgdmFsdWU9IkhlYXJpbmcgSW1wYWlyZWQiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yOF8zIiBmb3I9ImlucHV0XzI4XzMiPiBIZWFyaW5nIEltcGFpcmVkIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI4IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI4XzQiIG5hbWU9InEyOF9vdGhlcltdIiB2YWx1ZT0iVmlzdWFsbHkgSW1wYWlyZWQgRGlhYmV0ZXMiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yOF80IiBmb3I9ImlucHV0XzI4XzQiPiBWaXN1YWxseSBJbXBhaXJlZCBEaWFiZXRlcyA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yOCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yOF81IiBuYW1lPSJxMjhfb3RoZXJbXSIgdmFsdWU9IkZpYnJvbXlhbGdpYSIgLz4KICAgICAgICAgICAgICA8bGFiZWwgaWQ9ImxhYmVsX2lucHV0XzI4XzUiIGZvcj0iaW5wdXRfMjhfNSI+IEZpYnJvbXlhbGdpYSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLWNoZWNrYm94LWl0ZW0iIHN0eWxlPSJjbGVhcjpsZWZ0Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHJhZ2dlci1pdGVtIj4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBhcmlhLWRlc2NyaWJlZGJ5PSJsYWJlbF8yOCIgY2xhc3M9ImZvcm0tY2hlY2tib3giIGlkPSJpbnB1dF8yOF82IiBuYW1lPSJxMjhfb3RoZXJbXSIgdmFsdWU9IlBvc3QvUG9saW8gU3luZHJvbWUiIC8+CiAgICAgICAgICAgICAgPGxhYmVsIGlkPSJsYWJlbF9pbnB1dF8yOF82IiBmb3I9ImlucHV0XzI4XzYiPiBQb3N0L1BvbGlvIFN5bmRyb21lIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI4IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI4XzciIG5hbWU9InEyOF9vdGhlcltdIiB2YWx1ZT0iQ2FuY2VyIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjhfNyIgZm9yPSJpbnB1dF8yOF83Ij4gQ2FuY2VyIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI4IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI4XzgiIG5hbWU9InEyOF9vdGhlcltdIiB2YWx1ZT0iVHViZXJjdWxvc2lzIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjhfOCIgZm9yPSJpbnB1dF8yOF84Ij4gVHViZXJjdWxvc2lzIDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkcmFnZ2VyLWl0ZW0iPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGFyaWEtZGVzY3JpYmVkYnk9ImxhYmVsXzI4IiBjbGFzcz0iZm9ybS1jaGVja2JveCIgaWQ9ImlucHV0XzI4XzkiIG5hbWU9InEyOF9vdGhlcltdIiB2YWx1ZT0iUHJlZ25hbmN5IiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfaW5wdXRfMjhfOSIgZm9yPSJpbnB1dF8yOF85Ij4gUHJlZ25hbmN5IDwvbGFiZWw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvcm0tY2hlY2tib3gtaXRlbSBmb3JtQ2hlY2tib3hPdGhlciIgc3R5bGU9ImNsZWFyOmxlZnQiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImZvcm0tY2hlY2tib3gtb3RoZXIgZm9ybS1jaGVja2JveCIgbmFtZT0icTI4X290aGVyW290aGVyXSIgaWQ9Im90aGVyXzI4IiB2YWx1ZT0ib3RoZXIiIGFyaWEtbGFiZWw9Ik90aGVyIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBpZD0ibGFiZWxfb3RoZXJfMjgiIHN0eWxlPSJ0ZXh0LWluZGVudDowIiBmb3I9Im90aGVyXzI4Ij4gT3RoZXIgPC9sYWJlbD4KICAgICAgICAgICAgICA8c3BhbiBpZD0ib3RoZXJfMjhfaW5wdXQiIGNsYXNzPSJvdGhlci1pbnB1dC1jb250YWluZXIiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNoZWNrYm94LW90aGVyLWlucHV0IGZvcm0tdGV4dGJveCIgbmFtZT0icTI4X290aGVyW290aGVyXSIgZGF0YS1vdGhlcmhpbnQ9Ik90aGVyIiBzaXplPSIxNSIgaWQ9ImlucHV0XzI4IiBkYXRhLXBsYWNlaG9sZGVyPSJQbGVhc2UgdHlwZSBhbm90aGVyIG9wdGlvbiBoZXJlIiBwbGFjZWhvbGRlcj0iUGxlYXNlIHR5cGUgYW5vdGhlciBvcHRpb24gaGVyZSIgLz4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCBmb3JtLWZpZWxkLWhpZGRlbiIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiIGRhdGEtdHlwZT0iY29udHJvbF90ZXh0YXJlYSIgaWQ9ImlkXzI5Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AgZm9ybS1sYWJlbC1hdXRvIiBpZD0ibGFiZWxfMjkiIGZvcj0iaW5wdXRfMjkiPgogICAgICAgICAgUGxlYXNlIGV4cGxhaW4gYW55IGNvbmRpdGlvbnMgeW91IGNoZWNrZWQ6CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yZXF1aXJlZCI+CiAgICAgICAgICAgICoKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8yOSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPHRleHRhcmVhIGlkPSJpbnB1dF8yOSIgY2xhc3M9ImZvcm0tdGV4dGFyZWEgdmFsaWRhdGVbcmVxdWlyZWRdIiBuYW1lPSJxMjlfcGxlYXNlRXhwbGFpbjI5IiBzdHlsZT0id2lkdGg6NjQ4cHg7aGVpZ2h0OjE2M3B4IiBkYXRhLWNvbXBvbmVudD0idGV4dGFyZWEiIHJlcXVpcmVkPSIiIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfMjkiPjwvdGV4dGFyZWE+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIiBkYXRhLXR5cGU9ImNvbnRyb2xfdGV4dCIgaWQ9ImlkXzMxIj4KICAgICAgICA8ZGl2IGlkPSJjaWRfMzEiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgaWQ9InRleHRfMzEiIGNsYXNzPSJmb3JtLWh0bWwiIGRhdGEtY29tcG9uZW50PSJ0ZXh0Ij4KICAgICAgICAgICAgPHA+SSB1bmRlcnN0YW5kIHRoYXQgYSBtYXNzYWdlIFRoZXJhcGlzdCBkb2VzIG5vdCBkaWFnbm9zZSBkaXNlYXNlLCBpbGxuZXNzLCBvciBwcmVzY3JpYmUgYW55IHRyZWF0bWVudCBvciBkcnVncywgbm9yIGRvIHRoZXkgcHJvdmlkZSBzcGluYWwgbWFuaXB1bGF0aW9uLiBJIHVuZGVyc3RhbmQgdGhhdCBkcmFwaW5nIHdpbGwgYmUgdXNlZCBhdCBhbGwgdGltZXMgYW5kIHRoYXQgYnJlYXN0IG1hc3NhZ2Ugd2lsbCBub3QgYmUgYWRtaW5pc3RlcmVkIG9uIGZlbWFsZSBjbGllbnRzLiBJIHVuZGVyc3RhbmQgdGhhdCBpZiBJIGJlY29tZSB1bmNvbWZvcnRhYmxlIGZvciBhbnkgcmVhc29uIHRoYXQgSSBtYXkgYXNrIHRoZSBUaGVyYXBpc3QgdG8gZW5kIHRoZSBtYXNzYWdlIHNlc3Npb24sIGFuZCB0aGV5IHdpbGwgZW5kIHRoZSBzZXNzaW9uLiBJIHVuZGVyc3RhbmQgdGhhdCB0aGUgbWFzc2FnZSBUaGVyYXBpc3QgbWF5IGVuZCB0aGUgc2Vzc2lvbiBmb3IgYW55IGluYXBwcm9wcmlhdGUgYmVoYXZpb3IuIEkgaGF2ZSBzdGF0ZWQgYWxsIG9mIHRoZSBjb25kaXRpb25zIHRoYXQgSSBhbSBhd2FyZSBvZiwgYW5kIHRoaXMgaW5mb3JtYXRpb24gaXMgdHJ1ZSBhbmQgYWNjdXJhdGUuIEkgd2lsbCBpbmZvcm0gdGhlIGhlYWx0aCBjYXJlIHByb3ZpZGVyIG9mIGFueSBjaGFuZ2VzIGluIG15IHN0YXR1cy48L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgamYtcmVxdWlyZWQiIGRhdGEtdHlwZT0iY29udHJvbF9zaWduYXR1cmUiIGlkPSJpZF8zMCI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWxhYmVsIGZvcm0tbGFiZWwtdG9wIGZvcm0tbGFiZWwtYXV0byIgaWQ9ImxhYmVsXzMwIiBmb3I9ImlucHV0XzMwIj4KICAgICAgICAgIENsaWVudCBTaWduYXR1cmUKICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXJlcXVpcmVkIj4KICAgICAgICAgICAgKgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGRpdiBpZD0iY2lkXzMwIiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIGpmLXJlcXVpcmVkIiBkYXRhLWxheW91dD0iaGFsZiI+CiAgICAgICAgICA8ZGl2IGRhdGEtd3JhcHBlci1yZWFjdD0idHJ1ZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InNpZ25hdHVyZV9wYWRfMzAiIGNsYXNzPSJzaWduYXR1cmUtcGFkLXdyYXBwZXIiIHN0eWxlPSJ3aWR0aDozMTJweDtoZWlnaHQ6MTE2cHgiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb3JtLXN1Yi1sYWJlbC1jb250YWluZXIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3AiPgogICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdyYXBwZXItcmVhY3Q9InRydWUiPgogICAgICAgICAgICAgICAgICA8IS0tW2lmIElFIDddPgogICAgICAgICAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy92ZW5kb3IvanNvbjIuanMiPjwvc2NyaXB0PgogICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lnbmF0dXJlLWxpbmUgc2lnbmF0dXJlLXdyYXBwZXIgc2lnbmF0dXJlLXBsYWNlaG9sZGVyIiBkYXRhLWNvbXBvbmVudD0ic2lnbmF0dXJlIiBzdHlsZT0id2lkdGg6MzEycHg7aGVpZ2h0OjExNnB4Ij4KICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ic2lnX3BhZF8zMCIgZGF0YS13aWR0aD0iMzEwIiBkYXRhLWhlaWdodD0iMTE0IiBkYXRhLWlkPSIzMCIgZGF0YS1yZXF1aXJlZD0idHJ1ZSIgY2xhc3M9InBhZCB2YWxpZGF0ZVtyZXF1aXJlZF0iIGFyaWEtbGFiZWxsZWRieT0ibGFiZWxfMzAiPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icTMwX2NsaWVudFNpZ25hdHVyZTMwIiBjbGFzcz0ib3V0cHV0NCIgaWQ9ImlucHV0XzMwIiAvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tc3ViLWxhYmVsIiBmb3I9InNpZ19wYWRfMzAiIHN0eWxlPSJtaW4taGVpZ2h0OjEzcHgiIGFyaWEtaGlkZGVuPSJmYWxzZSI+IFVzZSB5b3VyIG1vdXNlIHRvIHNpZ24gKG9yIHlvdXIgZmluZ2VyIGlmIG9uIG1vYmlsZSkgPC9sYWJlbD4KICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNsZWFyLXBhZC1idG4gY2xlYXItcGFkIiByb2xlPSJidXR0b24iIHRhYmluZGV4PSIwIj4KICAgICAgICAgICAgICAgIENsZWFyCiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBkYXRhLXdyYXBwZXItcmVhY3Q9InRydWUiPgogICAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICB3aW5kb3cuc2lnbmF0dXJlRm9ybSA9IHRydWUKICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGlkPSJjaWRfMzIiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUiIGRhdGEtdHlwZT0iY29udHJvbF9wYWdlYnJlYWsiPgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tcGFnZWJyZWFrIiBkYXRhLWNvbXBvbmVudD0icGFnZWJyZWFrIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tcGFnZWJyZWFrLWJhY2stY29udGFpbmVyIj4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iZm9ybS1wYWdlYnJlYWstYmFja18zMiIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iZm9ybS1wYWdlYnJlYWstYmFjayAgamYtZm9ybS1idXR0b25zIiBkYXRhLWNvbXBvbmVudD0icGFnZWJyZWFrLWJhY2siPgogICAgICAgICAgICAgIEJhY2sKICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tcGFnZWJyZWFrLW5leHQtY29udGFpbmVyIj4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iZm9ybS1wYWdlYnJlYWstbmV4dF8zMiIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iZm9ybS1wYWdlYnJlYWstbmV4dCAgamYtZm9ybS1idXR0b25zIiBkYXRhLWNvbXBvbmVudD0icGFnZWJyZWFrLW5leHQiPgogICAgICAgICAgICAgIE5leHQKICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImNsZWFyOmJvdGgiIGNsYXNzPSJwYWdlSW5mbyBmb3JtLXN1Yi1sYWJlbCIgaWQ9InBhZ2VJbmZvXzMyIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgPC91bD4KICAgIDx1bCBjbGFzcz0iZm9ybS1zZWN0aW9uIHBhZ2Utc2VjdGlvbiIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSIgZGF0YS10eXBlPSJjb250cm9sX3RleHQiIGlkPSJpZF8zMyI+CiAgICAgICAgPGRpdiBpZD0iY2lkXzMzIiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IGlkPSJ0ZXh0XzMzIiBjbGFzcz0iZm9ybS1odG1sIiBkYXRhLWNvbXBvbmVudD0idGV4dCI+CiAgICAgICAgICAgIDxoMiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgICAgICAgQ29uc2VudCBmb3IgVGhlcmFweSBhbmQgV2FpdmVyIG9mIExpYWJpbGl0eQogICAgICAgICAgICA8L2gyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIiBkYXRhLXR5cGU9ImNvbnRyb2xfdGV4dCIgaWQ9ImlkXzM0Ij4KICAgICAgICA8ZGl2IGlkPSJjaWRfMzQiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgaWQ9InRleHRfMzQiIGNsYXNzPSJmb3JtLWh0bWwiIGRhdGEtY29tcG9uZW50PSJ0ZXh0Ij4KICAgICAgICAgICAgPHA+VGhlIHVuZGVyc2lnbmVkICjigJxDbGllbnTigJ0pIGhlcmVieSBmcmVlbHkgY29uc2VudHMgdG8gcmVjZWlwdCBvZiBtYXNzYWdlIHNlcnZpY2VzIGZyb206PC9wPgogICAgICAgICAgICA8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+PHN0cm9uZz48ZW0+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTRwdDsiPk5nb3ppIE9udW1hPC9zcGFuPjwvZW0+PC9zdHJvbmc+PC9zcGFuPjxiciAvPiA8c3BhbiBzdHlsZT0iY29sb3I6ICMwMDMzMDA7Ij48ZW0+TGljZW5zZWQgTWFzc2FnZSBUaGVyYXBpc3Q8L2VtPjwvc3Bhbj48L3A+CiAgICAgICAgICAgIDxwPkNsaWVudCBhZ3JlZXMgYXMgZm9sbG93czo8L3A+CiAgICAgICAgICAgIDxvbD4KICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICBDbGllbnQgdW5kZXJzdGFuZHMgYW5kIGFncmVlcyB0aGF0IHRoZXkgd2lsbCBwcm92aWRlIHRoZSBUaGVyYXBpc3Qgd2l0aCBjb21wbGV0ZSBhbmQgYWNjdXJhdGUgaGVhbHRoIGluZm9ybWF0aW9uLCBhbmQgYSB3cml0dGVuIHJlZmVycmFsIGZyb20gQ2xpZW504oCZcyBwcmltYXJ5IGhlYWx0aGNhcmUgcHJvdmlkZXIgaWYgQ2xpZW50IGlzIGN1cnJlbnRseSByZWNlaXZpbmcgY2FyZSBvciBoYXMgYSBzcGVjaWZpYyBtZWRpY2FsIGNvbmRpdGlvbiBvciBzeW1wdG9tcyBmb3Igd2hpY2ggQ2xpZW50IHRha2VzIG1lZGljYXRpb24gb3IgcmVjZWl2ZXMgcGVyaW9kaWMgZXZhbHVhdGlvbnMgb3IgdHJlYXRtZW50LiBDbGllbnQgdW5kZXJzdGFuZHMgdGhhdCBtYXNzYWdlIHRoZXJhcHkgaXMgZGVzaWduZWQgdG8gYmUgYW4gYW5jaWxsYXJ5IGhlYWx0aCBhaWQgYW5kIGlzIG5vdCBzdWl0YWJsZSBmb3IgcHJpbWFyeSBtZWRpY2FsIHRyZWF0bWVudCBmb3IgYW55IGNvbmRpdGlvbi4gQ2xpZW50IGFuZCBUaGVyYXBpc3QgaGF2ZSBkaXNjdXNzZWQgdGhlIHBvdGVudGlhbCBiZW5lZml0cyBhbmQgcG9zc2libGUgc2lkZSBlZmZlY3RzIG9mIG1hc3NhZ2UgdGhlcmFweSBhbmQgaGF2ZSBhZ3JlZWQgdXBvbiBhIGNvdXJzZSBvZiBmb2N1c2VkIGF0dGVudGlvbiBhbmQgbWFudWFsbHkgdGhlcmFweSBmb3IgdGhlIHByZWRldGVybWluZWQgZ29hbHMgb2Ygc3RyZXNzIHJlZHVjdGlvbiwgcmVsaWVmIG9mIG11c2N1bGFyIGRpc2NvbWZvcnQsIGFuZC9vciBwcm9tb3Rpb24gb2YgZ2VuZXJhbCBoZWFsdGguIENsaWVudCBoYXMgYmVlbiBnaXZlbiBhbiBvcHBvcnR1bml0eSB0byBhc2sgcXVlc3Rpb25zIG9mIHRoZSBUaGVyYXBpc3QgYW5kIGhhcyByZWNlaXZlZCBhbGwgcmVxdWVzdGVkIGluZm9ybWF0aW9uLgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgQ2xpZW50IHVuZGVyc3RhbmRzIHRoYXQgdGhlIHVuY2xvdGhlZCBib2R5IHdpbGwgYmUgZHJhcGVkIGF0IGFsbCB0aW1lcyBmb3Igd2FybXRoLCBzZW5zZSBvZiBzZWN1cml0eSwgYW5kIGFzIGEgbWFyayBvZiBtYXNzYWdlIHRoZXJhcHkgcHJvZmVzc2lvbmFsaXNtLiBDbGllbnQgYWdyZWVzIHRvIGltbWVkaWF0ZWx5IGluZm9ybSB0aGUgVGhlcmFwaXN0IG9mIGFueSB1bnVzdWFsIHNlbnNhdGlvbiBvciBkaXNjb21mb3J0IHNvIHRoYXQgdGhlIGFwcGxpY2F0aW9uIG9mIHByZXNzdXJlIG1heSBiZSBhZGp1c3RlZCB0byBDbGllbnTigJlzIGxldmVsIG9mIGNvbWZvcnQuIENsaWVudCB1bmRlcnN0YW5kcyB0aGF0IG1hc3NhZ2UgdGhlcmFweSBpcyBub3Qgc2V4dWFsIGluIGFueSBtYW5uZXIgYW5kIHRoYXQgYW55IGlsbGljaXQgb3Igc3VnZ2VzdGl2ZSByZW1hcmtzIG9yIGJlaGF2aW9yIG9uIHRoZSBjbGllbnTigJlzIHBhcnQsIHdpbGwgcmVzdWx0IGluIGFuIGltbWVkaWF0ZSB0ZXJtaW5hdGlvbiBvZiB0aGUgdGhlcmFweSBzZXNzaW9uLiBDbGllbnQgdW5kZXJzdGFuZHMgdGhhdCBwYXltZW50IHdpbGwgYmUgZXhwZWN0ZWQgaW4gZnVsbDsgcmVnYXJkbGVzcyBpZiB0aGUgbWFzc2FnZSBpcyBjb21wbGV0ZWQgb3Igbm90LgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgQ2xpZW50IGhlcmVieSBhc3N1bWVzIGZ1bGx5IHJlc3BvbnNpYmlsaXR5IGZvciByZWNlaXB0IG9mIHRoZSBtYXNzYWdlIHRoZXJhcHksIGFuZCByZWxlYXNlcyBhbmQgZGlzY2hhcmdlcyBUaGVyYXBpc3QgZnJvbSBhbnkgYW5kIGFsbCBjbGFpbXMsIGxpYWJpbGl0aWVzLCBkYW1hZ2VzLCBhY3Rpb25zLCBvciBjYXVzZXMgb2YgYWN0aW9uIGFyaXNpbmcgZnJvbSB0aGUgdGhlcmFweSByZWNlaXZlZCBoZXJldW5kZXIsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgZGFtYWdlcyBhcmlzaW5nIGZyb20gYWN0cyBvZiBhY3RpdmUgb3IgcGFzc2l2ZSBuZWdsaWdlbmNlIG9uIHRoZSBwYXJ0IG9mIHRoZSBUaGVyYXBpc3QgLCB0byB0aGUgZnVsbGVzdCBleHRlbnQgYWxsb3dlZCBieSBsYXcuCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICBDbGllbnQgdW5kZXJzdGFuZHMgdGhhdCBlYWNoIGFwcG9pbnRtZW50IHRpbWUgaXMgZGVzaWduYXRlZCBmb3IgQ2xpZW50IGFuZCBhZ3JlZXMgdG8gYmUgcHJlcGFyZWQgdG8gc3RhcnQgc2Vzc2lvbiBhdCBhcHBvaW50bWVudCB0aW1lIG9yIGZvcmZlaXQgdGhlIHRpbWUgdGhhdCB0aGV5IGFyZSBub3QuCiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICBDbGllbnQsIGluIHNpZ25pbmcgdGhpcyBjb25zZW50IGZvciBUaGVyYXB5IGFuZCBXYWl2ZXIgb2YgTGlhYmlsaXR5ICjigJxDb25zZW504oCdKSwgdW5kZXJzdGFuZHMgYW5kIGFncmVlcyB0aGF0IHRoaXMgQ29uc2VudCB3aWxsIGFwcGx5IHRvIGFuZCBnb3Zlcm4gdGhlIGN1cnJlbnQgYW5kIGFsbCBmdXR1cmUgdGhlcmFweSBzZXNzaW9ucyBwZXJmb3JtZWQgYnkgVGhlcmFwaXN0CiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPC9vbD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCIgZGF0YS10eXBlPSJjb250cm9sX3NpZ25hdHVyZSIgaWQ9ImlkXzM1Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tbGFiZWwgZm9ybS1sYWJlbC10b3AiIGlkPSJsYWJlbF8zNSIgZm9yPSJpbnB1dF8zNSI+CiAgICAgICAgICBDbGllbnQgU2lnbmF0dXJlCiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yZXF1aXJlZCI+CiAgICAgICAgICAgICoKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8zNSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImhhbGYiPgogICAgICAgICAgPGRpdiBkYXRhLXdyYXBwZXItcmVhY3Q9InRydWUiPgogICAgICAgICAgICA8ZGl2IGlkPSJzaWduYXR1cmVfcGFkXzM1IiBjbGFzcz0ic2lnbmF0dXJlLXBhZC13cmFwcGVyIiBzdHlsZT0id2lkdGg6MzEycHg7aGVpZ2h0OjExNnB4Ij4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIj4KICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13cmFwcGVyLXJlYWN0PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgPCEtLVtpZiBJRSA3XT4KICAgICAgICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvdmVuZG9yL2pzb24yLmpzIj48L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpZ25hdHVyZS1saW5lIHNpZ25hdHVyZS13cmFwcGVyIHNpZ25hdHVyZS1wbGFjZWhvbGRlciIgZGF0YS1jb21wb25lbnQ9InNpZ25hdHVyZSIgc3R5bGU9IndpZHRoOjMxMnB4O2hlaWdodDoxMTZweCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InNpZ19wYWRfMzUiIGRhdGEtd2lkdGg9IjMxMCIgZGF0YS1oZWlnaHQ9IjExNCIgZGF0YS1pZD0iMzUiIGRhdGEtcmVxdWlyZWQ9InRydWUiIGNsYXNzPSJwYWQgdmFsaWRhdGVbcmVxdWlyZWRdIiBhcmlhLWxhYmVsbGVkYnk9ImxhYmVsXzM1Ij4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InEzNV9jbGllbnRTaWduYXR1cmUiIGNsYXNzPSJvdXRwdXQ0IiBpZD0iaW5wdXRfMzUiIC8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwiIGZvcj0ic2lnX3BhZF8zNSIgc3R5bGU9Im1pbi1oZWlnaHQ6MTNweCIgYXJpYS1oaWRkZW49ImZhbHNlIj4gVXNlIHlvdXIgbW91c2UgdG8gc2lnbiAob3IgeW91ciBmaW5nZXIgaWYgb24gbW9iaWxlKSA8L2xhYmVsPgogICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2xlYXItcGFkLWJ0biBjbGVhci1wYWQiIHJvbGU9ImJ1dHRvbiIgdGFiaW5kZXg9IjAiPgogICAgICAgICAgICAgICAgQ2xlYXIKICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGRhdGEtd3JhcHBlci1yZWFjdD0idHJ1ZSI+CiAgICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgIHdpbmRvdy5zaWduYXR1cmVGb3JtID0gdHJ1ZQogICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9ImZvcm0tbGluZSBqZi1yZXF1aXJlZCIgZGF0YS10eXBlPSJjb250cm9sX2Z1bGxuYW1lIiBpZD0iaWRfMzYiPgogICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1sYWJlbCBmb3JtLWxhYmVsLXRvcCIgaWQ9ImxhYmVsXzM2IiBmb3I9ImZpcnN0XzM2Ij4KICAgICAgICAgIENsaWVudCBOYW1lCiAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1yZXF1aXJlZCI+CiAgICAgICAgICAgICoKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxkaXYgaWQ9ImNpZF8zNiIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSBqZi1yZXF1aXJlZCIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPGRpdiBkYXRhLXdyYXBwZXItcmVhY3Q9InRydWUiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIiBkYXRhLWlucHV0LXR5cGU9ImZpcnN0Ij4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZpcnN0XzM2IiBuYW1lPSJxMzZfY2xpZW50TmFtZVtmaXJzdF0iIGNsYXNzPSJmb3JtLXRleHRib3ggdmFsaWRhdGVbcmVxdWlyZWRdIiBkYXRhLWRlZmF1bHR2YWx1ZT0iIiBhdXRvQ29tcGxldGU9InNlY3Rpb24taW5wdXRfMzYgZ2l2ZW4tbmFtZSIgc2l6ZT0iMTAiIHZhbHVlPSIiIGRhdGEtY29tcG9uZW50PSJmaXJzdCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8zNiBzdWJsYWJlbF8zNl9maXJzdCIgcmVxdWlyZWQ9IiIgLz4KICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tc3ViLWxhYmVsIiBmb3I9ImZpcnN0XzM2IiBpZD0ic3VibGFiZWxfMzZfZmlyc3QiIHN0eWxlPSJtaW4taGVpZ2h0OjEzcHgiIGFyaWEtaGlkZGVuPSJmYWxzZSI+IEZpcnN0IE5hbWUgPC9sYWJlbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZm9ybS1zdWItbGFiZWwtY29udGFpbmVyIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wIiBkYXRhLWlucHV0LXR5cGU9Imxhc3QiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ibGFzdF8zNiIgbmFtZT0icTM2X2NsaWVudE5hbWVbbGFzdF0iIGNsYXNzPSJmb3JtLXRleHRib3ggdmFsaWRhdGVbcmVxdWlyZWRdIiBkYXRhLWRlZmF1bHR2YWx1ZT0iIiBhdXRvQ29tcGxldGU9InNlY3Rpb24taW5wdXRfMzYgZmFtaWx5LW5hbWUiIHNpemU9IjE1IiB2YWx1ZT0iIiBkYXRhLWNvbXBvbmVudD0ibGFzdCIgYXJpYS1sYWJlbGxlZGJ5PSJsYWJlbF8zNiBzdWJsYWJlbF8zNl9sYXN0IiByZXF1aXJlZD0iIiAvPgogICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1zdWItbGFiZWwiIGZvcj0ibGFzdF8zNiIgaWQ9InN1YmxhYmVsXzM2X2xhc3QiIHN0eWxlPSJtaW4taGVpZ2h0OjEzcHgiIGFyaWEtaGlkZGVuPSJmYWxzZSI+IExhc3QgTmFtZSA8L2xhYmVsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJmb3JtLWxpbmUgZm9ybS1saW5lLWNvbHVtbiBmb3JtLWNvbC0xIiBkYXRhLXR5cGU9ImNvbnRyb2xfaW1hZ2UiIGlkPSJpZF80MCI+CiAgICAgICAgPGRpdiBpZD0iY2lkXzQwIiBjbGFzcz0iZm9ybS1pbnB1dC13aWRlIiBkYXRhLWxheW91dD0iZnVsbCI+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+CiAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJmb3JtLWltYWdlIiBzdHlsZT0iYm9yZGVyOjAiIHNyYz0iaHR0cHM6Ly93d3cuam90Zm9ybS5jb20vdXBsb2Fkcy9PdXJUaW1lRm9yVGVjaC9mb3JtX2ZpbGVzL3NpZ25hdHVyZV9mb3JfaW50YWtlX2Zvcm1fMi41ZmVlMmI0NWQ1OWM3NS42ODE3OTQ1Ny5wbmciIGhlaWdodD0iMTkxcHgiIHdpZHRoPSI0NDlweCIgZGF0YS1jb21wb25lbnQ9ImltYWdlIiAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIGZvcm0tbGluZS1jb2x1bW4gZm9ybS1jb2wtMiIgZGF0YS10eXBlPSJjb250cm9sX2ltYWdlIiBpZD0iaWRfNDEiPgogICAgICAgIDxkaXYgaWQ9ImNpZF80MSIgY2xhc3M9ImZvcm0taW5wdXQtd2lkZSIgZGF0YS1sYXlvdXQ9ImZ1bGwiPgogICAgICAgICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPgogICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0iZm9ybS1pbWFnZSIgc3R5bGU9ImJvcmRlcjowIiBzcmM9Imh0dHBzOi8vd3d3LmpvdGZvcm0uY29tL3VwbG9hZHMvT3VyVGltZUZvclRlY2gvZm9ybV9maWxlcy9uYW1lX2Zvcl9pbnRha2VfZm9ybS41ZmVlMmMyZTIyZmRjMi4zOTkzNzkyMC5wbmciIGhlaWdodD0iMTc0cHgiIHdpZHRoPSI0NTNweCIgZGF0YS1jb21wb25lbnQ9ImltYWdlIiAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0iZm9ybS1saW5lIiBkYXRhLXR5cGU9ImNvbnRyb2xfYnV0dG9uIiBpZD0iaWRfMiI+CiAgICAgICAgPGRpdiBpZD0iY2lkXzIiIGNsYXNzPSJmb3JtLWlucHV0LXdpZGUiIGRhdGEtbGF5b3V0PSJmdWxsIj4KICAgICAgICAgIDxkaXYgZGF0YS1hbGlnbj0iYXV0byIgY2xhc3M9ImZvcm0tYnV0dG9ucy13cmFwcGVyIGZvcm0tYnV0dG9ucy1hdXRvICAganNUZXN0LWJ1dHRvbi13cmFwcGVyRmllbGQiPgogICAgICAgICAgICA8YnV0dG9uIGlkPSJpbnB1dF8yIiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJmb3JtLXN1Ym1pdC1idXR0b24gc3VibWl0LWJ1dHRvbiBqZi1mb3JtLWJ1dHRvbnMganNUZXN0LXN1Ym1pdEZpZWxkIiBkYXRhLWNvbXBvbmVudD0iYnV0dG9uIiBkYXRhLWNvbnRlbnQ9IiI+CiAgICAgICAgICAgICAgU3VibWl0CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICBTaG91bGQgYmUgRW1wdHk6CiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9IndlYnNpdGUiIHZhbHVlPSIiIC8+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogIDwvZGl2PgogIDxzY3JpcHQ+CiAgSm90Rm9ybS5zaG93Sm90Rm9ybVBvd2VyZWQgPSAiMCI7CiAgPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICBKb3RGb3JtLnBvd2VyZWRCeVRleHQgPSAiUG93ZXJlZCBieSBKb3Rmb3JtIjsKICA8L3NjcmlwdD4KICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBjbGFzcz0ic2ltcGxlX3NwYyIgaWQ9InNpbXBsZV9zcGMiIG5hbWU9InNpbXBsZV9zcGMiIHZhbHVlPSIyMDM2NTQ2NDMzOTIwNTQiIC8+CiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogIHZhciBhbGxfc3BjID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiZm9ybVtpZD0nMjAzNjU0NjQzMzkyMDU0J10gLnNpIiArICJtcGxlIiArICJfc3BjIik7CmZvciAodmFyIGkgPSAwOyBpIDwgYWxsX3NwYy5sZW5ndGg7IGkrKykKewogIGFsbF9zcGNbaV0udmFsdWUgPSAiMjAzNjU0NjQzMzkyMDU0LTIwMzY1NDY0MzM5MjA1NCI7Cn0KICA8L3NjcmlwdD4KPC9mb3JtPjwvYm9keT4KPC9odG1sPgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uam90Zm9yLm1zLy9qcy92ZW5kb3Ivc21vb3Roc2Nyb2xsLm1pbi5qcz92PTMuMy4yOTM1MSI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qb3Rmb3IubXMvL2pzL2Vycm9yTmF2aWdhdGlvbi5qcz92PTMuMy4yOTM1MSI+PC9zY3JpcHQ+Cg==
    recorded_at: Wed, 06 Apr 2022 15:58:54 GMT
recorded_with: VCR 6.1.0
